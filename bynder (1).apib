FORMAT: 1A
HOST: https://your-bynder-domain/

# Bynder API

# Welcome to the Bynder API documentation
Bynder ([www.bynder.com](http://www.bynder.com)) is a Digital Asset Management solution that allows you to store, manage and share your assets. Using the Bynder API you can access assets, brands, collections and all their metadata fields as well as pointers to the file destinations.

**Note:** In case you have [Paw](https://paw.cloud/) or [Postman](https://www.postman.com/), you can download the following [Paw file](https://dam.bynder.com/m/297dd2dac4ae5900/Bynder-API.paw) or [Postman Collection](https://dam.bynder.com/m/5f2d178f1d6308bf/original/Bynder-Postman-Collection.json) which contain all of the API requests defined in this page.


# Changelog
## 2025

##### March
- Add `fileName` as part of the [Retrieve assets](#reference/assets/retrieve-assets) response.
- Added [Collection Views V2](#reference/analytics/collection-views-v2) section to the Analytics module, and deprecation notice to V1.
- Deprecated [Asset Download V2](#reference/analytics/asset-usage-v1/asset-download-v2), [Asset Create](#reference/analytics/asset-usage-v1/asset-create), and [Asset Create CSV](#reference/analytics/asset-usage-v1/asset-create-csv) endpoints.
- Added [Search for similar assets](#reference/assets/similar-assets-operations/search-for-similar-assets) endpoint.

##### January
- Renamed retrieve derivative presets Endpoint.
- Added new 2 endpoints to list and get derivative presets / account additionals [account additionals](#reference/account/retrieve-derivative-presets).
- Added the additionalId property as part of mediaitems response in [Retrieve assets](#reference/assets/asset-operations/retrieve-assets) and [Retrieve specific asset](#reference/assets/specific-asset-operations/retrieve-specific-asset).
- Added Asset Creations V2 into [Asset Usage V2](#reference/analytics/asset-usage-v2) section of the Analytics module.
- Removed deprecated Asset Views and Asset Downloads endpoint in [Asset Usage V1](#reference/analytics/asset-usage-v1).   

## 2024
##### December
- Added Asset Downloads V2 into [Asset Usage V2](#reference/analytics/asset-usage-v2) section of the Analytics module.
- Added [Upload assets modern stack](#reference/workflow-jobs/specific-job-operations/upload-assets-modern-stack/)
- Added [save a modern stack uploaded asset to a Workflow Job](#reference/workflow-jobs/specific-job-operations/save-uploaded-file-to-a-specific-job)
##### November
- Added [Retrieve users with pagination](#reference/workflow-users/user-operations/retrieve-users-with-pagination)

##### September
- Added [Retrieve stages of specific job](#reference/workflow-jobs/specific-job-operations/retrieve-stages-of-specific-job)
- Added [Retrieve specific stage](#reference/workflow-jobs/specific-stage-operations/retrieve-specific-stage)
- Added [Modify stage](#reference/workflow-jobs/specific-stage-operations/modify-stage)
- Added `dateFinished` field to [Retrieve jobs](#reference/workflow-jobs/job-operations/retrieve-jobs), [Retrieve the jobs of a specific campaign](#reference/workflow-jobs/job-operations/retrieve-the-jobs-of-a-specific-campaign) and [Retrieve specific job](#reference/workflow-jobs/specific-job-operations/retrieve-specific-job) endpoints.
- Added [Finish job](#reference/workflow-jobs/specific-job-operations/finish-job)
- Added [Retrieve specific users](#reference/workflow-users/user-operations/retrieve-specific-users)

##### August
- Expanded sharing rights in `collectionOptions` when [sharing a collection](#reference/collections/specific-collection-operations/share-collection) to show View only and Download watermarked assets options.
- Added the option to edit the custom thumbnail of a collection in [Modify Collection](#reference/collections/specific-collection-operations/modify-collection) endpoint.

##### July
Added `jobKey` field to [Retrieve jobs](#reference/workflow-jobs/job-operations/retrieve-jobs), [Retrieve the jobs of a specific campaign](#reference/workflow-jobs/job-operations/retrieve-the-jobs-of-a-specific-campaign) and [Retrieve specific job](#reference/workflow-jobs/specific-job-operations/retrieve-specific-job) endpoints.
Added `jobFinishedHistory` field to [Retrieve jobs](#reference/workflow-jobs/job-operations/retrieve-jobs), [Retrieve the jobs of a specific campaign](#reference/workflow-jobs/job-operations/retrieve-the-jobs-of-a-specific-campaign) and [Retrieve specific job](#reference/workflow-jobs/specific-job-operations/retrieve-specific-job) endpoints.

##### May
Added [Asset Usage V2](#reference/analytics/asset-usage-v2) section to the Analytics module.

##### April
- Migrated antivirus endpoints to quarantine endpoint

##### March
- Added option to [Close Workflow Campaign](#reference/workflow-campaigns/specific-campaign-operations/close-campaign).
- Added [Antivirus audit](#reference/antivirus-audit) endpoint to Antivirus module
- Added [Antivirus asset](#reference/antivirus-asset) endpoint to Antivirus module to retrieve an asset based on id

##### January
- Added `isSSOOnly` field to [Retrieve specific user](#reference/users/specific-user-operations/retrieve-specific-user), [Retrieve current user](#reference/users/current-user-operations/retrieve-current-user), [Create user](#reference/users/user-operations/create-user) and [Modify user](#reference/users/specific-user-operations/modify-user) endpoints

##### January
- Added possibility to set an externalReference on options in the metaproperty API [Create metaproperty option](#reference/metaproperties/metaproperty-operations/create-option) and [Update metaproperty option](#reference/metaproperties/metaproperty-operations/modify-option). This can be used as a replacement for the name as it doesn't have the same limitations with regards to allowed characters and is always editable. In the future this will fully replace the name attribute.

## 2023
##### December
- Added [Asset Download V2](#reference/analytics/asset-usage/asset-download-v2) enpoint to the Analytics module.

##### August
- Changed HTTP error code for Rate limits from HTTP 400 Forbidden to HTTP 429 Too Many Requests.
- Removed references to OAuth1 and Permanent Tokens as we are starting the deprecation process for these authentication methods. Communication regarding timelines for this will be done via the standard customer communication processes when a timeline has been decided on.

##### June
- Added [Historical Data](#reference/analytics/historical-data) section to the Analytics module.

##### May
- Removed deprecated [Search Keyword](#reference/analytics/search-usage/search-keyword) endpoints.

##### March
- Added [Search](#reference/analytics/search-usage) section to the Analytics module. [Search Executions](#reference/analytics/search-usage/search-executions) endpoints.
- Added timeZone field to [Retrieve specific user](#reference/users/specific-user-operations/retrieve-specific-user) and [Retrieve current user](#reference/users/current-user-operations/retrieve-current-user) responses.
- Added [Collection](#reference/analytics/collection-usage) section to the Analytics module. [Collection Views](#reference/analytics/collection-usage/collection-views) endpoints.
- Added [Reporting](#reference/analytics/reporting) section to the Analytics module. [Asset Reports](#reference/analytics/reporting/asset-reports) and [Specific Asset Report](#reference/analytics/reporting/specific-asset-report) endpoints.

##### February
- Changed cursor format in all [Analytics endpoints](#reference/analytics). The behaviour and usage remains the same.
- Added `externalReference` that is available in new taxonomy to [Retrieve metaproperty options by ids](#reference/metaproperties/metaproperty-option-operations/retrieve-metaproperty-options-by-ids) and [Retrieve metaproperty options](#reference/metaproperties/metaproperty-option-operations/retrieve-metaproperty-options)
- Removed `showInDuplicateView` from metaproperty API [Create metaproperty](#reference/metaproperties/metaproperty-operations/create-metaproperty) and [Update metaproperty](#reference/metaproperties/metaproperty-operations/modify-metaproperty)

##### January
- Removed `showInListView` and `showInGridView` from metaproperty API [Create metaproperty](#reference/metaproperties/metaproperty-operations/create-metaproperty) and [Update metaproperty](#reference/metaproperties/metaproperty-operations/modify-metaproperty)

## 2022

##### December
- Added id to response of [Create metaproperty](#reference/metaproperties/metaproperty-operations/create-metaproperty), [Create metaproperty option](#reference/metaproperties/metaproperty-option-operations/create-metaproperty-option) and [Create option group](#reference/metaproperty-option-dependencies/create-metaproperty-option-dependency-group/create-dependency-group)

##### October
- Added [Asset Create](#reference/analytics/asset-usage/asset-create), [Asset Remove](#reference/analytics/asset-usage/asset-remove), [Asset Archive](#reference/analytics/asset-usage/asset-archive), [Search Keyword](#reference/analytics/search-usage/search-keyword) and [User Login](#reference/analytics/user-usage/user-login) enpoints to the Analytics module.
- Added [Asset Activity](#reference/analytics/asset-usage/asset-activity) and [User Activity](#reference/analytics/user-usage/user-activity) enpoints to the Analytics module.

##### August
- Removed deprecated metaproperty `isSearchable` from metaproperty responses, the metaproperty is always searchable.
- Added [Analytics](#reference/analytics) module.
- Added [Asset View](#reference/analytics/asset-usage/asset-view) and [Asset Download](#reference/analytics/asset-usage/asset-download) endpoints to the Analytics module.

##### June
- Added profileId field to [Retrieve users](#reference/users/user-operations/retrieve-users) response.

##### March
- Added [endpoints](#reference/access-rights) for metaproperty visibility restrictions.

## 2021
##### August
- Added responsible, accountable and status filters and to [Retrieve jobs](#reference/workflow-jobs/job-operations/retrieve-jobs) and [Retrieve the jobs of a specific campaign](#reference/workflow-jobs/job-operations/retrieve-the-jobs-of-a-specific-campaign) endpoints

##### June
- Added [Dynamic Asset Transformations](#reference/dynamic-asset-transformations)
- Updated the response body of [Retrieve assets](#reference/assets/asset-operations/retrieve-assets) with `transformBaseUrl`.
- Updated the response body of [Retrieve specific asset](#reference/assets/specific-asset-operations/retrieve-specific-asset) with `transformBaseUrl`.

##### May
- Added [Retrieve media of specific job](#reference/workflow-jobs)

##### February
- Added [Add options to asset](#reference/assets/asset-metaproperty-options/add-metaproperty-options) endpoint.
- Added [Remove options from asset](#reference/assets/asset-metaproperty-options/delete-metaproperty-options) endpoint.

## 2020
##### October
- Updated the [OAuth2.0 section](#reference/oauth-2.0) with more information on the endpoints and new Client Credentials grant type.

##### July
- Added [Retrieve groups](#reference/groups/group-operations/retrieve-groups) endpoint
- Added `groupids` parameter to [Create user](#reference/users/user-operations/create-user) and [Modify user](#reference/users/specific-user-operations/modify-user) endpoints

##### May
- Added pagination options to [Retrieve users](#reference/users/user-operations/retrieve-users)

##### April
- Added booking time output to [Retrieve jobs](#reference/workflow-jobs/job-operations/retrieve-jobs) and [Retrieve specific job](#reference/workflow-jobs/specific-job-operations/retrieve-specific-job)

##### February
- Added `limited` and `limitedDate` attributes to [Modify specific asset](#reference/assets/specific-asset-operations/modify-specific-asset) endpoint
- Added `limited` parameter and undocumented `keyVisual` parameter in [Retrieve assets](#reference/assets/asset-operations/retrieve-assets) endpoint (`keyVisual` remains working for backwards compatibility)
- Added `includeVersionNumber` parameter to the [Retrieve assets](#reference/assets/asset-operations/retrieve-assets) endpoint

##### January
- Added user information to [Retrieve collections](#reference/collections/collection-operations/retrieve-collections) and [Retrieve specific collection](#reference/collections/specific-collection-operations/retrieve-specific-collection) calls
- Added filtering and pagination options to [Retrieve jobs](#reference/workflow-jobs/job-operations/retrieve-jobs) and [Retrieve the jobs of a specific campaign](#reference/workflow-jobs/job-operations/retrieve-the-jobs-of-a-specific-campaign) endpoints

## 2019
##### December
- Added `3d` as possible value for asset type to [Retrieve assets](#reference/assets/asset-operations/retrieve-assets) and [Retrieve metaproperties](#reference/metaproperties/metaproperty-operations/retrieve-metaproperties) calls
- Added `integration_id` and `uri` parameters to [Retrieve asset usage](#reference/asset-usage/asset-usage-operations/retrieve-asset-usage)
- Added new call: [Sync asset usage](#reference/asset-usage/sync-asset-usage/sync-asset-usage)

##### November
- Added `stats` parameter to the [Retrieve specific asset](#reference/assets/specific-asset-operations/retrieve-specific-asset) call to return information about the asset views and downloads

##### September
- Added [OAuth 2.0](#reference/oauth-2.0) section
- Added [OAuth scopes](#introduction/oauth-scopes) mapping documentation
- Added security roles/permissions mapping information to [Security roles](#reference/security-roles) section
- Added `isDisplayField`, `isDrilldown`, `showInListView`, `showInGridView`, `showInDuplicateView` and `useDependencies` attributes to [Retrieve metaproperties](#reference/metaproperties/metaproperty-operations/retrieve-metaproperties) and [Retrieve specific metaproperty](#reference/metaproperties/specific-metaproperty-operations/retrieve-specific-metaproperty) calls
- Added `isApiField`, `isDisplayField`, `isDrilldown`, `isSearchable`, `showInListView`, `showInGridView`, `showInDuplicateView` and `useDependencies` attributes to the data object in [Create metaproperty](#reference/metaproperties/metaproperty-operations/create-metaproperty) and [Modify metaproperty](#reference/metaproperties/specific-metaproperty-operations/modify-metaproperty)

##### August
- Added missing security roles information
- Added [Product layer metaproperties section](#reference/product-layer-metaproperties)
- Added [Workflow campaigns section](#reference/workflow-campaigns)
- Added [Workflow jobs section](#reference/workflow-jobs)
- Added [Workflow metaproperties section](#reference/workflow-metaproperties)
- Added [Workflow users section](#reference/workflow-users)
- Added [Workflow groups section](#reference/workflow-groups)
- Added missing calls to [Brandstore section](#reference/brandstore)

##### July
- Added SOLR cursor documentation to [Retrieve assets](#reference/assets/asset-operations/retrieve-assets) call

##### June
- Corrected responses Content-type in the [Register every uploaded chunk](#reference/upload-assets/3-upload-file-in-chunks-and-register-every-uploaded-chunk/register-uploaded-chunk) and [Get closest AmazonS3 upload endpoint](#reference/upload-assets/1-get-closest-amazons3-upload-endpoint/get-closest-amazons3-upload-endpoint) calls

##### May
- Added new `isOpenImageBank` attribute to [Retrieve Account Information](#reference/account/account-operations/retrieve-account-information) response

##### February
- Added `username` attribute to [Modify user](#reference/users/specific-user-operations/modify-user) call
- Updated attributes information in [Create user](#reference/users/manage-users/create-user) call

##### January
- Added pagination parameters (`limit` and `page`) to the [Retrieve metaproperty options](#reference/metaproperties/metaproperty-option-operations/retrieve-metaproperty-options) call

## 2018
##### November
- Added `ids` parameter information to the [Retrieve metaproperties](#reference/metaproperties/metaproperty-operations/retrieve-metaproperties) call
- Updated information about attributes for [Upload file in chunks and register every uploaded chunk](#reference/upload-assets/3-upload-file-in-chunks-and-register-every-uploaded-chunk) call
- Added all public video derivatives to [Retrieve specific asset](#reference/assets/specific-asset-operations/retrieve-specific-asset) and [Retrieve assets](#reference/assets/asset-operations/retrieve-assets) responses

##### October
- Added `ids` parameter information to the [Retrieve collections](#reference/collections/collection-operations/retrieve-collections) call

##### September
- Added `id` parameter information to the [Retrieve assets](#reference/assets/asset-operations/retrieve-assets) call

##### August
- Changed default order to relevance when passing a keyword to the [Assets](#reference/assets) call
- Added `minCount` parameter to the [Retrieve collections](#reference/collections/collection-operations/retrieve-collections) call
- Added new `icon` attribute to the [Retrieve smartfilters](#reference/smartfilters/smartfilters-operations/retrieve-smartfilters) response
- Added new `zindex` attribute to the [Retrieve smartfilters](#reference/smartfilters/smartfilters-operations/retrieve-smartfilters) response
- Added documentation about how to include the URL to the orginal asset file in the response of the [Retrieve assets](#reference/assets/asset-operations/retrieve-assets) call

##### July
- Fixed documentation about `id` parameter for [Register uploaded chunk](#reference/upload-assets/3-upload-file-in-chunks-and-register-every-uploaded-chunk/register-uploaded-chunk) call
- Updated information about `limit` parameter in [Retrieve all tags](#reference/tags/retrieve-tags/retrieve-all-tags) call
- Added new 400 response information to [Initialise upload](#reference/upload-assets/2-initialise-upload/initialise-upload) call
- Added new `isPublic` attribute to the [Modify collection](#reference/collections/specific-collection-operations/modify-collection) call
- Added new `includeMediaItems` parameter to the [Retrieve assets](#reference/assets/asset-operations/retrieve-assets) call
- Added new "groups" property to the [Retrieve users](#reference/users/manage-users/retrieve-users) and [Retrieve specific user](#reference/users/specific-user-operations/retrieve-specific-user) responses
- Added new `isPublic` parameter to the [Retrieve collections](#reference/collections/collection-operations/retrieve-collections) call
- Added link to Paw file
- Added information about the response returned after a successful login in [Authorise & Authenticate](#reference/oauth-1.0a/2-authorise-authenticate/authorise-&-authenticate) section

##### June
- Added information about views and downloads properties being deprecated in [Assets](#reference/assets) section

##### May
- Added the "Create Permanent access token pairs" section
- Updated the [Modify user](#reference/users/specific-user-operations/modify-user) call

##### April
- Added `accessType` parameter to [Save as a new asset](#reference/upload-assets/6-saving-a-completed-upload/save-as-a-new-asset) call

## 2017
- Added the [Smartfilters](#reference/smartfilters) section
- Added the [Retrieve smartfilters](#reference/smartfilters/smartfilters-operations/retrieve-smartfilters) call
- Added `mincount` parameter to the [Retrieve all tags](#reference/tags/retrieve-tags/retrieve-all-tags) call
- Added the [Retrieve metaproperty options by name](#reference/metaproperties/specific-metaproperty-operations/retrieve-metaproperty-options-by-name) call
- Added `total` parameter to [Retrieve assets](#reference/assets/asset-operations/retrieve-assets) call
- Added missing `relatedAssets` information to the [Retrieve specific asset](#reference/assets/specific-asset-operations/retrieve-specific-asset) response
- Renamed `OUTPUT` to `output` in the [Finalise a completely uploaded file](#reference/upload-assets/4-finalise-a-completely-uploaded-file/finalise-a-completely-uploaded-file) call
- Added the [Trash](#reference/trash) section
- Added the [Retrieve recently removed assets](#reference/trash/trash-operations/retrieve-recently-removed-assets) call
- Added `accessRequestId` parameter to [Save as a new asset](#reference/upload-assets/6-saving-a-completed-upload/save-as-a-new-asset) call
- Renamed `location` to `uri` in [Asset usage](#reference/asset-usage) section
- Added missing Bynder support link to the [Asset usage](#reference/asset-usage) section
- Updated parameter `property_METAPROPERTY_NAME` in the [Retrieve assets](#reference/assets/asset-operations/retrieve-assets)
- Added the [Asset usage](#reference/asset-usage) section
- Added `isPublic` parameter to [Retrieve assets](#reference/assets/asset-operations/retrieve-assets)
- Added `type` parameter to [Retrieve metaproperties](#reference/metaproperties/metaproperty-operations/retrieve-metaproperties)
- Added the [Derivatives](#reference/account/derivative-operations/retrieve-derivatives) section
- Added the [Limit on requests](#introduction/limit-on-requests) section
- Added the [Modify collection](#reference/collections/specific-collection-operations/modify-collection) call
- Added the `limit`, `page`, `orderBy` and `keyword` parameters to the [Retrieve tags](#reference/metaproperty-option-dependencies/manage-option-dependency-in-dependency-group/retrieve-all-tags) call
- Changed the `isPublic` attribute value for the various media responses from true/false to 1/0
- Added the `isApiField` attribute to the responses of the "Retrieve metaproperties" and "Retrieve specific metaproperty" calls
- Added new `keyword` attribute to the "retrieve collections" call
- Added missing `image` attribute to meta option responses
- Updated "Save as a new asset version" call response
- Changed the asset isPublic response values to true/false
- Added the `original` attribute to the different asset call responses
- Added the `isPublic` attribute to the different asset calls
- Added a warning about the MARKPUBLIC security role to the "Modify asset" call
- Updated the "Save as a new asset" call
- Updated responses of the "create metaproperty dependency group" call
- Updated responses of the "create metaproperty option" call
- Corrected the responses of the "Save as a new asset" call
- Added required attributes to the "Finalise a completely uploaded file and save as a new asset additional" call
- Updated the upload settings concerning required security roles
- Added the call for saving a uploaded file as an asset additional
- Added retrieve security profile by id call
- Added collection `count` parameter
- Rewrite of login and authentication calls
- Added isMultifilter parameter for metaproperty calls
- Added `orderBy` parameter to the retrieve collections call
- Added `dateCreatedTo` and `dateModifiedTo` parameters for asset retrieval request
- Save a new media: deprecate locale-specific publicationDate and add ISOPublicationDate with ISO8601 format like other calls
- Added some notes to multipart uploads

## 2016
- Semantic fixes where parameters were not correctly shown
- Changed save entry point for specific users operation (docs were wrong)
- Media edit / media save
    - Added parameter `watermarkDate`
    - Added parameter `archiveDate`
- Retrieve Collection
    - Added parameter `limit`
    - Added parameter `page`
- Media Access Call
    - Added new orderBy metaproperty examples
- Added brandstore order resources
- Added currentUser entry point
- Added tags to /media, /media/?count=1, /media/id/ responses
- Added Token chapter
- Updated /media/ Response
- Included data for `count=1` parameter
    - Included data for userCreated
    - Added new metaproperty ids, provide a comma delimited list of mediaIds you want returned
- Updated /collections/ Response
    - Included data for collection cover thumbnails
- Updated /download/ Response
    - Included data for views
    - Included data for downloads
    - Included data for disclaimer
- Updated /users/[id]/ Response
    - Included data for language
    - Included data for terms
- Added /account/ entry point
    - Included account data
- Retrieve user SSO login token
    - Added new call to request specified user login tokens
- Edit Media
    - Added `tags` parameter

## 2015
- Retrieve Media
    - Added parameter `dateCreated`
    - Added parameter `dateCreatedOn`
    - Added parameter `dateModifiedOn`
    - Removed most URL params from POST calls to ensure proper passing of params in each call
- Saving New Media
    - Added parameter `audit`


# Definitions
- **Consumer**
    - Consists of a key and secret.
    - A website or application that uses OAuth to access the service provider on behalf of the user.
- **Request token pair**
    - A temporary valid token pair consisting of token and secret.
    - Used by the consumer to obtain authorization from the user, and exchanged for an access token pair.
- **Access token pair**
    - A token pair consisting of token and secret.
    - Used by the consumer to gain access to the protected Bynder API calls.

# Authorization
Bynder supports only one type of authorization protocol to authorize API calls:
- [OAuth 2.0](https://oauth.net/2/) using an Authorization Header with a bearer access token in a JWT format.

# OAuth scopes
The scope limits an OAuth access token to only access data the user has consented to in the
consent page. These are passed during the flow which is described in the
[OAuth 2.0 section](#reference/oauth-2.0/). Additionally, Bynder will only grant the scopes
which the user has the required permissions for. To see what permissions are required for
each scope, see the [Retrieve scopes](#reference/oauth-2.0/scopes-endpoint/retrieve-scopes) endpoint.

Below is the list of scopes and which API operation(s) require them:

| Scope | Operation(s) |
| -------  | -------- |
| admin.profile:read | [Retrieve security profiles](#reference/security-roles/security-profile-operations/retrieve-security-profiles)<br>[Retrieve specific security profile](#reference/security-roles/specific-security-profile-operations/retrieve-specific-security-profile) |
| admin.user:read | [Retrieve users](#reference/users/user-operations/retrieve-users)<br>[Retrieve specific user](#reference/users/specific-user-operations/retrieve-specific-user)<br>[Retrieve user specific temporary access token](#reference/users/retrieve-user-specific-temporary-access-token/retrieve-user-specific-temporary-access-token)<br>[Retrieve users **(Workflow)**](#reference/workflow-users/user-operations/retrieve-users-with-pagination) |
| admin.user:write | [Create user](#reference/users/user-operations/create-user)<br>[Modify user](#reference/users/specific-user-operations/modify-user)<br>[Delete user](#reference/users/specific-user-operations/delete-user) |
| current.profile:read | [Retrieve specific security profile](#reference/security-roles/specific-security-profile-operations/retrieve-specific-security-profile) |
| current.user:read | [Retrieve current user](#reference/users/current-user-operations/retrieve-current-user) |
| asset:read | [Retrieve assets](#reference/assets/asset-operations/retrieve-assets)<br>[Retrieve specific asset](#reference/assets/specific-asset-operations/retrieve-specific-asset)<br>[Retrieve asset download location](#reference/download/download-operations/retrieve-asset-download-location)<br>[Retrieve asset version download location](#reference/download/download-asset-version/retrieve-asset-version-download-location)<br>[Retrieve specific asset item download location](#reference/download/download-specific-asset-item/retrieve-specific-asset-item-download-location)<br>[Retrieve recently removed assets](#reference/trash/trash-operations/retrieve-recently-removed-assets)<br>[Search for similar assets](#reference/assets/similar-assets-operations/search-for-similar-assets) |
| asset:write | [Modify asset](#reference/assets/specific-asset-operations/modify-asset)<br>[Delete asset](#reference/assets/specific-asset-operations/delete-asset)<br>[Add tag to assets](#reference/tags/tag-operations-on-assets/add-tag-to-assets)<br>[Remove tag from assets](#reference/tags/tag-operations-on-assets/remove-tag-from-assets)<br>[Save as new asset](#reference/upload-assets/6-saving-a-completed-upload/save-as-a-new-asset)<br>[Save as a new asset version](#reference/upload-assets/6-saving-a-completed-upload/save-as-a-new-asset-version) |
| asset.usage:read | [Retrieve asset usage](#reference/asset-usage/asset-usage-operations/retrieve-asset-usage) |
| asset.usage:write |[Create asset usage](#reference/asset-usage/asset-usage-operations/create-asset-usage)<br>[Delete asset usage](#reference/asset-usage/asset-usage-operations/delete-asset-usage) |
| collection:read | [Retrieve collections](#reference/collections/collection-operations/retrieve-collections)<br>[Retrieve specific collection](#reference/collections/specific-collection-operations/retrieve-specific-collection)<br>[Retrieve the assets of a specific collection](#reference/collections/asset-operations-on-a-collection/retrieve-the-assets-of-a-specific-collection) |
| collection:write | [Create collection](#reference/collections/collection-operations/create-collection)<br>[Modify collection](#reference/collections/specific-collection-operations/modify-collection)<br>[Delete collection](#reference/collections/specific-collection-operations/delete-collection)<br>[Share collection](#reference/collections/share-collection-operations/share-collection)<br>[Add assets to a collection](#reference/collections/asset-operations-on-a-collection/add-assets-to-a-collection)<br>[Remove assets from a collection](#reference/collections/asset-operations-on-a-collection/remove-assets-from-a-collection) |
| meta.assetbank:read | [Retrieve metaproperties](#reference/metaproperties/metaproperty-operations/retrieve-metaproperties)<br>[Retrieve specific metaproperty](#reference/metaproperties/specific-metaproperty-operations/retrieve-specific-metaproperty)<br>[Retrieve metaproperty dependencies](#reference/metaproperties/metaproperty-dependency-operations/retrieve-metaproperty-dependencies)<br>[Retrieve metaproperty options by ids](#reference/metaproperties/metaproperty-option-operations/retrieve-metaproperty-options-by-ids)<br>[Retrieve metaproperty options](#reference/metaproperties/metaproperty-option-operations/retrieve-metaproperty-options)<br>[Retrieve global option dependencies](#reference/metaproperty-option-dependencies/retrieve-all-metaproperty-option-dependencies-globally/retrieve-global-option-dependencies)<br>[Retrieve metaproperty option dependencies](#reference/metaproperty-option-dependencies/retrieve-all-metaproperty-option-dependencies-for-a-metaproperty/retrieve-metaproperty-option-dependencies)<br>[Retrieve specific metaproperty option dependencies](#reference/metaproperty-option-dependencies/retrieve-options-a-metaproperty-option-depends-on/retrieve-specific-metaproperty-option-dependencies)<br>[Retrieve metaproperties **(PIM)**](#reference/product-layer-metaproperties/metaproperty-operations/retrieve-metaproperties)<br>[Retrieve specific metaproperty **(PIM)**](#reference/product-layer-metaproperties/specific-metaproperty-operations/retrieve-specific-metaproperty)<br>[Retrieve metaproperty options **(PIM)**](#reference/product-layer-metaproperties/metaproperty-option-retrieve-operations/retrieve-metaproperty-options) |
| meta.assetbank:write | [Create metaproperty](#reference/metaproperties/metaproperty-operations/create-metaproperty)<br>[Modify metaproperty](#reference/metaproperties/specific-metaproperty-operations/modify-metaproperty)<br>[Delete metaproperty](#reference/metaproperties/specific-metaproperty-operations/delete-metaproperty)<br>[Create dependency](#reference/metaproperties/specific-metaproperty-dependency-operations/create-dependency)<br>[Delete dependency](#reference/metaproperties/specific-metaproperty-dependency-operations/delete-dependency)<br>[Create metaproperty option](#reference/metaproperties/metaproperty-option-operations/create-metaproperty-option)<br>[Modify metaproperty option](#reference/metaproperties/specific-metaproperty-option-operations/modify-metaproperty-option)<br>[Delete metaproperty option](#reference/metaproperties/specific-metaproperty-option-operations/delete-metaproperty-option)<br>[Add a dependency](#reference/metaproperty-option-dependencies/manage-ungrouped-metaproperty-option-dependencies/add-a-dependency)<br>[Delete a dependency](#reference/metaproperty-option-dependencies/manage-ungrouped-metaproperty-option-dependencies/delete-a-dependency)<br>[Create dependency group](#reference/metaproperty-option-dependencies/create-metaproperty-option-dependency-group/create-dependency-group)<br>[Modify dependency group](#reference/metaproperty-option-dependencies/specific-metaproperty-option-dependency-group-operations/modify-dependency-group)<br>[Delete dependency group](#reference/metaproperty-option-dependencies/specific-metaproperty-option-dependency-group-operations/delete-dependency-group)<br>[Add a dependency option to a group](#reference/metaproperty-option-dependencies/manage-option-dependency-in-dependency-group/add-a-dependency-option-to-a-group)<br>[Remove a dependency option from a group](#reference/metaproperty-option-dependencies/manage-option-dependency-in-dependency-group/remove-a-dependency-option-from-a-group)<br>[Modify metaproperty option **(PIM)**](#reference/product-layer-metaproperties/metaproperty-option-modify-operations/modify-metaproperty-option) |
| meta.workflow:read | [Retrieve metaproperties](#reference/workflow-metaproperties/metaproperty-operations/retrieve-metaproperties)<br>[Retrieve specific metaproperty](#reference/workflow-metaproperties/specific-metaproperty-operations/retrieve-specific-metaproperty) |
| workflow.campaign:read | [Retrive campaigns](#reference/workflow-campaigns/campaign-operations/retrieve-campaigns)<br>[Retrieve specific campaign](#reference/workflow-campaigns/specific-campaign-operations/retrieve-specific-campaign) |
| workflow.campaign:write | [Create campaign](#reference/workflow-campaigns/campaign-operations/create-campaign)<br>[Modify campaign](#reference/workflow-campaigns/specific-campaign-operations/modify-campaign)<br>[Delete campaign](#reference/workflow-campaigns/specific-campaign-operations/delete-campaign)<br>[Close campaign](#reference/workflow-campaigns/specific-campaign-operations/close-campaign) |
| workflow.group:read | [Retrieve groups](#reference/workflow-groups/groups-operations/retrieve-groups)<br>[Retrieve specific group](#reference/workflow-groups/specific-group-operations/retrieve-specific-group) |
| workflow.group:write | [Create group](#reference/workflow-groups/groups-operations/create-group)<br>[Modify group](#reference/workflow-groups/specific-group-operations/modify-group)<br>[Delete group](#reference/workflow-groups/specific-group-operations/delete-group) |
| workflow.job:read | [Retrieve jobs](#reference/workflow-jobs/job-operations/retrieve-jobs)<br>[Retrieve the jobs of a specific campaign](#reference/workflow-jobs/job-operations/retrieve-the-jobs-of-a-specific-campaign)<br>[Retrieve specific job](#reference/workflow-jobs/specific-job-operations/retrieve-specific-job)<br>[Retrieve specific stage](#reference/workflow-jobs/specific-stage-operations/retrieve-specific-stage)<br>[Retrieve stages of specific job](#reference/workflow-jobs/specific-job-operations/retrieve-stages-of-specific-job)<br>[Finish job](#reference/workflow-jobs/specific-job-operations/finish-job) |
| workflow.job:write | [Create job](#reference/workflow-jobs/job-operations/create-job)<br>[Modify job](#reference/workflow-jobs/specific-job-operations/modify-job)<br>[Delete job](#reference/workflow-jobs/specific-job-operations/delete-job)<br>[Modify stage](#reference/workflow-jobs/specific-stage-operations/modify-stage) |
| workflow.job:approve | [Finish job](#reference/workflow-jobs/specific-job-operations/finish-job)
| workflow.preset:read | [Retrieve specific job preset](#reference/workflow-jobs/job-preset-operations/retrieve-specific-job-preset) |
| brandstore.order:read | [Retrieve orders](#reference/brandstore/order-operations/retrieve-orders)<br>[Retrieve specific order info](#reference/brandstore/specific-order-operations/retrieve-specific-order-info)<br>[Retrieve specific order by id](#reference/brandstore/specific-order-operations/retrieve-specific-order-by-id)<br>[Retrieve specific order by number](#reference/brandstore/specific-order-operations/retrieve-specific-order-by-number)<br>[Retrieve specific orderline](#reference/brandstore/specific-orderline-operations/retrieve-specific-orderline) |
| brandstore.order:write | [Modify orderline](#reference/brandstore/specific-orderline-operations/modify-orderline) |
| analytics.api:read | [Analytics API read access](#reference/analytics) |
| antivirus.asset.audit:read | [Retrieve a list of quarantined assets](#reference/antivirus/retrieve-a-list-of-quarantined-assets/retrieve-a-list-of-quarantined-assets)<br>[Retrieve a quarantined asset by id](#reference/antivirus/retrieve-a-quarantined-asset-by-id/retrieve-a-quarantined-asset-by-id) |
| antivirus.asset.audit:write | [Update review status by id](#reference/antivirus/retrieve-a-quarantined-asset-by-id/update-review-status-by-id)<br>[Update review status by list of asset Ids](#reference/antivirus/update-review-status-by-list-of-asset-ids/update-review-status-by-list-of-asset-ids) |
| webhooks.config:read | [Retrieve Webhook configurations](/#reference/webhooks/retrieve-webhooks-configurations/get-webhook-configurations)
| webhooks.config:write | [Create a Webhook configuration](#reference/webhooks/webhooks-configuration-operations/create-a-webhook-configuration)<br>[Update a Webhook configuration](#reference/webhooks/webhooks-configuration-operations/update-a-webhook-configuration)<br>[Patch a Webhook configuration](#reference/webhooks/webhooks-configuration-operations/patch-a-webhook-configuration)<br>[Delete a Webhook configuration](#reference/webhooks/webhooks-configuration-operations/delete-a-webhook-configuration) |

# Limit on requests
We applied API rate limiting to ensure that our API resources are not consumed excessively, so that all our clients can utilize our API seamlessly.
We allow a number of 4500 requests in any five-minute time frame from a single IP address. When you have reached the maximum number of allowed requests the exceeding requests will be blocked. When a request is rejected you will receive the 429 (Too Many Requests) error returned via the API. If five minutes pass with no requests coming from your IP address we will lift the block and you will be able to send API requests again.

# Note on identifiers
Bynder uses two types of UUIDs:
- In the ColdFusion format, for the **/api/v4** requests, they are grouped in 4 groups with the pattern 8-4-4-16. Example: 00000000-0000-0000-0000000000000000.
- In the version 4 format, for the **/api** requests (without /v4), they are grouped in 5 groups with the pattern 8-4-4-4-12. Example: 00000000-0000-0000-0000-000000000000.


# Group OAuth 2.0
In order to authorize API requests using OAuth 2.0, a client has to be created in the portal. For more
information on how to create these, please see the [Knowledge Base article](https://support.bynder.com/hc/en-us/articles/360013875180-Create-your-OAuth-Apps).
An OAuth client can only be used to authenticate with the portal it was created in. For partners we can create global OAuth tokens, please contact your partner manager for more information.

## Authorize endpoint [/v6/authentication/oauth2/auth{?client_id,scope,redirect_uri,response_type,state}]

When using the Authorization Code grant, redirect the user to the [Authorize application](#reference/oauth-2.0/authorize-endpoint/authorize-application) endpoint. After the user
is authenticated and approves the authorization request, Bynder will redirect the user back with an
authorization code which can then be passed to the [Token endpoint](#reference/oauth-2.0/token-endpoint/using-an-authorization-code).

### Authorize application [GET]

+ Request

    + Headers

            Origin: Allowed domain for cross-domain requests. Only required if any domains were specified in "Set HTTP access control (CORS)" for the OAuth application.

+ Parameters
    + client_id: `00000000-0000-0000-0000-000000000000` (string, required) - The client ID provided for the OAuth application.
    + scope: `offline asset:read` (string, required) - Scopes to request authorization for. These must be separated by a space. Include **offline** to get a Refresh Token.
    + redirect_uri: `https://localhost/callback` (string, required) - The URL for the authorize response redirect. This must exactly match one of the "Authorization redirect URIs" values specified for the OAuth application.
    + response_type: `code` (enum[string], required) - Determines the grant being used. Only **code** is supported for the Authorization Code grant.
        + Members
            + `code`
    + state: `state` (string, required) - A random string used to maintain state between the request and callback. This value must is used to prevent CSRF attacks.

+ Response 302 (text/plain)

    + Headers

            Location: https://your-bynder-domain/v6/login-provider/login?login_challenge=8e41a26ceb3b845114b5a37d9d0e2e50

    + Body

            Found. Redirecting to https://your-bynder-domain/v6/login-provider/login?login_challenge=8e41a26ceb3b845114b5a37d9d0e2e50

## Token endpoint [/v6/authentication/oauth2/token]

Use the token endpoint to retrieve a access token which can be used to authorize API
requests. Depending on the type of grant, different fields are required which are
outlined per request.

_The token endpoint requires authorization either in the body or by
sending the Authorization header._

### Using an authorization code [POST]

+ Request (application/x-www-form-urlencoded)

    + Headers

            Origin: Allowed domain for cross-domain requests. Only required if any domains were specified in "Set HTTP access control (CORS)" for the OAuth application.
            Authorization: Basic b64(client_id:client_secret)

+ Attributes
    + client_id: `00000000-0000-0000-0000-000000000000` (string, required) - Application client ID.
    + client_secret: `00000000-0000-0000-0000-000000000000` (string, required) - Application client secret.
    + `grant_type`: `authorization_code` (string, required) - Identifies the grant type being used. For Authorization Code grant use **authorization_code**.
    + redirect_uri: `https://localhost/callback` (string, required) - The URL specified in the [Authorize application](#reference/oauth-2.0/authorize-endpoint/authorize-application) request, the values must match.
    + code: `6440327e7ddb660435e377a17a5463ba` (string, required) - The Authorization Code returned from the [Authorize application](#reference/oauth-2.0/authorize-endpoint/authorize-application) request.
    + scope: `offline asset:read` (string, optional) - List of scopes to request to be granted to the access token. Can only be a subset of the scopes requested in the [Authorize application](#reference/oauth-2.0/authorize-endpoint/authorize-application) request. When not passed, all the scopes will be requested.


+ Response 200 (application/json)

    + Body

            {
                "refresh_token": "c12e...b5dc",
                "token_type": "bearer",
                "expires_in": 3600,
                "access_token": "eyJh...NDcw",
                "scope": "offline asset:read"
            }

### Using a refresh token [POST]

+ Request (application/x-www-form-urlencoded)

    + Headers

            Origin: Allowed origin for cross-domain requests.
            Authorization: Basic b64(client_id:client_secret)

+ Attributes
    + client_id: `00000000-0000-0000-0000-000000000000` (string, required) - Application client ID.
    + client_secret: `00000000-0000-0000-0000-000000000000` (string, required) - Application client secret.
    + `grant_type`: `refresh_token` (string, required) - Identifies the grant type being used. For Refresh Token grant use **refresh_token**.
    + refresh_token: `c11e...b5bc` (string, required) - Refresh token returned from the [Retrieve token](#reference/oauth-2.0/token-endpoint/using-an-authorization-code) request.

+ Response 200 (application/json)

    + Body

            {
                "token_type": "bearer",
                "expires_in": 3600,
                "access_token": "eyJh...NDcw",
                "scope": "offline asset:read"
            }


### Using client credentials [POST]

+ Request (application/x-www-form-urlencoded)

    + Headers

            Origin: Allowed domain for cross-domain requests. Only required if any domains were specified in "Set HTTP access control (CORS)" for the OAuth application.
            Authorization: Basic b64(client_id:client_secret)

+ Attributes
    + client_id: `00000000-0000-0000-0000-000000000000` (string, required) - Application client ID.
    + client_secret: `00000000-0000-0000-0000-000000000000` (string, required) - Application client secret.
    + `grant_type`: `client_credentials` (string, required) - Identifies the grant type being used. For Client Credentials grant use **client_credentials**.
    + scope: `asset:read asset:write` (string, optional) - List of scopes to request to be granted to the access token. Can only be a subset of the clients configured scopes. When not passed, all the scopes for the client will be requested.

+ Response 200 (application/json)

    + Body

            {
                "token_type": "bearer",
                "expires_in": 3600,
                "access_token": "eyJh...NDcw",
                "scope": "asset:read asset:write"
            }


## Scopes endpoint [/v6/authentication/oauth2/scopes]

The scopes endpoint provides a JSON formatted overview of the existing
scopes within Bynder and what user permissions are required in order
for the OAuth2 service to grant a scope to a user.

### Retrieve scopes [GET]

+ Request (application/json)

+ Response 200 (application/json)

    + Body

            {
                "groups": [
                    {
                        "name": "Group name",
                        "scopes": [
                            {
                                "name": "scope:action",
                                "description": "Scope description",
                                "anyOfPermissions": [
                                    "scope.permission"
                                ]
                            }
                        ]
                    }
                ]
            }

# Group Security roles
Security roles can be used to determine whether or not a user has the permission to perform a certain action.

Below is the mapping between the existing security roles and their correspondent permission:

| Security role | Permission |
| ------------- | ---------- |
| ARCHIVEDOWNLOAD | asset_bank.asset.archive.download |
| ARCHIVEMEDIA | asset_bank.asset.archive.view |
| antivirus.asset.audit | antivirus.asset.audit |
| brandstore.orderadmin.edit | brandstore.order.manage |
| brandstore.orderadmin.view | brandstore.order.view |
| CAMPAIGNADD | workflow.campaign.create |
| CAMPAIGNEDIT | workflow.campaign.manage |
| CAMPAIGNOVERVIEW | workflow.campaign.view |
| CAMPAIGNREMOVE | workflow.campaign.delete |
| collection.public.view | asset_bank.handler.collection.public |
| COLLECTIONS | asset_bank.collection.create |
| DOWNLOADWATERMARK | asset_bank.asset.watermarked.download |
| EMBARGOMEDIA | asset_bank.asset.limited.view |
| GROUPOVERVIEW | workflow.group.manage |
| INBOXPUBLIC | asset_bank.handler.collection.list |
| JOBADD | workflow.job.create |
| JOBEDIT | workflow.job.manage |
| JOBOVERVIEW | workflow.job.view |
| JOBREMOVE | workflow.job.delete |
| JOBAPPROVE | workflow.job.approve |
| KEYVISUALSDOWNLOAD | asset_bank.asset.limited.download |
| MARKPUBLIC | asset_bank.asset.publish |
| MEDIAEDIT | asset_bank.asset.edit |
| MEDIAHIGHRES | asset_bank.asset.original.download |
| MEDIAOVERVIEW | asset_bank.asset.view |
| MEDIAREMOVE | asset_bank.asset.delete |
| MEDIAUPLOAD | asset_bank.asset.create |
| MEDIAUPLOADFORAPPROVAL | asset_bank.asset.waitingroom.create |
| metaproperty.view | asset_bank.meta_property.view |
| METAPROPERTYMANAGEMENT | asset_bank.meta_property.manage |
| METAPROPERTYOVERVIEW | workflow.meta_property.manage |
| OUTBOXPUBLIC | asset_bank.handler.collection.list |
| PERMISSIONMANAGEMENT | asset_bank.profile.manage |
| PRESETOVERVIEW | workflow.preset.view |
| PUBLICCOLLECTIONS | asset_bank.handler.collection.list |
| PUBLISHCOLLECTIONS | asset_bank.collection.publish |
| SHARING | asset_bank.asset.share |
| STATISTICS | asset_bank.handler.statistics |
| trash.assets | asset_bank.handler.trash |
| USERMANAGEMENT | asset_bank.user.manage |


More information about the different security roles can be found [here](https://support.bynder.com/hc/en-us/articles/360013936559#UUID-ab6d68a0-3b02-5640-78a9-3b27119cb7e1).


## Security profile operations [/api/v4/profiles/]
To determine the security profile for your user you can compare the security profile id with the profileId retrieved from either the [Retrieve specific user](#reference/users/specific-user-operations/retrieve-specific-user) or [Retrieve current user](#reference/users/current-user-operations/retrieve-current-user) call.

It’s the API’s responsibility to enforce that users can only perform allowed actions but nevertheless we recommend that your application checks whether or not an action can be performed because this will create a better user experience.

### Retrieve security profiles [GET]
**Warning:** Requires the **PERMISSIONMANAGEMENT** security role.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Response 200 (application/json)

    + Body

            [
                {
                    "name": "Content/Brand Manager",
                    "id": "00000000-0000-0000-0000000000000000",
                    "roles": [
                        "PUBLICCOLLECTIONS",
                        "GROUPSHARING",
                        "COLLECTIONS"
                    ]
                },
                {
                    "name": "Internal Limited user",
                    "id": "00000000-0000-0000-0000000000000001",
                    "roles": [
                        "MEDIADOWNLOAD",
                        "SHARING",
                        "MEDIAOVERVIEW",
                        "MEDIAHIGHRES"
                    ]
                }
            ]

## Specific security profile operations [/api/v4/profiles/{id}/]
This call allows you to retrieve your own security profile without requiring the **PERMISSIONMANAGEMENT** security role.

In order to get your own security profile use your user profile id retrieved by executing the **[Specific User](#reference/users/specific-user-operations/retrieve-specific-user)** or **[Current User](#reference/users/current-user-operations/retrieve-current-user)** call.

### Retrieve specific security profile [GET]
**Warning:** Requires the **PERMISSIONMANAGEMENT** security role if not retrieving your own security profile.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - Security profile id.

+ Response 200 (application/json)

    + Body

            {
                "name": "Content/Brand Manager",
                "id": "00000000-0000-0000-0000000000000000",
                "roles": [
                    "PUBLICCOLLECTIONS",
                    "GROUPSHARING",
                    "COLLECTIONS"
                ]
            }


# Group Users

## User operations [/api/v4/users/{?includeInActive,limit,page}]
**Warning:** User operations require the **USERMANAGEMENT** security role.

### Retrieve users [GET]
+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token

+ Parameters
    + includeInActive: `0` (boolean, optional) - Whether to include inactive users in the list of results.
        + Default: 0
    + limit: `100` (integer, optional) - Maximum results to return. If limit is not provided, all results are returned. **Note:** When using pagination, pagination information is returned as response headers.
    + page: `1` (integer, optional) - What page of results to return.

+ Response 200 (application/json)

    + Headers

            X-Pagination-TotalRecords: 10000 (only returned when using pagination)
            X-Pagination-TotalPages: 100 (only returned when using pagination)
            X-Pagination-Page: 2 (only returned when using pagination)
            X-Pagination-Limit: 100 (only returned when using pagination)

    + Body

            [
                {
                    "email2": "__USER_EMAIL_2__",
                    "salesrepId": "",
                    "name": "David",
                    "id": "00000000-0000-0000-0000000000000000",
                    "active": 1,
                    "isSSOOnly": false,
                    "username": "__USER_USERNAME__",
                    "email": "__USER_EMAIL__",
                    "profileId": "00000000-0000-0000-0000000000000000",
                    "groups": [
                        {
                            "name": "Bynder",
                            "id": "00000000-0000-0000-0000000000000000"
                        },
                        {
                            "name": "Product",
                            "id": "00000000-0000-0000-0000000000000000"
                        }
                    ]
                },
                {
                    "email2": "__USER_EMAIL_2__",
                    "salesrepId": "",
                    "name": "Jake",
                    "id": "00000000-0000-0000-0000000000000001",
                    "active": 1,
                    "isSSOOnly": true,
                    "username": "__USER_USERNAME__",
                    "email": "__USER_EMAIL__",
                    "profileId": "00000000-0000-0000-0000000000000000",
                    "groups": [
                        {
                            "name": "Bynder",
                            "id": "00000000-0000-0000-0000000000000000"
                        }
                    ]
                }
            ]

### Create user [POST]

+ Request (application/x-www-form-urlencoded)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Attributes
    + username: `user123` (string, optional) - Username for login. If not defined it will take your email as username.
    + password: `secret123` (string, required) - Password for login.
    + email: `john.doe@xample.com` (string, required) - Email address.
    + profileId: `00000000-0000-0000-0000000000000000` (string, required) - Security profile id for determining the user's rights. Can be retrieved by using the [Retrieve security profiles](#reference/security-roles/security-profile-operations/retrieve-security-profiles) call.
    + active: 1, 0 (enum[string], optional) - Whether or not the user will be active, inactive users won't be able to login.
        + Default: 1
    + isSSOOnly: 1, 0, true, false (enum[string], optional) - Whether or not the user may login only with SSO.
        + Default: false
    + language: `en_US` (string, optional) - Prefered website language, options can be retrieved using the [Retrieve account](#reference/account/account-operations/retrieve-account-information) call.
    + firstname: `John` (string, required) - First name.
    + infix: `De` (string, optional) - Infix.
    + lastname: `Doe` (string, required) - Last name.
    + groupIds: `00000000-0000-0000-0000000000000000,00000000-0000-0000-0000000000000001` (string, optional) - A list of group ids to which the user will be added. Can be retrieved by using [Retrieve groups](#reference/groups/group-listing-operations/retrieve-groups) call. Requires `GROUPMANAGEMENT` security role.
    + phoneNumber: `+00 123456789` (string, optional) - Phone number.
    + companyName: `Bynder` (string, optional) - Company name.
    + department: `Development` (string, optional) - Company department.
    + job: `Developer` (string, optional) - Job description.
    + costCenter: `Expenses` (string, optional) - Company cost centre.

+ Response 201 (application/json)

    + Body

            {
                "id": "00000000-0000-0000-0000000000000000",
                "username": "user123"
            }

## Specific user operations [/api/v4/users/{id}/]
**Warning:** Specific user operations require the **USERMANAGEMENT** security role.

### Retrieve specific user [GET]
+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000 or user123` (string, required) - The id or username of the user you’d like to retrieve.

+ Response 200 (application/json)

    + Body

            {
                "phoneNumber": "+00 123456789",
                "profileId": "00000000-0000-0000-0000000000000000",
                "lastLogin": "2017-03-10T15:42:03Z",
                "department": "Development",
                "job": "Developer",
                "state": "",
                "firstname": "John",
                "city": "Amsterdam",
                "infix": "",
                "timeZone": "Africa/Lusaka",
                "username": "user123",
                "email": "john.doe@xample.com",
                "persisted": true,
                "legalEntity": "",
                "county": "",
                "postalCode": "",
                "language": "en_GB",
                "country": "Netherlands",
                "costCenter": "",
                "groups": [
                    {
                        "name": "Bynder",
                        "id": "00000000-0000-0000-0000000000000000"
                    },
                    {
                        "name": "Product",
                        "id": "00000000-0000-0000-0000000000000000"
                    }
                ],
                "lastname": "Doe",
                "cellphoneNumber": "",
                "employeeNumber": "",
                "departmentCode": "",
                "gender": "U",
                "id": "00000000-0000-0000-0000000000000000",
                "companyName": "Bynder",
                "active": true,
                "isSSOOnly": false,
                "address": "",
                "terms": "Digital Asset Management System Terms and Conditions <br/>\n<br/>\n  Overview<br/><br/>\n  All assets are free to use as long as these terms and conditions and license rules are followed.\nAll assets can not be used in paid advertising without the permission of Bynder.<br/><br/>"
            }

### Modify user [POST]

+ Request (application/x-www-form-urlencoded)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - The id of the user you’d like to modify.

+ Attributes
    + username: `user123` (string, optional) - Username.
    + password: `secret123` (string, optional) - Password for login.
    + email: `john.doe@xample.com` (string, optional) - Email address.
    + profileId: `00000000-0000-0000-0000000000000000` (string, optional) - Security profile id for determining the user's rights. Can be retrieved by using the [Retrieve security profiles](#reference/security-roles/security-profiles/retrieve-security-profiles) call.
    + active: 1, 0 (enum[string], optional) - Whether or not the user will be active, inactive users won't be able to login.
        + Default: 1
    + isSSOOnly: 1, 0, true, false (enum[string], optional) - Whether or not the user may login only with SSO.
        + Default: 0
    + language: `en_US` (string, optional) - Prefered website language, options can be retrieved using the [Retrieve account](#reference/account/account-operations/retrieve-account-information) call.
    + firstname: `John` (string, optional) - First name.
    + infix: `De` (string, optional) - Infix.
    + lastname: `Doe` (string, optional) - Last name.
    + groupIds: `00000000-0000-0000-0000000000000000,00000000-0000-0000-0000000000000001`(string, optional) - A list of group ids to which the user will be added. Can be retrieved by using [Retrieve groups](#reference/groups/group-listing-operations/retrieve-groups) call. Requires `GROUPMANAGEMENT` security role.
    + phoneNumber: `+00 123456789` (string, optional) - Phone number.
    + companyName: `Bynder` (string, optional) - Company name.
    + department: `Development` (string, optional) - Company department.
    + job: `Developer` (string, optional) - Job description.
    + costCenter: `Expenses` (string, optional) - Company cost centre.
    + termsAccepted: `true` (boolean, optional) - Indicates whether or not the user has accepted the [login terms & conditions](#reference/accepting-login-terms-&-conditions).

+ Response 202 (application/json)

    + Body

            {
                "id": "00000000-0000-0000-0000000000000000",
                "username": "user123"
            }

### Delete user [DELETE]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000 or user123` (string, required) - The id or username of the user you’d like to delete.

+ Response 204 (application/json)

## Current user operations [/api/v4/currentUser/]
Retrieve the current user information. Unlike [Retrieve specific user](#reference/users/specific-user-operations/retrieve-specific-user) this call doesn't require you to know your user id in order to retrieve your current user information.

### Retrieve current user [GET]
+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Response 200 (application/json)

    + Body

            {
                "phoneNumber": "+00 123456789",
                "profileId": "00000000-0000-0000-0000000000000000",
                "lastLogin": "2017-03-10T15:42:03Z",
                "department": "Development",
                "job": "Developer",
                "state": "",
                "firstname": "John",
                "city": "Amsterdam",
                "infix": "",
                "timeZone": "Africa/Lusaka",
                "username": "user123",
                "email": "john.doe@xample.com",
                "persisted": true,
                "legalEntity": "",
                "county": "",
                "postalCode": "",
                "language": "en_GB",
                "country": "Netherlands",
                "costCenter": "",
                "lastname": "Doe",
                "cellphoneNumber": "",
                "employeeNumber": "",
                "departmentCode": "",
                "gender": "U",
                "id": "00000000-0000-0000-0000000000000000",
                "companyName": "Bynder",
                "active": true,
                "isSSOOnly": false,
                "address": "",
                "terms": "Digital Asset Management System Terms and Conditions <br/>\n<br/>\n  Overview<br/><br/>\n  All assets are free to use as long as these terms and conditions and license rules are followed.\nAll assets can not be used in paid advertising without the permission of Bynder.<br/><br/>"
            }

# Group Groups

## Group operations [/api/groups/list/{?search_term,page,limit,sort_order}]
**Warning:** Requires the **GROUPMANAGEMENT** security role.

### Retrieve groups [GET]

+ Request
    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + search_term: `group name` (string, optional) - Search on matching group names.
    + page: `1` (integer, optional) - What page of results to return.
    + limit: `100` (number, optional) - Maximum results to return. If limit is not provided the first 20 resulsts will be returned.
    + sort_order (enum[string], optional) - Order of the returned list of groups.
        + Members
            + `asc`
            + `desc`

+ Response 200 (application/json)
    + Body

            [
                {
                    "id": "00000000-0000-0000-0000000000000000",
                    "name": "Bynder group one"
                },
                {
                    "id": "00000000-0000-0000-0000000000000001",
                    "name": "Bynder group two"
                }
            ]


# Group Brands

## Brand operations [/api/v4/brands/]

### Retrieve brands [GET]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Response 200 (application/json)

    + Body

            [
                {
                    "image": "___URL_TO_BYNDER_CDN___",
                    "name": "Bynder Brand Portal",
                    "id": "00000000-0000-0000-0000000000000000",
                    "description": "",
                    "subBrands": [{
                        "id": "00000000-0000-0000-0000000000000000",
                        "description": "",
                        "name": "Sub Portal One",
                        "image": ""
                    },
                    {
                        "id": "00000000-0000-0000-0000000000000001",
                        "description": "",
                        "name": "Sub Portal Two",
                        "image": ""
                    }]
                },
                {
                    "image": "___URL_TO_BYNDER_CDN___",
                    "name": "Byndy Brand Portal",
                    "id": "00000000-0000-0000-0000000000000001",
                    "description": "",
                    "subBrands": []
                }
            ]

# Group Assets
**Warning:** Asset response will only include *archived* assets if the API user has the security role **ARCHIVEMEDIA** or **ARCHIVEDOWNLOAD**.

**Warning:** Asset response will only include assets marked as *limited usage* if the API user has the security role **EMBARGOMEDIA** or **KEYVISUALSDOWNLOAD**.

**Note:** When passing both `limited=1` and `archive=1` the search will filter for assets marked as *archived* **or** *limited* rather than *archived* **and** *limited*, the same is true for any other combination of these filters(provided the appropriate security role(s) is attached). This behaviour is consistent with that of the UI.

## Asset operations [/api/v4/media/{?brandId,subBrandId,categoryId,collectionId,id,ids,propertyOptionId,tags,type,limited,archive,isPublic,keyword,dateCreated,dateCreatedTo,dateCreatedOn,dateModified,dateModifiedTo,dateModifiedOn,orderBy,limit,page,orientation,count,property_NAME,total,includeMediaItems,includeVersionNumber,cursor}]

### Retrieve assets [GET]
**Note:** `original` is only returned for assets marked as public and requires the account to have the `seoBaseUrl` setting configured.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + brandId: `00000000-0000-0000-0000000000000000` (string, optional) - Brand id, can be retrieved using the [Retrieve brands and subbrands](#reference/brands/retrieve-brands-and-subbrands/retrieve-brands-and-subbrands) call.
    + subBrandId: `00000000-0000-0000-0000000000000000` (string, optional) - Sub-brand id, can be retrieved using the [Retrieve brands and subbrands](#reference/brands/retrieve-brands-and-subbrands/retrieve-brands-and-subbrands) call.
    + categoryId: `00000000-0000-0000-0000000000000000` (string, optional) - Category id, can be retrieved using the [Retrieve categories](#reference/categories/retrieve-categories/retrieve-categories) call.
    + collectionId: `00000000-0000-0000-0000000000000000` (string, optional) - Collection id, can be retrieved using the [Retrieve collections](#reference/collections/collection-operations/retrieve-collections) call.
    + id: `00000000-0000-0000-0000000000000000` (string, optional) - Asset id, will return the asset for that id.
    + ids: `00000000-0000-0000-0000000000000000,00000000-0000-0000-0000000000000000` (string, optional) - Comma-separated list of asset ids. Will return a asset for each existing id.
    + propertyOptionId: `00000000-0000-0000-0000000000000000,00000000-0000-0000-0000000000000000` (string, optional) - Comma-separated list of (metaproperty) option ids, can be retrieved using the [Retrieve metaproperties](#reference/metaproperties/metaproperty-operations/retrieve-metaproperties) call. This parameter searches for assets that contain at least one of the metaproperty options passed in the list.
    + tags: `pictures,animals` (string, optional) - Comma-separated list of tags, can be retrieved using the [Retrieve tags](#reference/tags/retrieve-tags/retrieve-all-tags) call.
    + type: `image` (string, optional) - Comma-separated list of asset types.
        + Members
            + `image`
            + `document`
            + `audio`
            + `video`
            + `3d`
    + orientation: `square` (string, optional) - Comma-separated list of asset orientation.
        + Members
            + `square`
            + `portrait`
            + `landscape`
    + property_NAME: `Amsterdam` (string, optional) - Metaproperty option name.<br/>**OR**<br/> Comma-separated list ids of metaproperty options for that metaproperty.<br/>**Note:** NAME should be replaced by the Metaproperty name.<br />This is an AND operation when passing multiple values.
    + limited: `1` (boolean, optional) - Indicates whether or not the response should only contain assets marked as "limited usage". When `0`, no filtering happens.
    + archive: `1` (boolean, optional) - Indicates whether or not the response should only contain archived assets. When `0`, no filtering happens.
    + isPublic: `1` (boolean, optional) - Indicates whether or not the response should only contain assets marked as public.
    + keyword: `Amsterdam` (string, optional) - Search on filenames, tags, extensions, collection names, guidelines, brandstore, campaigns in workflow, enriched PDFs, word documents. The default order of results is relevance, but can be overridden with the order parameter. For customers using the AI Search package it will also search on Text-in-Image tags and Speech-to-Text transcript content.
    + dateCreated: `2014-12-25T10:30:00Z` (string, optional) - Retrieve assets created after this date.<br/>ISO8601 format: yyyy-mm-ddThh:mm:ssZ.
    + dateCreatedTo: `2014-12-25T10:30:00Z` (string, optional) - Set a date range together with the "dateCreated" parameter.<br/>ISO8601 format: yyyy-mm-ddThh:mm:ssZ.
    + dateCreatedOn: `2014-12-25T10:30:00Z` (string, optional) - Retrieve assets created on this specific date.<br/>ISO8601 format: yyyy-mm-ddThh:mm:ssZ.
    + dateModified: `2014-12-25T10:30:00Z` (string, optional) - Retrieve assets modified after this date.<br/>ISO8601 format: yyyy-mm-ddThh:mm:ssZ.
    + dateModifiedTo: `2014-12-25T10:30:00Z` (string, optional) - Set a date range together with the "dateModified" parameter.<br/>ISO8601 format: yyyy-mm-ddThh:mm:ssZ.
    + dateModifiedOn: `2014-12-25T10:30:00Z` (string, optional) - Retrieve assets modified on this specific date.<br/>ISO8601 format: yyyy-mm-ddThh:mm:ssZ.
    + orderBy: `name asc` (enum[string], optional) - Order of the returned list of assets.
        + Members
            + `dateCreated asc`
            + `dateModified asc`
            + `datePublished asc`
            + `name asc`
            + `dateCreated desc`
            + `dateModified desc`
            + `datePublished desc`
            + `name desc`
    + limit: `250` (number, optional) - Maximum number of results.<br/>Maximum: 1000.
        + Default: 50
    + page: `1` (number, optional) - Offset page for results: return the N-th set of limit-results.
        + Default: 1
    + count: `1` (boolean, optional) - Indicating whether or not the response should include count results. This parameter when passed as `1` overrides the `total` parameter.
        + Default: 0
    + total: `1` (boolean, optional) - Indicating whether or not the response should include the total count of results.
        + Default: 0
    + includeMediaItems: `1` (boolean, optional) - Indicating whether or not the response should include all the different media items (derivatives) available for each asset.
        + Default: 0
    + includeVersionNumber: `1` (boolean, optional) - Indicating whether or not the response should include the active version number.
        + Default: 0
    + cursor: `AoJwh+sCPwQ3RNS05NjcxLzQTkwQzMwRA==` (string, optional) - cursorMark returned in the X-Bynder-NextCursor response header which allows to return the next set of results.<br/>**Note:** This parameter can only be used if solr-cursor account feature is enabled.

+ Response 200 (application/json)
The following example response is for when `count=0`, `total=0` and `includeMediaItems=0` or all these parameteres are missing.

    + Headers

            X-Bynder-NextCursor: SOLR nextCursorMark which can be used to return the next X number of results. Returned when solr-cursor account feature is enabled.

    + Body

            [
                {
                    "dateModified": "2017-03-09T12:09:29Z",
                    "propertyOptions": [
                        "00000000-0000-0000-0000000000000000",
                        "00000000-0000-0000-0000000000000001"
                    ],
                    "type": "image",
                    "brandId": "00000000-0000-0000-0000000000000000",
                    "fileSize": 3895890,
                    "id": "00000000-0000-0000-0000000000000000",
                    "height": 3301,
                    "description": "Beautiful grassland picture",
                    "idHash": "02c3c00b6388a63f",
                    "name": "Grassland",
                    "tags": [
                        "2014",
                        "25249181"
                    ],
                    "orientation": "landscape",
                    "width": 4951,
                    "datePublished": "2017-03-07T14:28:56Z",
                    "copyright": "",
                    "extension": ["jpeg"],
                    "userCreated": "John Doe",
                    "dateCreated": "2017-03-07T14:28:57Z",
                    "archive": 0,
                    "property_limitedrights": "Specific rights",
                    "watermarked": 0,
                    "limited": 0,
                    "isPublic": 0,
                    "thumbnails": {
                        "mini": "___URL_TO_BYNDER_CDN___",
                        "webimage": "___URL_TO_BYNDER_CDN___",
                        "thul": "___URL_TO_BYNDER_CDN___"
                    },
                    "transformBaseUrl": "https://example.bynder.com/transform/01234567-89ab-cdef-0123-456789abcdef/AssetName"
                },
                {
                    "dateModified": "2015-07-28T10:46:59Z",
                    "propertyOptions": [
                        "00000000-0000-0000-0000000000000000",
                        "00000000-0000-0000-0000000000000001"
                    ],
                    "type": "video",
                    "brandId": "00000000-0000-0000-0000000000000000",
                    "fileSize": 63973541,
                    "id": "00000000-0000-0000-0000000000000001",
                    "height": 0,
                    "description": "",
                    "idHash": "536f140e0ba62e46",
                    "name": "App Instruction Video",
                    "tags": [
                        "tutorial videos",
                        "tutorial",
                        "video"
                    ],
                    "orientation": "landscape",
                    "width": 0,
                    "datePublished": "2015-07-23T10:46:00Z",
                    "copyright": "",
                    "extension": [
                        "mp4"
                    ],
                    "userCreated": "",
                    "dateCreated": "2015-07-23T17:20:19Z",
                    "archive": 0,
                    "property_assettype": [
                        "video"
                    ],
                    "watermarked": 0,
                    "limited": 1,
                    "videoPreviewURLs": [
                        "___URL_TO_BYNDER_CDN___.webm",
                        "___URL_TO_BYNDER_CDN___.mp4"
                    ],
                    "thumbnails": {
                        "mini": "___URL_TO_BYNDER_CDN___",
                        "webimage": "___URL_TO_BYNDER_CDN___",
                        "67E391FA": "___URL_TO_BYNDER_CDN___",
                        "thul": "___URL_TO_BYNDER_CDN___"
                    },
                    "isPublic": 1,
                    "original": "___URL_TO_BYNDER_CDN___",
                    "transformBaseUrl": "https://example.bynder.com/transform/01234567-89ab-cdef-0123-456789abcdef/AssetName"
                }
            ]

+ Response 200 (application/json)
The following example response is for when `count=1`.

    + Body

            {
                "count": {
                    "brandId": {
                        "00000000-0000-0000-0000000000000000": 325,
                        "00000000-0000-0000-0000000000000001": 1
                    },
                    "subBrandId": {
                        "00000000-0000-0000-0000000000000000": 1
                    },
                    "categoryId": {
                        "00000000-0000-0000-0000000000000000": 2,
                        "none": 324
                    },
                    "tags": {
                        "ship": 16,
                        "photo": 13,
                        "tv show": 24
                    },
                    "type": {
                        "audio": 2,
                        "image": 249,
                        "video": 39,
                        "document": 36
                    },
                    "orientation": {
                        "portrait": 39,
                        "landscape": 275,
                        "square": 12
                    },
                    "total": 326,
                    "property_assettype": {
                        "photo": 114,
                        "banners": 6,
                        "posters": 14,
                        "logos": 10
                    },
                    "property_country": {
                        "france": 100,
                        "belgium": 106,
                        "spain": 100,
                        "switzerland": 102,
                        "germany": 106,
                        "unitedkingdom": 124,
                        "china": 61,
                        "usa": 176,
                        "india": 52,
                        "netherlands": 91,
                        "canada": 113
                    }
                },
                "media": [
                    {
                        "dateModified": "2017-03-09T12:09:29Z",
                        "propertyOptions": [
                            "00000000-0000-0000-0000000000000000",
                            "00000000-0000-0000-0000000000000001"
                        ],
                        "type": "image",
                        "brandId": "00000000-0000-0000-0000000000000000",
                        "fileSize": 3895890,
                        "id": "00000000-0000-0000-0000000000000000",
                        "height": 3301,
                        "description": "Beautiful grassland picture",
                        "idHash": "02c3c00b6388a63f",
                        "name": "Grassland",
                        "tags": [
                            "2014",
                            "25249181"
                        ],
                        "orientation": "landscape",
                        "width": 4951,
                        "datePublished": "2017-03-07T14:28:56Z",
                        "copyright": "",
                        "extension": [
                            "jpeg"
                        ],
                        "userCreated": "John Doe",
                        "dateCreated": "2017-03-07T14:28:57Z",
                        "archive": 0,
                        "property_limitedrights": "Specific rights",
                        "watermarked": 0,
                        "limited": 0,
                        "isPublic": 1,
                        "original": "___URL_TO_BYNDER_CDN___",
                        "thumbnails": {
                            "mini": "___URL_TO_BYNDER_CDN___",
                            "webimage": "___URL_TO_BYNDER_CDN___",
                            "thul": "___URL_TO_BYNDER_CDN___"
                        },
                        "transformBaseUrl": "https://example.bynder.com/transform/01234567-89ab-cdef-0123-456789abcdef/AssetName"
                    },
                    {
                        "dateModified": "2015-07-28T10:46:59Z",
                        "propertyOptions": [
                            "00000000-0000-0000-0000000000000000",
                            "00000000-0000-0000-0000000000000001"
                        ],
                        "type": "video",
                        "brandId": "00000000-0000-0000-0000000000000000",
                        "fileSize": 63973541,
                        "id": "00000000-0000-0000-0000000000000001",
                        "height": 0,
                        "description": "",
                        "idHash": "536f140e0ba62e46",
                        "name": "App Instruction Video",
                        "tags": [
                            "tutorial videos",
                            "tutorial",
                            "video"
                        ],
                        "orientation": "landscape",
                        "width": 0,
                        "datePublished": "2015-07-23T10:46:00Z",
                        "copyright": "",
                        "extension": [
                            "mp4"
                        ],
                        "userCreated": "",
                        "dateCreated": "2015-07-23T17:20:19Z",
                        "archive": 0,
                        "property_assettype": [
                            "video"
                        ],
                        "watermarked": 0,
                        "limited": 1,
                        "videoPreviewURLs": [
                            "___URL_TO_BYNDER_CDN___.webm",
                            "___URL_TO_BYNDER_CDN___.mp4"
                        ],
                        "thumbnails": {
                            "mini": "___URL_TO_BYNDER_CDN___",
                            "webimage": "___URL_TO_BYNDER_CDN___",
                            "67E391FA": "___URL_TO_BYNDER_CDN___",
                            "thul": "___URL_TO_BYNDER_CDN___"
                        },
                        "isPublic": 1,
                        "original": "___URL_TO_BYNDER_CDN___",
                        "transformBaseUrl": "https://example.bynder.com/transform/01234567-89ab-cdef-0123-456789abcdef/AssetName"
                    }
                ]
            }

+ Response 200 (application/json)
The following example response is for when `total=1`.

    + Body

            {
                "total": {
                    "count": 326
                },
                "media": [
                    {
                        "dateModified": "2017-03-09T12:09:29Z",
                        "propertyOptions": [
                            "00000000-0000-0000-0000000000000000",
                            "00000000-0000-0000-0000000000000001"
                        ],
                        "type": "image",
                        "brandId": "00000000-0000-0000-0000000000000000",
                        "fileSize": 3895890,
                        "id": "00000000-0000-0000-0000000000000000",
                        "height": 3301,
                        "description": "Beautiful grassland picture",
                        "idHash": "02c3c00b6388a63f",
                        "name": "Grassland",
                        "tags": [
                            "2014",
                            "25249181"
                        ],
                        "orientation": "landscape",
                        "width": 4951,
                        "datePublished": "2017-03-07T14:28:56Z",
                        "copyright": "",
                        "extension": [
                            "jpeg"
                        ],
                        "userCreated": "John Doe",
                        "dateCreated": "2017-03-07T14:28:57Z",
                        "archive": 0,
                        "property_limitedrights": "Specific rights",
                        "watermarked": 0,
                        "limited": 0,
                        "isPublic": 1,
                        "original": "___URL_TO_BYNDER_CDN___",
                        "thumbnails": {
                            "mini": "___URL_TO_BYNDER_CDN___",
                            "webimage": "___URL_TO_BYNDER_CDN___",
                            "thul": "___URL_TO_BYNDER_CDN___"
                        },
                        "transformBaseUrl": "https://example.bynder.com/transform/01234567-89ab-cdef-0123-456789abcdef/AssetName"
                    },
                    {
                        "dateModified": "2015-07-28T10:46:59Z",
                        "propertyOptions": [
                            "00000000-0000-0000-0000000000000000",
                            "00000000-0000-0000-0000000000000001"
                        ],
                        "type": "video",
                        "brandId": "00000000-0000-0000-0000000000000000",
                        "fileSize": 63973541,
                        "id": "00000000-0000-0000-0000000000000001",
                        "height": 0,
                        "description": "",
                        "idHash": "536f140e0ba62e46",
                        "name": "App Instruction Video",
                        "tags": [
                            "tutorial videos",
                            "tutorial",
                            "video"
                        ],
                        "orientation": "landscape",
                        "width": 0,
                        "datePublished": "2015-07-23T10:46:00Z",
                        "copyright": "",
                        "extension": [
                            "mp4"
                        ],
                        "userCreated": "",
                        "dateCreated": "2015-07-23T17:20:19Z",
                        "archive": 0,
                        "property_assettype": [
                            "video"
                        ],
                        "watermarked": 0,
                        "limited": 1,
                        "videoPreviewURLs": [
                            "___URL_TO_BYNDER_CDN___.webm",
                            "___URL_TO_BYNDER_CDN___.mp4"
                        ],
                        "thumbnails": {
                            "mini": "___URL_TO_BYNDER_CDN___",
                            "webimage": "___URL_TO_BYNDER_CDN___",
                            "67E391FA": "___URL_TO_BYNDER_CDN___",
                            "thul": "___URL_TO_BYNDER_CDN___"
                        },
                        "isPublic": 0,
                        "transformBaseUrl": "https://example.bynder.com/transform/01234567-89ab-cdef-0123-456789abcdef/AssetName"
                    }
                ]
            }

+ Response 200 (application/json)
The following example response is for when `includeMediaItems=1`.

    + Body

            [
                {
                    "dateModified": "2017-03-09T12:09:29Z",
                    "propertyOptions": [
                        "00000000-0000-0000-0000000000000000",
                        "00000000-0000-0000-0000000000000001"
                    ],
                    "type": "image",
                    "brandId": "00000000-0000-0000-0000000000000000",
                    "fileSize": 3895890,
                    "id": "00000000-0000-0000-0000000000000000",
                    "height": 3301,
                    "description": "Beautiful grassland picture",
                    "idHash": "02c3c00b6388a63f",
                    "name": "Grassland",
                    "tags": [
                        "2014",
                        "25249181"
                    ],
                    "orientation": "landscape",
                    "width": 4951,
                    "datePublished": "2017-03-07T14:28:56Z",
                    "copyright": "",
                    "extension": ["jpeg"],
                    "userCreated": "John Doe",
                    "dateCreated": "2017-03-07T14:28:57Z",
                    "archive": 0,
                    "property_limitedrights": "Specific rights",
                    "watermarked": 0,
                    "limited": 0,
                    "isPublic": 0,
                    "thumbnails": {
                        "mini": "___URL_TO_BYNDER_CDN___",
                        "webimage": "___URL_TO_BYNDER_CDN___",
                        "thul": "___URL_TO_BYNDER_CDN___"
                    },
                    "transformBaseUrl": "https://example.bynder.com/transform/01234567-89ab-cdef-0123-456789abcdef/AssetName",
                    "mediaItems" : [
                        {
                            "name": "600x200",
                            "publicUrl": null,
                            "type": "edit",
                            "additionalId": "00000000-0000-0000-0000000000000000",
                            "fileName": "original file name"
                        },
                        {
                            "name": "nameOfFile",
                            "publicUrl": "___URL_TO_BYNDER_CDN___",
                            "type": "additional",
                            "additionalId": "00000000-0000-0000-0000000000000000",
                            "fileName": "original file name"
                        }
                    ]
                },
                {
                    "dateModified": "2015-07-28T10:46:59Z",
                    "propertyOptions": [
                        "00000000-0000-0000-0000000000000000",
                        "00000000-0000-0000-0000000000000001"
                    ],
                    "type": "video",
                    "brandId": "00000000-0000-0000-0000000000000000",
                    "fileSize": 63973541,
                    "id": "00000000-0000-0000-0000000000000001",
                    "height": 0,
                    "description": "",
                    "idHash": "536f140e0ba62e46",
                    "name": "App Instruction Video",
                    "tags": [
                        "tutorial videos",
                        "tutorial",
                        "video"
                    ],
                    "orientation": "landscape",
                    "width": 0,
                    "datePublished": "2015-07-23T10:46:00Z",
                    "copyright": "",
                    "extension": [
                        "mp4"
                    ],
                    "userCreated": "",
                    "dateCreated": "2015-07-23T17:20:19Z",
                    "archive": 0,
                    "property_assettype": [
                        "video"
                    ],
                    "watermarked": 0,
                    "limited": 1,
                    "videoPreviewURLs": [
                        "___URL_TO_BYNDER_CDN___.webm",
                        "___URL_TO_BYNDER_CDN___.mp4"
                    ],
                    "thumbnails": {
                        "mini": "___URL_TO_BYNDER_CDN___",
                        "webimage": "___URL_TO_BYNDER_CDN___",
                        "67E391FA": "___URL_TO_BYNDER_CDN___",
                        "thul": "___URL_TO_BYNDER_CDN___"
                    },
                    "isPublic": 1,
                    "original": "___URL_TO_BYNDER_CDN___",
                    "transformBaseUrl": "https://example.bynder.com/transform/01234567-89ab-cdef-0123-456789abcdef/AssetName",
                    "mediaItems" : [
                        {
                            "name": "600x200",
                            "publicUrl": null,
                            "type": "edit",
                            "additionalId": "00000000-0000-0000-0000000000000000",
                            "fileName": "original file name"
                        },
                        {
                            "name": "nameOfFile",
                            "publicUrl": "___URL_TO_BYNDER_CDN___",
                            "type": "additional",
                            "additionalId": "00000000-0000-0000-0000000000000000",
                            "fileName": "original file name"
                        }
                    ]
                }
            ]

## Specific asset operations [/api/v4/media/{id}/{?versions,stats}]

### Retrieve specific asset [GET]
**Warning:** Requires the **STATISTICS** security role in order to retrieve *views* and *downloads* statistics data in the response, using the `stats` parameter.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - Asset id.
    + versions: `1` (boolean, optional) - Include information about the different asset media items including versions.
        + Default: 0
    + stats: `1` (boolean, optional) - Include information about *views* and *downloads*.
        + Default: 0

+ Response 200 (application/json)
The following example response is for when `versions=0` or the versions parameter is missing.

    + Body

            {
                "dateModified": "2015-07-28T10:46:59Z",
                "propertyOptions": [
                    "00000000-0000-0000-0000000000000000",
                    "00000000-0000-0000-0000000000000001"
                ],
                "type": "video",
                "brandId": "00000000-0000-0000-0000000000000000",
                "fileSize": 63973541,
                "id": "00000000-0000-0000-0000000000000000",
                "height": 0,
                "description": "",
                "idHash": "536f140e0ba62e46",
                "name": "App Instruction Video",
                "tags": [
                    "tutorial videos",
                    "tutorial",
                    "video"
                ],
                "orientation": "landscape",
                "width": 0,
                "datePublished": "2015-07-23T10:46:00Z",
                "copyright": "",
                "extension": [
                    "mp4"
                ],
                "userCreated": "",
                "dateCreated": "2015-07-23T17:20:19Z",
                "archive": 0,
                "property_assettype": [
                    "video"
                ],
                "watermarked": 0,
                "limited": 1,
                "videoPreviewURLs": [
                    "___URL_TO_BYNDER_CDN___.webm",
                    "___URL_TO_BYNDER_CDN___.mp4"
                ],
                "thumbnails": {
                    "mini": "___URL_TO_BYNDER_CDN___",
                    "webimage": "___URL_TO_BYNDER_CDN___",
                    "67E391FA": "___URL_TO_BYNDER_CDN___",
                    "thul": "___URL_TO_BYNDER_CDN___"
                },
                "views": 10,
                "downloads": 5,
                "isPublic": 1,
                "original": "___URL_TO_BYNDER_CDN___",
                "relatedAssets": [{
                    "metaPropertyId": "00000000-0000-0000-0000000000000001",
                    "assets": [
                        "00000000-0000-0000-0000000000000001",
                        "00000000-0000-0000-0000000000000002"
                    ],
                    "metaPropertyName": "Bob_linked"
                },
                {
                    "metaPropertyId": "00000000-0000-0000-0000000000000002",
                    "assets": [
                        "00000000-0000-0000-0000000000000001"
                    ],
                    "metaPropertyName": "360_images"
                }],
                "activeOriginalFocusPoint": {
                    "y": 0,
                    "x": 0
                },
                "transformBaseUrl": "https://example.bynder.com/transform/01234567-89ab-cdef-0123-456789abcdef/AssetName"
            }

+ Response 200 (application/json)
The following example response is for when `versions=1`.

    + Body

            {
                "dateModified": "2015-07-28T10:46:59Z",
                "propertyOptions": [
                    "00000000-0000-0000-0000000000000000",
                    "00000000-0000-0000-0000000000000001"
                ],
                "type": "video",
                "brandId": "00000000-0000-0000-0000000000000000",
                "fileSize": 63973541,
                "id": "00000000-0000-0000-0000000000000000",
                "height": 0,
                "description": "",
                "idHash": "536f140e0ba62e46",
                "name": "App Instruction Video",
                "tags": [
                    "tutorial videos",
                    "tutorial",
                    "video"
                ],
                "orientation": "landscape",
                "width": 0,
                "datePublished": "2015-07-23T10:46:00Z",
                "copyright": "",
                "extension": [
                    "mp4"
                ],
                "userCreated": "",
                "dateCreated": "2015-07-23T17:20:19Z",
                "archive": 0,
                "property_assettype": [
                    "video"
                ],
                "watermarked": 0,
                "limited": 1,
                "videoPreviewURLs": [
                    "___URL_TO_BYNDER_CDN___.webm",
                    "___URL_TO_BYNDER_CDN___.mp4"
                ],
                "thumbnails": {
                    "mini": "___URL_TO_BYNDER_CDN___",
                    "webimage": "___URL_TO_BYNDER_CDN___",
                    "67E391FA": "___URL_TO_BYNDER_CDN___",
                    "thul": "___URL_TO_BYNDER_CDN___"
                },
                "views": 10,
                "downloads": 5,
                "isPublic": 1,
                "original": "___URL_TO_BYNDER_CDN___",
                "mediaItems": [{
                    "height": 225,
                    "version": 8,
                    "fileName": "version_8.gif",
                    "dateCreated": "2017-03-01T12:37:55Z",
                    "size": 37074,
                    "width": 400,
                    "id": "00000000-0000-0000-0000000000000000",
                    "thumbnails": {
                        "mini": "___URL_TO_BYNDER_CDN___",
                        "webimage": "___URL_TO_BYNDER_CDN___",
                        "thul": "___URL_TO_BYNDER_CDN___"
                    },
                    "active": 1,
                    "type": "original",
                    "focusPoint": {
                        "y": 112.5,
                        "x": 200
                    },
                    "additionalId": "00000000-0000-0000-0000000000000000"
                },
                {
                    "height": 225,
                    "version": 6,
                    "fileName": "new_gify.gif",
                    "dateCreated": "2017-03-01T12:37:50Z",
                    "size": 37074,
                    "width": 400,
                    "id": "00000000-0000-0000-0000000000000000",
                    "thumbnails": {
                        "mini": "___URL_TO_BYNDER_CDN___",
                        "webimage": "___URL_TO_BYNDER_CDN___",
                        "thul": "___URL_TO_BYNDER_CDN___"
                    },
                    "active": 0,
                    "type": "additional",
                    "focusPoint": {
                        "y": 112.5,
                        "x": 200
                    },
                    "additionalId": "00000000-0000-0000-0000000000000000"
                }
                ],
                "relatedAssets": [{
                    "metaPropertyId": "00000000-0000-0000-0000000000000001",
                    "assets": [
                        "00000000-0000-0000-0000000000000001",
                        "00000000-0000-0000-0000000000000002"
                    ],
                    "metaPropertyName": "Bob_linked"
                },
                {
                    "metaPropertyId": "00000000-0000-0000-0000000000000002",
                    "assets": [
                        "00000000-0000-0000-0000000000000001"
                    ],
                    "metaPropertyName": "360_images"
                }],
                "activeOriginalFocusPoint": {
                    "y": 0,
                    "x": 0
                },
                "transformBaseUrl": "https://example.bynder.com/transform/01234567-89ab-cdef-0123-456789abcdef/AssetName"
            }

+ Response 404 (application/json)

    + Body

            {
                "message": "File not found",
                "statuscode": "404"
            }

### Modify asset [POST]
**Warning:** Requires the **MEDIAEDIT** security role. Requires the **MARKPUBLIC** security role in order to change a asset's isPublic state.

**Warning:** For metaproperties that use options (Select, Select2, Autocomplete), modifying an asset's metaproperty options should be done via option UUID's for the api to work optimally, sending name or label values will be deprecated in the future. Other metaproperties (Date, Text and Longtext), values can be submitted directly.

+ Request (application/x-www-form-urlencoded)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - Asset id.

+ Attributes
    + name: `name` (string, optional) - Name of the asset, beware the asset will have no name when this is empty.
    + description: `Extended asset description` (string, optional) - Asset description.
    + copyright: `Copyright (c) Example corp.` (string, optional) - Copyright information of the asset.
    + brandId: `00000000-0000-0000-0000000000000000` (string, optional) - Id of the brand to save the asset to, can be retrieved using the [Retrieve brands and subbrands](#reference/brands/retrieve-brands-and-subbrands/retrieve-brands-and-subbrands) call.
    + tags: `scenery,grassland,Holland` (string, optional) - Comma-separated tags. Tags will overwrite the current tags list. If the tag doesn't exist it will be created.
    + metaproperty.ID: `metaproperty.00000000-0000-0000-0000000000000000: 00000000-0000-0000-0000000000000000,00000000-0000-0000-0000000000000000` (optional) - Dictionary with (metaproperty) options to set on the asset. Send fields as metaproperty.METAPROPERY_ID with a string of all its (metaproperty) options comma-separated. Note that the list of (metaproperty) options should include all the (metaproperty) options available in the lower hierarchy; meaning it should include the (metaproperty) sub options. To update a text metaproperty value, simply add the needed text instead of listing (metapropery) options comma-separated. To update multiple metaproperties in a single call, just add multiple `metaproperty.IDs` together with their new values.    
    + datePublished: `2014-12-25T10:30:00Z` (string, optional) - Publication datetime. ISO8601 format: yyyy-mm-ddThh:mm:ssZ.
    + archive: `true` (boolean, optional) - Indicating the archived state of the asset.
    + archiveDate: `2014-12-25T10:30:00Z` (string, optional) - Archive datetime. ISO8601 format: yyyy-mm-ddThh:mm:ssZ.
    + limited: `true` (boolean, optional) - Indicating the limit state of the asset.
    + limitedDate: `2014-12-25T10:30:00Z` (string, optional) - Limit datetime. ISO8601 format: yyyy-mm-ddThh:mm:ssZ.
    + watermarkDate: `2014-12-25T10:30:00Z` (string, optional) - Watermark datetime. ISO8601 format: yyyy-mm-ddThh:mm:ssZ.
    + isPublic: `true` (boolean, optional) - Indicating the public state of the asset. Warning irreversible, once changed to true it cannot be changed back.

+ Response 202 (application/json)

    + Body

            {
                "message": "Accepted",
                "statuscode": 202
            }

+ Response 403 (application/json)

    + Body

            {
                "message": "Access denied",
                "statuscode": "403"
            }

+ Response 403 (application/json)

    + Body

            {
                "message": "You're not allowed to make an asset public",
                "statuscode": "403"
            }

+ Response 404 (application/json)

    + Body

            {
                "message": "Media not found",
                "statuscode": "404"
            }

### Delete asset [DELETE]
**Warning:** Requires the **MEDIAREMOVE** security role.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - Asset id.

+ Response 204 (application/json)

+ Response 403 (application/json)

    + Body

            {
                "message": "Access denied",
                "statuscode": "403"
            }

+ Response 404 (application/json)

    + Body

            {
                "message": "Media not found",
                "statuscode": "404"
            }

## Similar assets operations [/api/1/assets/similarity-search/]

### Search for similar assets [POST]

+ Request (application/json)

    + Attributes
        + assetIds (array[string], optional) - List of asset IDs to search similar assets for.
            + Example
                [
                    "eff9f6c7-ae77-4614-911b-fd238df5bac3",
                    "5af81baa-ee0b-4611-bfa6-fd023c7989b8"
                ]
        + imageUrl: `https://d2csxpduxe849s.cloudfront.net/media/A7148429-45E9-45C9-98BABD031228C0E2/0A1C48A2-2523-440C-81DD9DFA221D28FC/webimage-5FE11596-1C5D-4FC1-9C216A240BA53979.png` (string, optional) - URL of the image to find similar assets.
        + imageData: `data:image/jpeg;base64,...` (string, optional) - Base64 encoded image data for similarity search.
        + textQuery: `Image of a sunset` (string, optional) - A text query describing the image for the search.

+ Response 200 (application/json)

    + Body

        {
            "assets": [
                {
                    "assetId": "e0664bc4-4d64-4776-a010-a19d337f7ee9",
                    "similarityScore": 0.98
                },
                {
                    "assetId": "0e870dbc-c6a4-414a-8467-75fac70c84d9",
                    "similarityScore": 0.95
                }
            ]
        }

+ Response 400 (application/json)

    + Body

        {
            "message": "Multiple search parameters provided. Please provide only one of the following parameters: assetIds, imageUrl, imageData, textQuery.",
            "reason": "MULTIPLE_SEARCH_PARAMETERS"
        }

## Asset metaproperty options [/api/media/options/]
These calls allow you to change the metaproperty options attached to an asset.
**Warning:** Requires VIEW and EDIT access to the asset.


### Add metaproperty options[POST]

+ Request (application/json)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

    + Attributes
        + asset_id: `00000000-0000-0000-0000000000000000` (required, string, ) - Id of the asset.
        + metaproperty_id: `00000000-0000-0000-0000000000000000` (required, string) - Id of the metaproperty from which you want to add options.
        + metaproperty_option_ids: `["00000000-0000-0000-0000000000000000", "..."]` (required, array) - List of metaproperty option ids you want to add to the asset.

+ Response 201 (application/json)

    + Body

            {
                "message": "Created",
                "statuscode": 201
            }

+ Response 403 (application/json)

    + Body

            {
                "message": "Access denied",
                "statuscode": "403"
            }

+ Response 404 (application/json)

    + Body

            {
                "message": "Not Found",
                "statuscode": "404"
            }


+ Response 404 (application/json)

    + Body

            {
                "message": "Metaproperty does not exist",
                "statuscode": "404"
            }

### Delete metaproperty options[DELETE]

+ Request (application/json)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

    + Attributes
        + asset_id: `00000000-0000-0000-0000000000000000` (required, string) - Id of the asset.
        + metaproperty_id: `00000000-0000-0000-0000000000000000` (required, string) - Id of the metaproperty from which you want remove options.
        + metaproperty_option_ids: `["00000000-0000-0000-0000000000000000", "..."]` (required, array) - List of metaproperty option ids you want to remove from the asset.

+ Response 204 (application/json)

    + Body

            {
                "message": "No Content",
                "statuscode": 201
            }

+ Response 403 (application/json)

    + Body

            {
                "message": "Access denied",
                "statuscode": "403"
            }

+ Response 404 (application/json)

    + Body

            {
                "message": "Not Found",
                "statuscode": "404"
            }


+ Response 404 (application/json)

    + Body

            {
                "message": "Metaproperty does not exist",
                "statuscode": "404"
            }

# Group Asset usage

## Asset usage operations [/api/media/usage{?asset_id,integration_id,uri}]
These calls allow you to keep track of assets being exported from Bynder and imported into a third party application.
In order to get started or find an existing integration id you should check out this [Bynder support](https://help.bynder.com/en/216226-track-asset-usage.html#UUID-5db586ff-9502-8e5b-4355-ca3630fceee3_N1579707153615_body) article.
If you want to register a new third party application please contact us at [support@bynder.com](mailto:support@bynder.com).

**Warning:** Requires the **STATISTICS** security role.

### Create asset usage [POST]

+ Request (application/x-www-form-urlencoded)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Attributes
    + integration_id: `00000000-0000-0000-0000000000000000` (string, required) - Integration id.
    + asset_id: `00000000-0000-0000-0000000000000000` (string, required) - Asset id.
    + timestamp: `2014-12-25T10:30:00Z` (string, optional) - Datetime. ISO8601 format: yyyy-mm-ddThh:mm:ssZ.
    + uri: `/hippo/first_post` (string, optional) - Location.
    + additional: `Usage description` (string, optional) - Additional information.

+ Response 200 (application/json)

    + Body

            {
                "id": "00000000-0000-0000-0000-000000000000",
                "uri": "/hippo/first_post",
                "additional": null,
                "asset_id": "00000000-0000-0000-0000-000000000000",
                "timestamp": "2017-04-19T11:36:36.799508+00:00",
                "integration": {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "description": "Hippo"
                }
            }

+ Response 400 (application/json)

    + Body

            {
                "integration_id": "'test' is not a valid uuid",
                "asset_id": "'test' is not a valid uuid",
                "timestamp": "test is not a valid ISO 8601 timestamp"
            }

+ Response 400 (application/json)

    + Body

            {
                "integration_id": "Required",
                "asset_id": "Required",
                "uri": "Required"
            }

### Retrieve asset usage [GET]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + asset_id: `00000000-0000-0000-0000000000000000` (string, optional) - Asset id.
    + integration_id: `00000000-0000-0000-0000000000000000` (string, optional) - Integration id.
    + uri: `/hippo/first_post` (string, optional) - URI.

+ Response 200 (application/json)

    + Body

            [
                {
                    "asset_id": "00000000-0000-0000-0000-000000000000",
                    "id": "00000000-0000-0000-0000-000000000000",
                    "integration": {
                        "id": "00000000-0000-0000-0000-000000000000",
                        "description": "Hippo"
                    },
                    "timestamp": "2017-04-19T11:42:15+00:00",
                    "uri": "/hippo/first_post",
                    "additional": "Usage description"
                }, {
                    "asset_id": "00000000-0000-0000-0000-000000000001",
                    "id": "00000000-0000-0000-0000-000000000001",
                    "integration": {
                        "id": "00000000-0000-0000-0000-000000000000",
                        "description": "Hippo"
                    },
                    "timestamp": "2017-04-19T11:36:36+00:00",
                    "uri": null,
                    "additional": null
                }
            ]

+ Response 400 (application/json)

    + Body

            {
                "asset_id": "'test' is not a valid uuid"
            }

### Delete asset usage [DELETE]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + integration_id: `00000000-0000-0000-0000-000000000000` (string, required) - Integration id.
    + asset_id: `00000000-0000-0000-0000-000000000000` (string, required) - Asset id.
    + uri: `/hippo/first_post` (string, optional) - Asset location.

+ Response 204

+ Response 400 (application/json)

    + Body

            {
                "integration_id": "'test' is not a valid uuid",
                "asset_id": "'test' is not a valid uuid"
            }

+ Response 400 (application/json)

    + Body

            {
                "integration_id": "Required",
                "asset_id": "Required"
            }


## Sync asset usage operations [/api/media/usage/sync]
This alternative API call allows you to sync all your usage from a single integration.

* A usage will be created when there is no existing usage on the specified asset
* A usage will be updated when adding additional info
* A usage will be deleted when specifying a URI but not using that URI in a usage

**Warning:** Requires the **STATISTICS** security role.

### Sync asset usage [POST]

+ Request (application/json)
    + Headers

            Authorization: OAuth 2.0 Bearer access token.

    + Attributes
        + integration_id: `00000000-0000-0000-0000-000000000000` (string, required) - Integration id.
        + uris: `https://wordpress/?p=1`,`https://wordpress/?p=2` (array, required) - An array of URIs that are part of your integration. These are used to determine if usage should be created, updated or deleted. This list is not stored individually.
        + usages: [] (array[AssetUsage], required)

+ Response 200 (application/json)

    + Body

            {
                "accepted": [
                    {
                        "additional": "Example post title",
                        "asset_id": "42e3bc5b-bbba-4260-902a-bf284c06f8ea",
                        "uri": "http://wordpress/?page_id=5"
                    },
                    {
                        "additional": "Hello world!",
                        "asset_id": "9a8ee0a2-ae97-4b39-9710-43eb7ec61c97",
                        "uri": "http://wordpress/?p=1"
                    }
                ],
                "new": [
                    {
                        "additional": "Hello world!",
                        "asset_id": "9a8ee0a2-ae97-4b39-9710-43eb7ec61c97",
                        "id": "72444c87-a6b3-4ec3-87d5-6ff7042e0ee7",
                        "integration": {
                            "description": "Wordpress",
                            "id": "b242c16d-70f4-4101-8df5-87b35bbe56f0"
                        },
                        "timestamp": "2019-12-11T09:48:28.070650+00:00",
                        "uri": "http://wordpress/?p=1"
                    }
                ],
                "rejected": [
                    {
                        "asset_id": "aadd3333-a402-4616-aa07-6b0fdb286482",
                        "reason": "Media does not exist",
                        "uri": "http://wordpress/?p=3"
                    }
                ],
                "removed": []
            }


## Data Structures

### AssetUsage
+ asset_id: `00000000-0000-0000-0000000000000000` (string) - Asset id.
+ uri: `https://wordpress/?p=1` (string) - Location. This must match a value in the uris array.
+ additional: `Usage description` (string, optional) - Additional information.

# Group Dynamic Asset Transformations

## Generate dynamic asset transformation [/transform/{id}/{name}]

Generate a derivative on the fly with a transformation (such as cropping, scaling, filling) applied to it.
More information about this feature can be found in our [Knowledge Base item](https://support.bynder.com/hc/en-us/articles/360018559260-Dynamic-Asset-Transformations-DAT-).

Image operations can be passed as `io` parameters in the form of `transform:{operation},{param1}:{value1},{param2}:{value2},...`.
It's possible to specify several operations: `?io={operation1}&io={operation2}&...`. The operations will be applied in the same order they are passed in the url.

These are the possible image operations and their parameters:

| Operation |  Parameter  | Possible values |
| --------- | ----------- | --------------- |
|`background`| color | color name (yellow, black, etc.) or hexadecimal (rgb, rrggbb) |
|`crop`  | width | integer |
|        | height | integer |
|        | x | integer |
|        | y | integer |
|        | gravity | topleft / top / topright / left / center / right / bottomleft / bottom / bottomright |
|        | shape | circle / square |
|        | blur | integer |
|        | background | color name (yellow, black, etc.) or hexadecimal (rgb, rrggbb) |
|`extend`| width | integer |
|        | height | integer |
|        | background | color name (yellow, black, etc.) or hexadecimal (rgb, rrggbb) |
|`fill`   | width | integer |
|        | height | integer |
|        | gravity | topleft / top / topright / left / center / right / bottomleft / bottom / bottomright |
|        | aspectratio | {integer}x{integer} |
|`fit`    | width | integer |
|        | height | integer |
|`flip`   | (no parameters) | |
|`mirror`| (no parameters) | |
|`rotate`| angle | integer between 0 and 360 |
|        | background | color name (yellow, black, etc.) or hexadecimal (rgb, rrggbb) |
|`scale` | width | integer |
|        | height | integer |

### Generate dynamic asset transformation [GET]

+ Request

+ Parameters
    + io: `transform:crop,width:100,height:200` (array) - The operation(s) performed on the image before it's served to the client. It's possible to specify this parameter several times to have several operations applied.
    + focuspoint: `0.5,0.25` (string) - Focus point as a x,y coordinate (with values between 0 - 1). This will serve as the center point for the image operations.
    + format: `jpg` (string) - Format of the served image. This can either be `jpg` or `png` and it will overwrite the default `webP`.
    + quality: `75` (number) - Image quality, ranging from 1 - 100 (has no effect when `format` is set to 'png').

+ Response 200 (image)
+ Response 400 (text/plain)
    Image Operation not supported
+ Response 404 (text/plain)
    404: Not Found


# Group Upload assets
**Warning:** Uploading a new asset requires the **MEDIAUPLOAD** or **MEDIAUPLOADFORAPPROVAL** security role, in case you want to upload to the Waiting Room.

Follow these steps in order to upload a asset to Bynder:

## 1. Get closest AmazonS3 upload endpoint [/api/upload/endpoint]

### Get closest AmazonS3 upload endpoint [GET]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Response 200 (application/json)

    + Body

            "https://bynder-public-eu-central-1.s3.amazonaws.com/"

## 2. Initialise upload [/api/upload/init]

### Initialise upload [POST]
+ Request (application/x-www-form-urlencoded)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Attributes
    + filename: `image.jpeg` (string, required) - Filename of new upload (extension required).

+ Response 200 (application/json)

    + Body

            {
                "s3file": {
                    "uploadid": "UPLOAD_ID",
                    "targetid": "final/00000000-0000-0000-0000-000000000000/image.jpeg"
                },
                "s3_filename": "pluploads/api/00000000-0000-0000-0000-000000000000/image.jpeg",
                "target_key": "pluploads/api/00000000-0000-0000-0000-000000000000/image.jpeg",
                "multipart_params": {
                    "acl": "private",
                    "success_action_status": "201",
                    "Content-Type": "image/*",
                    "key": "pluploads/api/00000000-0000-0000-0000-000000000000/image.jpeg",
                    "Policy": "AWS_S3_POLICY",
                    "X-Amz-Signature": "AWS_S3_SIGNATURE",
                    "x-amz-credential": "AWS_S3_AUTH",
                    "x-amz-algorithm": "AWS4-HMAC-SHA256",
                    "x-amz-date": "20160216T100755Z"
                }
            }

+ Response 400 (text/plain)

    + Body

            The server could not comply with the request since it is either malformed or otherwise incorrect.

            Invalid input: {'filename': "'image' is not a valid filename"}

## 3. Upload file in chunks and register every uploaded chunk [/api/v4/upload/]
Uploading a file consists of:
* Breaking down your file in parts/chunks. Each part must be at least 5 MB in size, except the last part. There is no size limit on the last part of your multipart upload.
For more information, about how amazon handles parts/chunks, visit: [Amazon's website](http://docs.aws.amazon.com/AmazonS3/latest/API/mpUploadUploadPart.html).
* Sending the chunks over to Amazon and then registering them to Bynder. You can repeat those calls up until your file has been uploaded completely.

### 1. Upload a chunk

Make a POST request to the Amazon upload endpoint you received from calling [Get closest AmazonS3 upload endpoint](#reference/upload-assets/1-get-closest-amazons3-upload-endpoint/get-closest-amazons3-upload-endpoint).
Use a `multipart/form-data` to send all of the parameters that the `multipart_params` of the previous request included; plus the following additional parameters:
| Name      |  Value   |   Type    |
| --------  | -------- | --------  |
|`Content-Type`| Content type extracted from the `multipart_params`'s `Content-Type` of the response of the initialise upload request.| string |
|`Policy`| Policy extracted from the `multipart_params`'s `Policy` of the response of the initialise upload request.| string |
|`X-Amz-Signature`| Signature extracted from the `multipart_params`'s `X-Amz-Signature` of the response of the initialise upload request.| string |
|`acl`| Access control list extracted from the `multipart_params`'s `acl` of the response of the initialise upload request.| string |
|`key`| Key extracted from the `multipart_params`'s `key` of the response of the initialise upload request followed by p{Chunk index number}. Example: "pluploads/12345/image.png/p1". | string |
|`success_action_status`| Success action status extracted from the `multipart_params`'s `success_action_status` of the response of the initialise upload request.| string |
|`x-amz-algorithm`| Algorithm extracted from the `multipart_params`'s `x-amz-algorithm` of the response of the initialise upload request.| string |
|`x-amz-credential`| Credential extracted from the `multipart_params`'s `x-amz-credential` of the response of the initialise upload request.| string |
|`x-amz-date`| Date extracted from the `multipart_params`'s `x-amz-date` of the response of the initialise upload request.| string |
|`name`| Filename that was passed as attribute in the initialise upload request.| string |
|`chunk`| Chunk index number (indexing starts from 1).| number |
|`chunks`| Total number of chunks.| number |
|`Filename`| The value of the `key` from the `multipart_params` of the response of the initise upload request followed by p{Chunk index number}. Example: "pluploads/12345/image.png/p1". *ATTENTION*: `Filename` must start with capital `F`.| string |
|`file`| File or chunk of the file to be uploaded. | byte array |


## 2. Register uploaded chunk
After uploading a chunk, you must register it's completion to Bynder.

### Register uploaded chunk [POST /api/v4/upload/{id}/]

+ Request (application/x-www-form-urlencoded)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `T3.fS5.5HPhtYFtm2b_.e7wVe910tL5XQutKw1jkMqlP5cPQVyZkOZxZ9lJiGUk4FIw6M0CFZ3xogTWrm.GPI2p2CaglQcAS5aH37zT_vHJnbtkebYbheXIQc_.M_6hM` (string, required) - Upload id for the uploaded file.

+ Attributes
    + chunkNumber: `5` (number, required) - Number of the chunk that was uploaded.
    + targetid: `final/00000000-0000-0000-0000000000000000/Logo.png` (string, required) - The targetid that was returned by the initialise call.
    + filename: `api_uploads/00000000-0000-0000-0000000000000000/00000000-0000-0000-0000000000000000/Logo.png/p5` (string, required) - Location of the uploaded chunk.

+ Response 202 (application/json)

    + Body

            {
                "status": "ok"
            }

## 4. Finalise a completely uploaded file [/api/v4/upload/{id}/]

### Finalise a completely uploaded file [POST]

+ Request (application/x-www-form-urlencoded)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `T3.fS5.5HPhtYFtm2b_.e7wVe910tL5XQutKw1jkMqlP5cPQVyZkOZxZ9lJiGUk4FIw6M0CFZ3xogTWrm.GPI2p2CaglQcAS5aH37zT_vHJnbtkebYbheXIQc_.M_6hM` (string, required) - Upload id for the uploaded file.

+ Attributes
    + targetid: `final/E3333526-7F87-49F9-B49C0054C0D31477/Logo.png` (string, required) - Target id as returned by the initialise call.
    + `s3_filename`: `api_uploads/159D8D4B-B981-49B8-BF0569FD144CB359/A29FABF0-26B8-44BF-890920E4C09E7C11/Logo.png` (string, required) - Base location of the uploaded file.
    + chunks: `5` (number, required) - Total number of chunks uploaded.
    + original_filename: `Logo.png` (string, optional) - Filename including special characters to be displayed in Bynder.

+ Response 202 (application/json)

    + Body

            {
                "output": "final/2ba07d00-586a-4a44-b13c-c58598cfe828/",
                "batchId": "00000000-0000-0000-0000000000000000",
                "file": {
                    "bucket": "BUCKET",
                    "path": "final/2ba07d00-586a-4a44-b13c-c58598cfe828/IMG_1874.JPG",
                    "type": "s3"
                },
                "filename": "final/2ba07d00-586a-4a44-b13c-c58598cfe828/IMG_1874.JPG",
                "importId": "000000000-0000-0000-0000000000000000",
                "locationType": "s3",
                "success": 1
            }

+ Response 500 (application/json)
The following response normally indicates that something was not properly done in the previous step [Upload file in chunks and register every uploaded chunk](#reference/upload-assets/3-upload-file-in-chunks-and-register-every-uploaded-chunk)

    + Body

            {
                "message": "Could not complete upload",
                "retry": 1,
                "success": false
            }

### Finalise a completely uploaded file and save as a new asset additional [POST /api/v4/media/{id}/save/additional/{uploadId}/]
**Warning:** This call should only be used if you are uploading an additional file for an asset, if you are not go to step 5.

+ Request (application/x-www-form-urlencoded)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000-000000000000` (string, required) - Asset id to which to save the new additional.
    + uploadId: `00000000-0000-0000-0000-000000000000` (string, required) - The upload id of the file.

+ Attributes
    + targetid: `final/E3333526-7F87-49F9-B49C0054C0D31477/Logo.png` (string, required) - Target id as returned by the initialise call.
    + `s3_filename`: `api_uploads/159D8D4B-B981-49B8-BF0569FD144CB359/A29FABF0-26B8-44BF-890920E4C09E7C11/Logo.png` (string, required) - Base location of the uploaded file.
    + chunks: `5` (number, required) - Total number of chunks uploaded.

+ Response 201 (application/json)

    + Body

            {
                "itemId": "21F24BCF-DD76-4FE3-9B7C5936A2FA958C"
            }

+ Response 400 (application/json)

    + Body

            {
                "message": "Media ID not provided",
                "statuscode": "400"
            }

+ Response 403 (application/json)

    + Body

            {
                "message": "Access denied",
                "statuscode": "403"
            }

## 5. Poll processing state of finalised files [/api/v4/upload/poll/{?items}]
**Warning:** This call needs to be executed in a loop until its response returns the item(s) id(s) passed in the **items** parameter.

### Retrieve poll state [GET]
+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + items: `00000000-0000-0000-0000-000000000000,00000000-0000-0000-0000-000000000000` (string, required) - Comma-separated import id's of a finalised file, as returned by the finalise call.

+ Response 200 (application/json)

    + Body

            {
                "itemsDone": ["00000000-0000-0000-0000000000000000"],
                "itemsFailed": [],
                "itemsRejected": []
            }


## 6. Saving a completed upload [/api/v4/media/save/{importId}/]

### Save as a new asset [POST]

**Warning:** For metaproperties that use options (Select, Select2, Autocomplete), modifying an asset's metaproperty options should be done via option UUID's for the api to work optimally, sending name or label values will be deprecated in the future. Other metaproperties (Date, Text and Longtext), values can be submitted directly.

+ Request (application/x-www-form-urlencoded)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + importId: `00000000-0000-0000-0000-000000000000` (string, required) - Import id of a finalised and processed upload to be saved.

+ Attributes
    + brandId: `00000000-0000-0000-0000000000000000` (string, required) - Brand id to save the asset to.
    + name: `Asset name` (string, optional) - Name of the asset.
    *Warning:* The asset will have no name if this is left empty.
    + description: `Extended asset description` (string, optional) - Description of the asset.
    + copyright: `Copyright (c) Example corp.` (string, optional) - Copyright information of the asset.
    + tags: `scenery,grassland,Holland` (string, optional) - Comma-separated list of tags of the asset.
    + metaproperty: `metaproperty.00000000-0000-0000-0000000000000000 = 00000000-0000-0000-0000000000000000,00000000-0000-0000-0000000000000000` (string, optional) - Dictionary with (metaproperty) options to set on the asset. Send fields as `metaproperty.METAPROPERY_ID` with a string of all its (metaproperty) options ids comma-separated.
    *Warning:* The list of (metaproperty) options ids should include all the (metaproperty) options ids available in the lower hierarchy; meaning it should include the (metaproperty) options of the (metaproperty) options etc.
    + categories: `00000000-0000-0000-0000000000000000,00000000-0000-0000-0000000000000000` (string, optional) - Comma-separated category ids of the asset.
    + audit: `true` (boolean, optional) - Flags if the asset should be sent to the waiting room.
    *Warning:* In order to be able to chose whether or not the asset will be uploaded to the waiting room you'll need both the MEDIAUPLOAD and MEDIAUPLOADFORAPPROVAL security role.
    + isPublic: `true` (boolean, optional) - Flags if the asset should be Public.
    + accessRequestId: `00000000-0000-0000-0000000000000000` (string, optional) - If audit is set to `true` you can specify an accessRequestId to batch uploads to the waiting room. The accessRequestId is retrieved in the response of this endpoint, after you save the first asset of your batch.
    + requestorId: `00000000-0000-0000-0000000000000000` (string, optional) - If audit is set to `true` you can specify a requestor ID (user ID) to identify the user uploading the asset to the waiting room.
    + accessType (enum, optional) - If audit is set to `true` you can specify an access type to define to which waiting room location the asset is uploaded to. The available locations are: Upload, Edit, Workflow approval (export), Shutterstock and Stock.
        + Default
            + `upload`
        + Members
            + `upload`
            + `edit`
            + `export`
            + `shutterstock`
            + `stock`
    + ISOPublicationDate: `2014-06-12T14:53:21-04:00` (string, optional) - Date/time of publication in ISO08601-format.
    + publicationDate: `05-31-2010` (string, optional) - *DEPRECATED* Date/time of publication in linked API user selected locale-format.
    + archiveDate: `2014-12-25T10:30:00Z` (string, optional) - Archive date/time of the asset in ISO8601-format.
    + watermarkDate: `2014-12-25T10:30:00Z` (string, optional) - Watermark datetime. ISO8601 format: yyyy-mm-ddThh:mm:ssZ.
    + limited: `true` (boolean, optional) - Indicating the limit state of the asset.
    + limitedDate: `2014-12-25T10:30:00Z` (string, optional) - Limit datetime. ISO8601 format: yyyy-mm-ddThh:mm:ssZ.
    + crc32: `79764919` (number, optional) - CRC32 checksum of the original file, used for verification.

+ Response 201 (application/json)

    + Body

            {
                "accessRequestId": "00000000-0000-0000-0000000000000000",
                "mediaid": "00000000-0000-0000-0000000000000000",
                "batchId": "00000000-0000-0000-0000000000000000",
                "success": true,
                "mediaitems": [{
                    "original": "final/00000000-0000-0000-0000000000000000/image.jpg",
                    "destination": "___URL_TO_BYNDER_CDN___"
                }, {
                    "original": "final/00000000-0000-0000-0000000000000000/thul-image.jpg",
                    "destination": "___URL_TO_BYNDER_CDN___"
                }, {
                    "original": "final/00000000-0000-0000-0000000000000000/mini-image.jpg",
                    "destination": "___URL_TO_BYNDER_CDN___"
                }]
            }

+ Response 303 (application/json)

    + Body

            {
                "message": "Import not converted yet, please poll",
                "statuscode": "303"
            }

+ Response 400 (application/json)

    + Body

            {
                "message": "No importid provided",
                "statuscode": "400"
            }

+ Response 400 (application/json)

    + Body

            {
                "message": "No brandid provided",
                "statuscode": "400"
            }

+ Response 400 (application/json)

    + Body

            {
                "message": "Invalid unsigned integer for CRC32",
                "statuscode": "400"
            }

+ Response 400 (application/json)

    + Body

            {
                "message": "Invalid argument type for CRC32",
                "statuscode": "400"
            }

+ Response 400 (application/json)

    + Body

            {
                "message": "Date format not ISO8601-compliant",
                "statuscode": "400"
            }

+ Response 403 (application/json)

    + Body

            {
                "message": "Access denied",
                "statuscode": "403"
            }

+ Response 404 (application/json)

    + Body

            {
                "message": "Import ID not found",
                "statuscode": "404"
            }

+ Response 404 (application/json)

    + Body

            {
                "message": "Upload doesn't exist",
                "statuscode": "404"
            }

+ Response 500 (application/json)

    + Body

            {
                "message": "Upload failed or not ready",
                "statuscode": "500"
            }

### Save as a new asset version [POST /api/v4/media/{id}/save/{importId}/]

+ Request (application/x-www-form-urlencoded)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - Asset id for which to save the new version.
    + importId: `00000000-0000-0000-0000000000000000` (string, required) - Import id of a finalised and processed upload to be saved.

+ Response 201 (application/json)

    + Body

            {
                "mediaid": "00000000-0000-0000-0000000000000000",
                "batchId": "00000000-0000-0000-0000000000000000",
                "success": true,
                "mediaitems": [{
                    "original": "final/00000000-0000-0000-0000000000000000/image.jpg",
                    "destination": "___URL_TO_BYNDER_CDN___"
                }, {
                    "original": "final/00000000-0000-0000-0000000000000000/thul-image.jpg",
                    "destination": "___URL_TO_BYNDER_CDN___"
                }, {
                    "original": "final/00000000-0000-0000-0000000000000000/mini-image.jpg",
                    "destination": "___URL_TO_BYNDER_CDN___"
                }]
            }


# Group Download

## Download operations [/api/v4/media/{id}/download/{?type}]

**Warning:** Requires the **MEDIAHIGHRES** security role.

**Warning:** Requires the **ARCHIVEDOWNLOAD** security role if the asset in question is archived.

**Warning:** Requires the **DOWNLOADWATERMARK** security role if the asset in question is watermarked.

**Warning:** Requires the **KEYVISUALSDOWNLOAD** security role if the asset in question is marked as limited usage.

### Retrieve asset download location [GET]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - Asset id.
    + type: `additional` (enum[string], optional) - Type of files to download. Note that when multiple additional files are available only the download url of the latest one will be returned.
        + Default: `original`
        + Members
            + `original`
            + `additional`

+ Response 200 (application/json)
    URL from which you can download the requested asset file. Note that when you've set a download disclaimer in the portal for the asset in question the return will contain that disclaimer. Enforcing the acceptance of the disclaimer is the responsibility of your application.

    + Body

            {
                "disclaimer": "<p>1. The photographs and video in the mediabank are to be used by anyone and everyone.</p>",
                "s3_file": "___TEMPORARY_DOWNLOAD_URL___"
            }

+ Response 404 (application/json)

    + Body

            {
                "message": "Original file not available",
                "statuscode": "404"
            }

+ Response 400 (application/json)

    + Body

            {
                "message": "Invalid type",
                "statuscode": "400"
            }

## Download asset version [/api/v4/media/{id}/{version}/download/]

### Retrieve asset version download location [GET]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - Asset id.
    + version: `3` (number, required) - Asset version to download.

+ Response 200
    URL from which you can download the requested asset file. Note that when you've set a download disclaimer in the portal for the asset in question the return will contain that disclaimer. Enforcing the acceptance of the disclaimer is the responsibility of your application.

    + Body

            {
                "disclaimer": "<p>1. The photographs and video in the mediabank are to be used by anyone and everyone.</p>",
                "s3_file": "___TEMPORARY_DOWNLOAD_URL___"
            }

## Download specific asset item [/api/v4/media/{id}/download/{itemId}/{?hash}]

### Retrieve specific asset item download location [GET]
+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - The id of the asset you’d like to download a item of.
    + itemId: `00000000-0000-0000-0000000000000000` (string, required) - The id of the specific asset item you’d like to download.
    + hash: `1` (boolean, optional) - Indicates whether or not to treat the itemId as a hashed item id.
        + Default: 0

+ Response 200
    URL from which you can download the requested asset file. Note that when you've set a download disclaimer in the portal for the asset in question the return will contain that disclaimer. Enforcing the acceptance of the disclaimer is the responsibility of your application.

    + Body

            {
                "disclaimer": "<p>1. The photographs and video in the mediabank are to be used by anyone and everyone.</p>",
                "s3_file": "___TEMPORARY_DOWNLOAD_URL___"
            }


# Group Metaproperties

## Metaproperty operations [/api/v4/metaproperties/{?count,type,options,ids}]

### Retrieve metaproperties [GET]
**Warning:** Please always ensure to remove the metaproperty options from the response when using this endpoint. Include the param `options=0` in every request sent.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + count: `1` (boolean, optional) - Indicates whether or not the response should include asset count results for metaproperty-options.
        + Default: `0`
    + type: `image` (string, optional) - Comma-separated list of asset types. Filters the count results by asset type. It only makes sense to be defined if the count parameter was set to 1.
        + Members
            + `image`
            + `document`
            + `audio`
            + `video`
            + `3d`
    + options: `0` (boolean, optional) - Indicates whether or not the response should include the metaproperty options of each metaproperty. Please always send `options=0` as this endpoint should not be used to retrieve metaproperty options.
        + Default: `1`
    + ids: `00000000-0000-0000-0000000000000000,00000000-0000-0000-0000000000000000` (string, optional) - Comma-separated list of metaproperty ids. Will return a metaproperty for each existing id.

+ Response 200 (application/json)
The following example response is for when `count=0` or the count parameter is missing.

    + Body

            {
                "Colours": {
                    "isMultiselect": 0,
                    "isMultifilter": 0,
                    "isRequired": 0,
                    "isMainfilter": 1,
                    "isFilterable": 1,
                    "isApiField": 1,
                    "isDisplayField": 0,
                    "isDrilldown": 0,
                    "isEditable": 1,
                    "name": "colours",
                    "label": "Colours",
                    "zindex": 16,
                    "id": "00000000-0000-0000-0000000000000000",
                    "type": "sidebar",
                    "showInListView": 1,
                    "showInGridView": 0,
                    "showInDuplicateView": 0,
                    "useDependencies": 0,
                    "options": [{
                        "displayLabel": "Yellow",
                        "date": "February, 15 2017 14:54:58 +0000",
                        "pregeneratedZipFileSize": 0,
                        "linkedOptionIds": [],
                        "isSelectable": 1,
                        "zindex": 1,
                        "product_suffix": "",
                        "name": "yellow",
                        "id": "00000000-0000-0000-0000000000000000",
                        "active": 1,
                        "label": "Yellow",
                        "labels": {
                            "nl_NL": "Geel",
                            "en_US": "Yellow"
                        },
                        "descriptions": {},
                        "description": "",
                        "hideByDefault": 0,
                        "image": "___URL_TO_BYNDER_CDN___"
                    }, {
                        "displayLabel": "Red",
                        "date": "February, 15 2017 15:50:55 +0000",
                        "pregeneratedZipFileSize": 0,
                        "linkedOptionIds": [],
                        "isSelectable": 1,
                        "zindex": 1,
                        "product_suffix": "",
                        "name": "red",
                        "id": "00000000-0000-0000-0000000000000001",
                        "active": 1,
                        "label": "Red",
                        "labels": {
                            "nl_NL": "Rood",
                            "en_US": "Red"
                        },
                        "descriptions": {},
                        "description": "",
                        "hideByDefault": 0,
                        "image": "___URL_TO_BYNDER_CDN___"
                    }]
                },
                "Bob_button": {
                    "isMultiselect": 0,
                    "isMultifilter": 0,
                    "isRequired": 0,
                    "isMainfilter": 1,
                    "isFilterable": 1,
                    "isApiField": 1,
                    "isDisplayField": 0,
                    "isDrilldown": 0,
                    "isEditable": 1,
                    "name": "Bob_button",
                    "label": "Bob_button",
                    "zindex": 2,
                    "id": "00000000-0000-0000-0000000000000001",
                    "type": "button",
                    "showInListView": 1,
                    "showInGridView": 0,
                    "showInDuplicateView": 0,
                    "useDependencies": 0,
                    "options": []
                }
            }

+ Response 200 (application/json)
The following example response is for when `count=1`.

    + Body

            {
                "Colours": {
                    "isMultiselect": 0,
                    "isMultifilter": 0,
                    "isRequired": 0,
                    "isMainfilter": 1,
                    "isFilterable": 1,
                    "isApiField": 1,
                    "isDisplayField": 0,
                    "isDrilldown": 0,
                    "isEditable": 1,
                    "name": "colours",
                    "label": "Colours",
                    "zindex": 16,
                    "id": "00000000-0000-0000-0000000000000000",
                    "type": "sidebar",
                    "showInListView": 1,
                    "showInGridView": 0,
                    "showInDuplicateView": 0,
                    "useDependencies": 0,
                    "options": [{
                        "displayLabel": "Yellow",
                        "date": "February, 15 2017 14:54:58 +0000",
                        "pregeneratedZipFileSize": 0,
                        "linkedOptionIds": [],
                        "isSelectable": 1,
                        "zindex": 1,
                        "product_suffix": "",
                        "name": "yellow",
                        "id": "00000000-0000-0000-0000000000000000",
                        "active": 1,
                        "label": "Yellow",
                        "labels": {
                            "nl_NL": "Geel",
                            "en_US": "Yellow"
                        },
                        "descriptions": {},
                        "description": "",
                        "hideByDefault": 0,
                        "image": "___URL_TO_BYNDER_CDN___",
                        "mediaCount": 421
                    }, {
                        "displayLabel": "Red",
                        "date": "February, 15 2017 15:50:55 +0000",
                        "pregeneratedZipFileSize": 0,
                        "linkedOptionIds": [],
                        "isSelectable": 1,
                        "zindex": 1,
                        "product_suffix": "",
                        "name": "red",
                        "id": "00000000-0000-0000-0000000000000001",
                        "active": 1,
                        "label": "Red",
                        "labels": {
                            "nl_NL": "Rood",
                            "en_US": "Red"
                        },
                        "descriptions": {},
                        "description": "",
                        "hideByDefault": 0,
                        "image": "___URL_TO_BYNDER_CDN___",
                        "mediaCount": 213
                    }]
                },
                "Bob_button": {
                    "isMultiselect": 0,
                    "isMultifilter": 0,
                    "isRequired": 0,
                    "isMainfilter": 1,
                    "isFilterable": 1,
                    "isApiField": 1,
                    "isDisplayField": 0,
                    "isDrilldown": 0,
                    "isEditable": 1,
                    "name": "Bob_button",
                    "label": "Bob_button",
                    "zindex": 2,
                    "id": "00000000-0000-0000-0000000000000001",
                    "type": "button",
                    "showInListView": 1,
                    "showInGridView": 0,
                    "showInDuplicateView": 0,
                    "useDependencies": 0,
                    "options": []
                }
            }

+ Response 200 (application/json)
The following example response is for when `options=0`.

    + Body

            {
                "Colours": {
                    "isMultiselect": 0,
                    "isMultifilter": 0,
                    "isRequired": 0,
                    "isMainfilter": 1,
                    "isFilterable": 1,
                    "isApiField": 1,
                    "isDisplayField": 0,
                    "isDrilldown": 0,
                    "isEditable": 1,
                    "name": "colours",
                    "label": "Colours",
                    "zindex": 16,
                    "id": "00000000-0000-0000-0000000000000000",
                    "type": "sidebar",
                    "showInListView": 1,
                    "showInGridView": 0,
                    "showInDuplicateView": 0,
                    "useDependencies": 0,
                },
                "Bob_button": {
                    "isMultiselect": 0,
                    "isMultifilter": 0,
                    "isRequired": 0,
                    "isMainfilter": 1,
                    "isFilterable": 1,
                    "isApiField": 1,
                    "isDisplayField": 0,
                    "isDrilldown": 0,
                    "isEditable": 1,
                    "name": "Bob_button",
                    "label": "Bob_button",
                    "zindex": 2,
                    "id": "00000000-0000-0000-0000000000000001",
                    "type": "button",
                    "showInListView": 1,
                    "showInGridView": 0,
                    "showInDuplicateView": 0,
                    "useDependencies": 0,
                }
            }

### Create metaproperty [POST]
**Warning:** Requires the **METAPROPERTYMANAGEMENT** or **METAMANAGEMENT** security role.

+ Request (application/x-www-form-urlencoded)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Attributes
    + data - JSON-serialised string
        + name: `ColourMeta` (string, required) - Name of the metaproperty, should be alphanumeric only. Cannot be modified after the metaproperty has been created.
        + type (enum, required) - Type of the metaproperty. More information about the different types can be found **[here](https://support.bynder.com/hc/en-us/articles/360013872780-Manage-metaproperties)**.
            + Members
                + `select`
                + `autocomplete`
                + `text`
                + `longtext`
                + `sidebar`
                + `date`
                + `linked_assets`
        + label: `Colour` (string, required) - Human-readable label.
        + labels: `{"fr_FR": "foo","en_US": "foo"}` (string, optional) - Struct of labels for supported languages which can be retrieved using the [Retrieve account](#reference/account/account-operations/retrieve-account-information) call.
        + zindex: `4` (number, optional) - Sorting order number.
        + isEditable: `true` (boolean, optional) - Allows editing the metaproperty later.
        + isFilterable: `true` (boolean, optional) - Makes the metaproperty available for filtering.
        + isMainfilter: `true` (boolean, optional) - Shows the metaproperty as a main filter.
        + isMultiselect: `true` (boolean, optional) - Allows assigning multiple metaproperty options to the same asset.
        + isRequired: `true` (boolean, optional) - Requires setting this metaproperty for the creation of new assets.
        + isMultifilter: `true` (boolean, optional) - Allows filtering with multiple metaproperty options.
        + isDrilldown: `true` (boolean, optional) - Narrows down the results to the selected metaproperty and related metaproperties. Other filters will not display.
        + isDisplayField: `true` (boolean, optional) - Shows the metaproperty on the asset detail page.
        + isApiFIeld: `true` (boolean, optional) - Returns this metaproperty in the output for the retrieving assets calls. Defaults to `true` when created via the API.

+ Response 201 (application/json)

    + Body

            {
                "message": "Created",
                "statuscode": 201,
                "id": "00000000-0000-0000-0000000000000000"
            }

+ Response 400 (application/json)

    + Body

            {
                "message": "Invalid metaproperty type",
                "statuscode": "400"
            }

## Specific metaproperty operations [/api/v4/metaproperties/{id}/{?data,count,type,options}]

### Retrieve specific metaproperty [GET]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - Metaproperty id.
    + count: `1` (boolean, optional) - Indicates whether or not the response should include asset count results for metaproperty-options.
        + Default: `0`
    + type: `image` (string, optional) - Comma-separated list of asset types. Filters the count results by asset type. It only makes sense to be defined if the count parameter was set to 1.
        + Members
            + `image`
            + `document`
            + `audio`
            + `video`
            + `3d`
    + options: `1` (boolean, optional) - Indicates whether or not the response should include the metaproperty options of the metaproperty.
        + Default: `1`

+ Response 200 (application/json)

    + Body

            {
                "isMultiselect": 0,
                "isMultifilter": 0,
                "isRequired": 0,
                "isMainfilter": 1,
                "isFilterable": 1,
                "isApiField": 1,
                "isDisplayField": 0,
                "isDrilldown": 0,
                "isEditable": 1,
                "name": "colours",
                "label": "Colours",
                "zindex": 16,
                "id": "00000000-0000-0000-0000000000000000",
                "type": "sidebar",
                "showInListView": 1,
                "showInGridView": 0,
                "showInDuplicateView": 0,
                "useDependencies": 0,
                "options": [{
                    "displayLabel": "Yellow",
                    "date": "February, 15 2017 14:54:58 +0000",
                    "pregeneratedZipFileSize": 0,
                    "linkedOptionIds": [],
                    "zindex": 1,
                    "product_suffix": "",
                    "name": "yellow",
                    "id": "00000000-0000-0000-0000000000000000",
                    "active": 1,
                    "label": "Yellow",
                    "labels": {
                        "nl_NL": "Geel",
                        "en_US": "Yellow"
                    },
                    "descriptions": {},
                    "description": "",
                    "hideByDefault": 0,
                    "image": "___URL_TO_BYNDER_CDN___"
                }, {
                    "displayLabel": "Red",
                    "date": "February, 15 2017 15:50:55 +0000",
                    "pregeneratedZipFileSize": 0,
                    "linkedOptionIds": [],
                    "isSelectable": 1,
                    "zindex": 1,
                    "product_suffix": "",
                    "name": "red",
                    "id": "00000000-0000-0000-0000000000000000",
                    "active": 1,
                    "label": "Red",
                    "labels": {
                        "nl_NL": "Rood",
                        "en_US": "Red"
                    },
                    "descriptions": {},
                    "description": "",
                    "hideByDefault": 0,
                    "image": "___URL_TO_BYNDER_CDN___"
                }]
            }

+ Response 404 (application/json)

    + Body

            {
                "message": "Metaproperty not found",
                "statuscode": "404"
            }

### Modify metaproperty [POST]
**Warning:** Requires the **METAPROPERTYMANAGEMENT** or **METAMANAGEMENT** security role.

+ Request (application/x-www-form-urlencoded)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - Metaproperty id.

+ Attributes
    + data - JSON-serialised string
        + type (enum, optional) - Type of the metaproperty. More information about the different types can be found **[here](https://support.bynder.com/hc/en-us/articles/360013872780-Manage-metaproperties)**.
            + Members
                + `select`
                + `autocomplete`
                + `text`
                + `longtext`
                + `sidebar`
                + `date`
                + `linked_assets`
        + label: `Colour` (string, optional) - Human-readable label.
        + labels: `{"fr_FR": "foo","en_US": "foo"}` (string, optional) - Struct of labels for supported languages which can be retrieved using the [Retrieve account](#reference/account/account-operations/retrieve-account-information) call.
        + zindex: `4` (number, optional) - Sorting order number.
        + isEditable: `true` (boolean, optional) - Allows editing the metaproperty later.
        + isFilterable: `true` (boolean, optional) - Makes the metaproperty available for filtering.
        + isMainfilter: `true` (boolean, optional) - Shows the metaproperty as a main filter.
        + isMultiselect: `true` (boolean, optional) - Allows assigning multiple metaproperty options to the same asset.
        + isRequired: `true` (boolean, optional) - Requires setting this metaproperty for the creation of new assets.
        + isMultifilter: `true` (boolean, optional) - Allows filtering with multiple metaproperty options.
        + isDrilldown: `true` (boolean, optional) - Narrows down the results to the selected metaproperty and related metaproperties. Other filters will not display.
        + isDisplayField: `true` (boolean, optional) - Shows the metaproperty on the asset detail page.
        + isApiFIeld: `true` (boolean, optional) - Returns this metaproperty in the output for the retrieving assets calls. Defaults to `true` when created via the API.

+ Response 201 (application/json)

    + Body

            {
                "message": "Created",
                "statuscode": 201
            }

+ Response 400 (application/json)

    + Body

            {
                "message": "Invalid metaproperty type",
                "statuscode": "400"
            }

+ Response 404 (application/json)

    + Body

            {
                "message": "Metaproperty not found",
                "statuscode": "404"
            }

### Delete metaproperty [DELETE]
**Warning:** Requires the **METAPROPERTYMANAGEMENT** or **METAMANAGEMENT** security role.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - Metaproperty id.

+ Response 204

+ Response 404 (application/json)

    + Body

            {
                "message": "Metaproperty not found",
                "statuscode": "404"
            }

## Metaproperty dependency operations [/api/v4/metaproperties/{id}/dependencies/]
When a metaproperty has dependencies, the metaproperty won't be visble until a linked option is selected in the upload/bulk edit.
This call returns a list of depending meteproperty option ids.

### Retrieve metaproperty dependencies [GET]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - Metaproperty id.

+ Response 200 (application/json)

    + Body

            [
                "00000000-0000-0000-0000000000000000",
                "00000000-0000-0000-0000000000000001"
            ]

+ Response 404 (application/json)

    + Body

            {
                "message": "Unknown metaproperty",
                "statuscode": "404"
            }

## Specific metaproperty dependency operations [/api/v4/metaproperties/{id}/dependencies/{dependencyId}/]
**Warning:** Specific metaproperty dependency operations require the **METAPROPERTYMANAGEMENT** or **METAMANAGEMENT** security role.

### Create dependency [POST]

+ Request (application/x-www-form-urlencoded)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - The id of the metaproperty to which you’d like to add a dependency.
    + dependencyId: `00000000-0000-0000-0000000000000000` (string, required) - Id of the (Metaproperty) option you'd like to become a dependency.

+ Response 201 (application/json)

    + Body

            {
                "message": "Created",
                "statuscode": 201
            }

+ Response 404 (application/json)

    + Body

            {
                "message": "Unknown metaproperty",
                "statuscode": "404"
            }

+ Response 404 (application/json)

    + Body

            {
                "message": "Unknown metaproperty option",
                "statuscode": "404"
            }

### Delete dependency [DELETE]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - The id of the metaproperty from which you’d like to delete a dependency.
    + dependencyId: `00000000-0000-0000-0000000000000000` (string, required) - Id of the (Metaproperty) option you'd like to no longer be a dependency.

+ Response 204

+ Response 404 (application/json)

    + Body

            {
                "message": "Unknown metaproperty",
                "statuscode": "404"
            }

+ Response 404 (application/json)

    + Body

            {
                "message": "Unknown metaproperty option",
                "statuscode": "404"
            }

## Metaproperty option operations [/api/v4/metaproperties/{id}/options/]

### Retrieve metaproperty options by ids [GET /api/v4/metaproperties/options/{?ids}]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + ids: `00000000-0000-0000-0000000000000000,00000000-0000-0000-0000000000000000` (string, required) - Comma-separated list of metaproperty-option ids.

+ Response 200 (application/json)

    + Body

            [
                {
                    "displayLabel": "Yellow",
                    "date": "February, 15 2017 14:54:58 +0000",
                    "pregeneratedZipFileSize": 0,
                    "linkedOptionIds": [],
                    "zindex": 1,
                    "product_suffix": "",
                    "name": "yellow",
                    "id": "00000000-0000-0000-0000000000000000",
                    "active": 1,
                    "label": "Yellow",
                    "labels": {
                        "nl_NL": "Geel",
                        "en_US": "Yellow"
                    },
                    "descriptions": {},
                    "description": "",
                    "hideByDefault": 0,
                    "image": "___URL_TO_BYNDER_CDN___",
                    "metapropertyId": "00000000-0000-0000-0000000000000000",
                    "externalReference": ""
                },
                {
                    "displayLabel": "Red",
                    "date": "February, 15 2017 15:50:55 +0000",
                    "pregeneratedZipFileSize": 0,
                    "linkedOptionIds": [],
                    "isSelectable": 1,
                    "zindex": 1,
                    "product_suffix": "",
                    "name": "red",
                    "id": "00000000-0000-0000-0000000000000000",
                    "active": 1,
                    "label": "Red",
                    "labels": {
                        "nl_NL": "Rood",
                        "en_US": "Red"
                    },
                    "descriptions": {},
                    "description": "",
                    "hideByDefault": 0,
                    "image": "___URL_TO_BYNDER_CDN___",
                    "metapropertyId": "00000000-0000-0000-0000000000000000",
                    "externalReference": ""
                }
            ]

+ Response 400 (application/json)

    + Body

            {
                "message": "No data sent",
                "statuscode": "400"
            }

+ Response 400 (application/json)

    + Body

            {
                "message": "Invalid metaproperty option id sent",
                "statuscode": "400"
            }

### Retrieve metaproperty options [GET /api/v4/metaproperties/{id}/options/{?name,limit,page,externalReference}]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + name: `Amsterdam` (string, optional) - Metaproperty option name.
    + limit: `250` (number, optional) - Maximum number of results.<br/>Maximum: 1000.
        + Default: 50
    + page: `1` (number, optional) - Offset page for results: return the N-th set of limit-results.
        + Default: 1
    + externalReference: (string, optional) - External reference string exact match.

+ Response 200 (application/json)

    + Body

            [
                {
                    "displayLabel": "Yellow",
                    "date": "February, 15 2017 14:54:58 +0000",
                    "pregeneratedZipFileSize": 0,
                    "linkedOptionIds": [],
                    "zindex": 1,
                    "product_suffix": "",
                    "name": "yellow",
                    "id": "00000000-0000-0000-0000000000000000",
                    "active": 1,
                    "label": "Yellow",
                    "labels": {
                        "nl_NL": "Geel",
                        "en_US": "Yellow"
                    },
                    "descriptions": {},
                    "description": "",
                    "hideByDefault": 0,
                    "image": "___URL_TO_BYNDER_CDN___",
                    "metapropertyId": "00000000-0000-0000-0000000000000000",
                    "externalReference": ""
                },
                {
                    "displayLabel": "Red",
                    "date": "February, 15 2017 15:50:55 +0000",
                    "pregeneratedZipFileSize": 0,
                    "linkedOptionIds": [],
                    "isSelectable": 1,
                    "zindex": 1,
                    "product_suffix": "",
                    "name": "red",
                    "id": "00000000-0000-0000-0000000000000000",
                    "active": 1,
                    "label": "Red",
                    "labels": {
                        "nl_NL": "Rood",
                        "en_US": "Red"
                    },
                    "descriptions": {},
                    "description": "",
                    "hideByDefault": 0,
                    "image": "___URL_TO_BYNDER_CDN___",
                    "metapropertyId": "00000000-0000-0000-0000000000000000",
                    "externalReference": ""
                }
            ]

+ Response 400 (application/json)

    + Body

            {
                "message": "Invalid metaproperty ID",
                "statuscode": "400"
            }

### Create metaproperty option [POST]
**Warning:** Requires the **METAPROPERTYMANAGEMENT** or **METAMANAGEMENT** security role.

+ Request (application/x-www-form-urlencoded)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - The id of the metaproperty to which you’d like to add a option.

+ Attributes
    + data - JSON-serialised string
        + name: `BlueType` (string, required) - Name of the (metaproperty) option, should be alphanumeric only. Cannot be modified after the metaproperty has been created.
        + externalReference: `Reference number 1` (string, optional) - Attribute that can be used to refer to options via integrations
        + label: `Blue` (string, optional) - Human-readable label. If no label is set, the name will be used.
        + labels: `{"fr_FR": "foo","en_US": "foo"}` (string, optional) - Struct of labels for supported languages which can be retrieved using the [Retrieve account](#reference/account/account-operations/retrieve-account-information) call.
        + zindex: `4` (number, optional) - Sorting order number.
        + isSelectable: `true` (boolean, optional) - Indicating whether or not the (metaproperty) option can be selected when saving/editing assets.
        + parentId: `00000000-0000-0000-0000000000000000` (string, optional) - Id of the parent option this option should be a child of.
        + options - List of structs with child options to create. In order to add options to the option you’re creating you can simply repeat this entire JSON-serialised string struct.
            + name: `BlueType` (string, required) - Name of the (metaproperty) option, should be alphanumeric only. Cannot be modified after the metaproperty has been created.
            + label: `Blue` (string, optional) - Human-readable label. If no label is set, the name will be used.
            + labels: `{"fr_FR": "foo","en_US": "foo"}` (string, optional) - Struct of labels for supported languages which can be retrieved using the [Retrieve account](#reference/account/account-operations/retrieve-account-information) call.
            + zindex: `4` (number, optional) - Sorting order number.
            + isSelectable: `true` (boolean, optional) - Indicating whether or not the (metaproperty) option can be selected when saving/editing assets.
            + parentId: `00000000-0000-0000-0000000000000000` (string, optional) - Id of the parent option this option should be a child of.

+ Response 201 (application/json)

    + Body

            {
                "message": "Created",
                "statuscode": 201,
                "id": "00000000-0000-0000-0000000000000000"
            }

+ Response 400 (application/json)

    + Body

            {
                "message": "Invalid metaproperty ID",
                "statuscode": "400"
            }

+ Response 400 (application/json)

    + Body

            {
                "message": "Meta property option with this name already exists",
                "existingUUID": "00000000-0000-0000-0000000000000000",
                "statuscode": "400"
            }

+ Response 400 (application/json)

    + Body

            {
                "message": "Meta property option name is required",
                "statuscode": "400"
            }

+ Response 400 (application/json)

    + Body

            {
                "message": "No data sent",
                "statuscode": "400"
            }

+ Response 400 (application/json)

    + Body

            {
                "message": "Invalid JSON",
                "statuscode": "400"
            }

+ Response 404 (application/json)

    + Body

            {
                "message": "Metaproperty not found",
                "statuscode": "404"
            }

## Specific metaproperty option operations [/api/v4/metaproperties/{id}/options/{optionId}/]
**Warning:** Specific metaproperty option operations require the **METAPROPERTYMANAGEMENT** or **METAMANAGEMENT** security role.

### Modify metaproperty option [POST]

+ Request (application/x-www-form-urlencoded)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - The id of the metaproperty the (metaproperty) option belongs to.
    + optionId: `00000000-0000-0000-0000000000000000` (string, required) - The id of the (metaproperty) option which you’d like to modify.

+ Attributes
    + data - JSON-serialised string
        + label: `Blue` (string, optional) - Human-readable label. If no label is set, the name will be used.
        + externalReference: `Reference number 1` (string, optional) - Attribute that can be used by customers to refer to options via integrations
        + labels: `{"fr_FR": "foo","en_US": "foo"}` (string, optional) - Struct of labels for supported languages which can be retrieved using the [Retrieve account](#reference/account/account-operations/retrieve-account-information) call.
        + zindex: `4` (number, optional) - Sorting order number.
        + isSelectable: `true` (boolean, optional) - Indicating whether or not the (metaproperty) option can be selected when saving/editing assets.
        + parentId: `00000000-0000-0000-0000000000000000` (string, optional) - Id of the parent option this option should be a child of.

+ Response 201 (application/json)

    + Body

            {
                "message": "Created",
                "statuscode": 201
            }

+ Response 400 (application/json)

    + Body

            {
                "message": "Editing meta property option name not allowed",
                "statuscode": "400"
            }

+ Response 404 (application/json)

    + Body

            {
                "message": "Meta property option not founded",
                "statuscode": "404"
            }

### Delete metaproperty option [DELETE]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - The id of the metaproperty the (metaproperty) option belongs to.
    + optionId: `00000000-0000-0000-0000000000000000` (string, required) - The id of the (metaproperty) option which you’d like to delete.

+ Response 204 (application/json)

+ Response 404 (application/json)

    + Body

            {
                "message": "Meta property option not found",
                "statuscode": "404"
            }


# Group Metaproperty option dependencies
Metaproperty options can have dependant options, which are options that need to be selected for the option to become available for the user to pick.
Option dependencies can be grouped, specifying that all the options in that group need to be selected for the option to become available, or ungrouped.

## Retrieve all metaproperty option dependencies globally [/api/v4/metaproperties/options/dependencies/]

### Retrieve global option dependencies [GET]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Response 200 (application/json)

    + Body

            {
                "00000000-0000-0000-0000000000000000": {
                    "00000000-0000-0000-0000000000000000": {
                        "00000000-0000-0000-0000000000000000": [
                            "00000000-0000-0000-0000000000000000",
                            "00000000-0000-0000-0000000000000001",
                            "00000000-0000-0000-0000000000000002"
                        ]
                    }
                },
                "00000000-0000-0000-0000000000000001": {
                    "00000000-0000-0000-0000000000000000": {
                        "ungrouped": [
                            "00000000-0000-0000-0000000000000000",
                            "00000000-0000-0000-0000000000000001"
                        ]
                    }
                }
            }

## Retrieve all metaproperty option dependencies for a metaproperty [/api/v4/metaproperties/{id}/options/dependencies/]

### Retrieve metaproperty option dependencies [GET]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - Metaproperty id.

+ Response 200 (application/json)

    + Body

            {
                "00000000-0000-0000-0000000000000000": {
                    "00000000-0000-0000-0000000000000000": [
                        "00000000-0000-0000-0000000000000000",
                        "00000000-0000-0000-0000000000000001",
                        "00000000-0000-0000-0000000000000002"
                    ],
                    "ungrouped": [
                        "00000000-0000-0000-0000000000000000"
                    ]
                }
            }

+ Response 404 (application/json)

    + Body

            {
                "message": "Unknown metaproperty",
                "statuscode": "404"
            }

## Retrieve options a metaproperty option depends on [/api/v4/metaproperties/{id}/options/{optionId}/dependencies/{?includeGroupedResults}]

### Retrieve specific metaproperty option dependencies [GET]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - Metaproperty id.
    + optionId: `00000000-0000-0000-0000000000000000` (string, required) - Metaproperty option id.
    + includeGroupedResults: `1` (boolean, optional) - Use grouped results like other option dependency calls.
        + Default: 0

+ Response 200 (application/json)
The following example response is for when `includeGroupedResults=0` or the includeGroupedResults parameter is missing

    + Body

            [
                "00000000-0000-0000-0000000000000000",
                "00000000-0000-0000-0000000000000001"
            ]

+ Response 200 (application/json)
The following example response is for when `includeGroupedResults=1`.

    + Body

            {
                "00000000-0000-0000-0000000000000000": [
                    "00000000-0000-0000-0000000000000000",
                    "00000000-0000-0000-0000000000000001",
                    "00000000-0000-0000-0000000000000002"
                ],
                "ungrouped": [
                    "00000000-0000-0000-0000000000000000"
                ]
            }

+ Response 404 (application/json)

    + Body

            {
                "message": "Unknown metaproperty",
                "statuscode": "404"
            }

+ Response 404 (application/json)

    + Body

            {
                "message": "Unknown metaproperty option",
                "statuscode": "404"
            }

## Manage ungrouped metaproperty option dependencies [/api/v4/metaproperties/{id}/options/{optionId}/dependencies/{dependencyId}/]

### Add a dependency [POST]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - The id of the metaproperty the option belongs to.
    + optionId: `00000000-0000-0000-0000000000000000` (string, required) - The id of the (metaproperty) option to which you’d like to add a dependency.
    + dependencyId: `00000000-0000-0000-0000000000000000` (string, required) - The id of the (metaproperty) option you’d like to become a dependency.

+ Response 201 (application/json)

    + Body

            {
                "message":"Created",
                "statuscode":201
            }

+ Response 404 (application/json)

    + Body

            {
                "message": "Unknown metaproperty",
                "statuscode": "404"
            }

+ Response 404 (application/json)

    + Body

            {
                "message": "Unknown metaproperty option",
                "statuscode": "404"
            }

+ Response 404 (application/json)

    + Body

            {
                "message": "Unknown dependency option",
                "statuscode": "404"
            }

### Delete a dependency [DELETE]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - The id of the metaproperty the option belongs to.
    + optionId: `00000000-0000-0000-0000000000000000` (string, required) - The id of the (metaproperty) option from which you’d like to delete a dependency.
    + dependencyId: `00000000-0000-0000-0000000000000000` (string, required) - The id of the (metaproperty) option you’d like to delete.

+ Response 204 (application/json)

+ Response 404 (application/json)

    + Body

            {
                "message": "Unknown metaproperty",
                "statuscode": "404"
            }

+ Response 404 (application/json)

    + Body

            {
                "message": "Unknown metaproperty option",
                "statuscode": "404"
            }

+ Response 404 (application/json)

    + Body

            {
                "message": "Unknown dependency option",
                "statuscode": "404"
            }

## Create metaproperty option dependency group [/api/v4/metaproperties/{id}/options/{optionId}/dependencies/group/]

### Create dependency group [POST]

+ Request (application/x-www-form-urlencoded)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - The id of the metaproperty the (metaproperty) option belongs to.
    + optionId: `00000000-0000-0000-0000000000000000` (string, required) - The id of the (metaproperty) option for which you’d like to create a dependency group.

+ Attributes
    + data: `["00000000-0000-0000-0000000000000000","00000000-0000-0000-0000000000000000"]` (string, required) - JSON-serialised list of dependency option ids.

+ Response 201 (application/json)

    + Body

            {
                "message": "Created",
                "statuscode": 201,
                "id": "00000000-0000-0000-0000000000000000"
            }

+ Response 400 (application/json)

    + Body

            {
                "message": "Invalid metaproperty ID",
                "statuscode": "400"
            }

+ Response 400 (application/json)

    + Body

            {
                "message": "Unknown metaproperty option id",
                "statuscode": "400"
            }

+ Response 400 (application/json)

    + Body

            {
                "message": "No data sent",
                "statuscode": "400"
            }

+ Response 400 (application/json)

    + Body

            {
                "message": "Data cannot be empty",
                "statuscode": "400"
            }

+ Response 404 (application/json)

    + Body

            {
                "message": "Unknown dependency option",
                "statuscode": "404"
            }

## Specific metaproperty option dependency group operations [/api/v4/metaproperties/{id}/options/{optionId}/dependencies/group/{groupId}/]

### Modify dependency group [POST]

+ Request (application/x-www-form-urlencoded)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - The id of the metaproperty the (metaproperty) option belongs to.
    + optionId: `00000000-0000-0000-0000000000000000` (string, required) - The id of the (metaproperty) option the dependency group belongs to.
    + groupId: `00000000-0000-0000-0000000000000000` (string, required) - The id of the dependency group you’d like to modify.
+ Attributes
    + data: `["00000000-0000-0000-0000000000000000","00000000-0000-0000-0000000000000000"]` (string, required) - JSON-serialised string of dependency (metaproperty option) ids.

+ Response 201 (application/json)

    + Body

            {
                "message": "Created",
                "statuscode": 201
            }

+ Response 404 (application/json)

    + Body

            {
                "message": "Unknown metaproperty option",
                "statuscode": "404"
            }

+ Response 404 (application/json)

    + Body

            {
                "message": "Unknown group",
                "statuscode": "404"
            }

### Delete dependency group [DELETE]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - The id of the metaproperty the (metaproperty) option belongs to.
    + optionId: `00000000-0000-0000-0000000000000000` (string, required) - The id of the (metaproperty) option the dependency group belongs to.
    + groupId: `00000000-0000-0000-0000000000000000` (string, required) - The id of the dependency group you’d like to delete.

+ Response 204 (application/json)

+ Response 404 (application/json)

    + Body

            {
                "message": "Invalid group ID",
                "statuscode": "404"
            }

## Manage option dependency in dependency group [/api/v4/metaproperties/{id}/options/{optionId}/dependencies/group/{groupId}/{dependencyId}/]

### Add a dependency option to a group [POST]

+ Request (application/x-www-form-urlencoded)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - The id of the metaproperty the (metaproperty) option belongs to.
    + optionId: `00000000-0000-0000-0000000000000000` (string, required) - The id of the (metaproperty) option the dependency group belongs to.
    + groupId: `00000000-0000-0000-0000000000000000` (string, required) - The id of the dependency group you’d like to add a dependency to.
    + dependencyId: `00000000-0000-0000-0000000000000000` (string, required) - The id of the dependency (metaproperty option) you’d like to add to the dependency group.

+ Response 201 (application/json)

    + Body

            {
                "message": "Created",
                "statuscode": 201
            }

+ Response 404 (application/json)

    + Body

            {
                "message": "Unknown metaproperty",
                "statuscode": "404"
            }

+ Response 404 (application/json)

    + Body

            {
                "message": "Unknown metaproperty option",
                "statuscode": "404"
            }

+ Response 404 (application/json)

    + Body

            {
                "message": "Unknown group",
                "statuscode": "404"
            }

+ Response 404 (application/json)

    + Body

            {
                "message": "Unknown dependency option",
                "statuscode": "404"
            }

### Remove a dependency option from a group [DELETE]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - The id of the metaproperty the (metaproperty) option belongs to.
    + optionId: `00000000-0000-0000-0000000000000000` (string, required) - The id of the (metaproperty) option the dependency group belongs to.
    + groupId: `00000000-0000-0000-0000000000000000` (string, required) - The id of the dependency group you’d like to remove a dependency from.
    + dependencyId: `00000000-0000-0000-0000000000000000` (string, required) - The id of the dependency (metaproperty option) you’d like to remove from the dependency group.

+ Response 204 (application/json)

+ Response 404 (application/json)

    + Body

            {
                "message": "Unknown metaproperty",
                "statuscode": "404"
            }

+ Response 404 (application/json)

    + Body

            {
                "message": "Unknown metaproperty option",
                "statuscode": "404"
            }

+ Response 404 (application/json)

    + Body

            {
                "message": "Unknown group",
                "statuscode": "404"
            }

+ Response 404 (application/json)

    + Body

            {
                "message": "Unknown dependency option",
                "statuscode": "404"
            }


# Group Smartfilters

## Smartfilter operations [/api/v4/smartfilters/]

### Retrieve smartfilters [GET]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Response 200 (application/json)

    + Body

            [
                {
                    "icon": "fa fa-group",
                    "labels": {
                        "nl_NL": "Destinations",
                        "en_US": "Destinations",
                        "fr_FR": "Destinations",
                        "de_DE": "Destinations"
                    },
                    "zindex": 0,
                    "id": "00000000-0000-0000-0000000000000000",
                    "metaproperties": [
                        "00000000-0000-0000-0000000000000000",
                        "00000000-0000-0000-0000000000000000"
                    ]
                },
                {
                    "icon": "fa fa-tag",
                    "labels": {
                        "nl_NL": "Holiday",
                        "en_US": "Holiday",
                        "fr_FR": "Holiday",
                        "de_DE": "Holiday"
                    },
                    "zindex": 1,
                    "id": "00000000-0000-0000-0000000000000000",
                    "metaproperties": [
                        "00000000-0000-0000-0000000000000000",
                        "00000000-0000-0000-0000000000000000",
                        "00000000-0000-0000-0000000000000000"
                    ]
                }
            ]


# Group Tags

## Tag operations [/api/v4/tags/{?limit,page,orderBy,keyword,mincount}]

### Retrieve tags [GET]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + limit: `250` (number, optional) - Maximum number of results.<br/>Maximum: 1000.
        + Default: `50`
    + page: `1` (number, optional) - Offset page for results: return the N-th set of limit-results.
    + orderBy: `tag asc` (enum[string], optional) - Order of the returned list of tags.
        + Members
            + `tag asc`
            + `tag desc`
            + `mediaCount desc`
    + keyword: `Amsterdam` (string, optional) - Search on matching names.
    + mincount: `1` (number, optional) - Minimum media count that the returned tags should have.
        + Default: `0`

+ Response 200 (application/json)

    + Body

            [
                    {
                       "id": "00000000-0000-0000-0000000000000000",
                        "tag": "Landscape",
                        "mediaCount": 12
                    },
                    {
                       "id": "00000000-0000-0000-0000000000000001",
                        "tag": "Amsterdam",
                        "mediaCount": 82
                    }
            ]

+ Response 400 (application/json)

    + Body

            [
                    {
                      "message": "`keyword` and `mincount` is not a valid combination",
                      "statuscode": 400
                    }
            ]

## Tag operations on assets [/api/v4/tags/{id}/media/{?deleteIds}]
**Warning:** Tag operations on assets require the **MEDIAEDIT** or **MEDIAAUDIT** security role.

### Add tag to assets [POST]

+ Request (application/x-www-form-urlencoded)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - Tag id.

+ Attributes
    + data: `["00000000-0000-0000-0000000000000000"]` (string, required) - JSON-serialised list of asset ids to which you'd like to add the tag.

+ Response 202 (application/json)

    + Body

            {
                "message": "Accepted",
                "statuscode": 202
            }

+ Response 404 (application/json)

    + Body

            {
                "message": "Media 00000000-0000-0000-0000000000000000 not found",
                "statuscode": "404"
            }

### Remove tag from assets [DELETE]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - Tag id.
    + deleteIds: `00000000-0000-0000-0000000000000000,00000000-0000-0000-0000000000000000` (string, required) - Comma-separated asset ids from which to remove the tag.

+ Response 204 (application/json)

+ Response 404 (application/json)

    + Body

            {
                "message": "Media 00000000-0000-0000-0000000000000000 not found",
                "statuscode": "404"
            }


# Group Collections

## Collection operations [/api/v4/collections/{?limit,page,orderBy,ids,count,keyword,isPublic,minCount}]
**Warning:** To retrieve public collections the **collection.public.view** security role is required.

**Warning:** To retrieve collections other users shared/received the **INBOXPUBLIC** or **OUTBOXPUBLIC** security role is required.

**Warning:** To retrieve collections other users created the **PUBLICCOLLECTIONS** security role is required.

### Retrieve collections [GET]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + limit: `250` (number, optional) - Maximum number of results.<br/>Maximum: 1000.
        + Default: `50`
    + page: `1` (number, optional) - Offset page for results: return the N-th set of limit-results.
    + orderBy: `dateCreated desc` (enum[string], optional) - Desired order of returned collection set.
        + Members
            + `dateCreated asc`
            + `dateCreated desc`
            + `name asc`
            + `name desc`
    + ids: `00000000-0000-0000-0000000000000000,00000000-0000-0000-0000000000000000` (string, optional) - Comma-separated list of collection ids. Will return the collection for each existing collection.
    + count: `1` (boolean, optional) - Indicates whether or not the response should include count results.
        + Default: `0`
    + keyword: `Amsterdam` (string, optional) - Search on matching names.
    + isPublic: `0` (boolean, optional) - Indicates whether or not the return should only contain collections marked as public. When left unspecified, no filtering happens.
    + minCount: `5` (number, optional) - Minimum amount of assets that the returned collections should have.
        + Default: `0`

+ Response 200 (application/json)
The following example response is for when `count=0` or the count parameter is missing.

    + Body

            [
                {
                    "userId": "48817BA7-2FC3-4A43-918761514D322C15",
                    "dateModified": "March, 08 2017 14:17:37 +0000",
                    "filename": "collection_1",
                    "dateCreated": "March, 01 2017 10:49:12 +0000",
                    "collectionCount": 2,
                    "id": "00B627BB-8054-44C0-A343FCF40BC790CD",
                    "name": "Collection 1",
                    "cover": {
                        "thumbnail": "___URL_TO_BYNDER_CDN___",
                        "thumbnails": [
                            "___URL_TO_BYNDER_CDN___",
                            "___URL_TO_BYNDER_CDN___",
                            "___URL_TO_BYNDER_CDN___"
                        ],
                        "large": "___URL_TO_BYNDER_CDN___"
                    },
                    "user": {
                        "id": "48817BA7-2FC3-4A43-918761514D322C15",
                        "name": "John Doe"
                    },
                    "description": "Collection 1 with various assets.",
                    "IsPublic": 1
                },
                {
                    "userId": "80E53210-5BB0-4BF9-907F917D457801BB",
                    "dateModified": "March, 10 2017 07:57:18 +0000",
                    "filename": "collection_2",
                    "dateCreated": "October, 30 2014 13:54:00 +0000",
                    "collectionCount": 4,
                    "id": "050960F7-98B3-461D-B967F4B84D3A3866",
                    "name": "Collection 2",
                    "cover": {
                        "thumbnail": "___URL_TO_BYNDER_CDN___",
                        "thumbnails": [
                            "___URL_TO_BYNDER_CDN___",
                            "___URL_TO_BYNDER_CDN___",
                            "___URL_TO_BYNDER_CDN___"
                        ],
                        "large": "___URL_TO_BYNDER_CDN___"
                    },
                    "user": {
                        "id": "80E53210-5BB0-4BF9-907F917D457801BB",
                        "name": "Jane Doe"
                    },
                    "description": "Collection 2 with various assets.",
                    "IsPublic": 0
                }
            ]

+ Response 200 (application/json)
The following example response is for when `count=1`.

    + Body

            {
                "collections": [
                    {
                        "userId": "48817BA7-2FC3-4A43-918761514D322C15",
                        "dateModified": "March, 08 2017 14:17:37 +0000",
                        "filename": "collection_1",
                        "dateCreated": "March, 01 2017 10:49:12 +0000",
                        "collectionCount": 2,
                        "id": "00B627BB-8054-44C0-A343FCF40BC790CD",
                        "name": "Collection 1",
                        "cover": {
                            "thumbnail": "___URL_TO_BYNDER_CDN___",
                            "thumbnails": [
                                "___URL_TO_BYNDER_CDN___",
                                "___URL_TO_BYNDER_CDN___",
                                "___URL_TO_BYNDER_CDN___"
                            ],
                            "large": "___URL_TO_BYNDER_CDN___"
                        },
                        "user": {
                            "id": "48817BA7-2FC3-4A43-918761514D322C15",
                            "name": "John Doe"
                        },
                        "description": "Collection 1 with various assets.",
                        "IsPublic": 1
                    },
                    {
                        "userId": "80E53210-5BB0-4BF9-907F917D457801BB",
                        "dateModified": "March, 10 2017 07:57:18 +0000",
                        "filename": "collection_2",
                        "dateCreated": "October, 30 2014 13:54:00 +0000",
                        "collectionCount": 4,
                        "id": "050960F7-98B3-461D-B967F4B84D3A3866",
                        "name": "Collection 2",
                        "cover": {
                            "thumbnail": "___URL_TO_BYNDER_CDN___",
                            "thumbnails": [
                                "___URL_TO_BYNDER_CDN___",
                                "___URL_TO_BYNDER_CDN___",
                                "___URL_TO_BYNDER_CDN___"
                            ],
                            "large": "___URL_TO_BYNDER_CDN___"
                        },
                        "user": {
                            "id": "80E53210-5BB0-4BF9-907F917D457801BB",
                            "name": "Jane Doe"
                        },
                        "description": "Collection 2 with various assets.",
                        "IsPublic": 0
                    }
                ],
                "count": 151
            }

### Create collection [POST]
**Warning:** Requires the **COLLECTIONS** security role.

+ Request (application/x-www-form-urlencoded)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Attributes
    + name: `Featured collection` (string, required) - Collection name.
    + description: `Collection of featured assets` (string, optional) - Collection description.

+ Response 201 (application/json)

    + Headers

            Location: __URL_TO_REST_MEDIA_LOCATION__

    + Body

            {
                "message": "Created",
                "statuscode": 201
            }

+ Response 400 (application/json)

    + Body

            {
                "message": "Collection name can't be empty",
                "statuscode": "400"
            }

+ Response 403 (application/json)

    + Body

            {
                "message": "Access denied",
                "statuscode": "403"
            }

## Specific collection operations [/api/v4/collections/{id}/]

### Retrieve specific collection [GET]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - Collection id.

+ Response 200 (application/json)

    + Body

            {
                "datecreated": "March, 01 2017 10:49:12 +0000",
                "thumbnail": "___URL_TO_BYNDER_CDN___",
                "name": "Collection 1",
                "link": "___URL_TO_BYNDER_CDN___",
                "views": 2,
                "description": "Collection 1 with various assets.",
                "user": {
                    "id": "80E53210-5BB0-4BF9-907F917D457801BB",
                    "name": "Jane Doe"
                }
            }

+ Response 404 (application/json)

    + Body

            {
                "message": "Collection not found",
                "statuscode": "404"
            }

### Modify collection [POST]
**Warning:** Requires the **COLLECTIONS** security role. Requires the **PUBLISHCOLLECTIONS** security role in order to change a collection's isPublic state.

+ Request (application/x-www-form-urlencoded)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - Collection id.

+ Attributes
    + name: Featured collection (string, optional) - Collection name.
    + description: Collection of featured assets (string, optional) - Collection description.
    + isPublic: true (boolean, optional) - Public state of the collection.
    + thumbnailAssetId: `00000000-0000-0000-0000000000000000` (string, optional) - ID of the asset that will be used as thumbnail. Use an empty string to remove the thumbnail.

+ Response 201 (application/json)

    + Body

            {
                "message": "Created",
                "statuscode": 201
            }

+ Response 400 (application/json)

    + Body

            {
                "message": "Collection name can't be empty",
                "statuscode": "400"
            }

+ Response 403 (application/json)

    + Body

            {
                "message": "Access denied",
                "statuscode": "403"
            }

### Delete collection [DELETE]

+ Request (application/x-www-form-urlencoded)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - Collection id to be deleted.

+ Response 204 (application/json)

+ Response 404 (application/json)

    + Body

            {
                "message": "Collection not found",
                "statuscode": "404"
            }

## Share collection operations [/api/v4/collections/{id}/share/]

### Share collection [POST]
**Warning:** Requires the **SHARECOLLECTION** or **SHARING** security role.

+ Request (application/x-www-form-urlencoded)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - Collection id.

+ Attributes
    + recipients: `user1@bynder.com,user2@bynder.com` (string, optional) - Comma-separated email addresses of recipients. Mandatory if groups or profiles are empty.
    + groups: `00000000-0000-0000-0000000000000000,00000000-0000-0000-0000000000000000` (string, optional) - Comma-separated list of group ids. Mandatory if recipients or profiles are empty.
    + profiles: `00000000-0000-0000-0000000000000000,00000000-0000-0000-0000000000000000` (string, optional) - Comma-separated list of profile ids. Mandatory if recipients or groups are empty.
    + collectionOptions (enum, required) - Recipient rights.
        + Members
            + `readOnly` - View collection
            + `view` - Download assets
            + `readAccess` - Download all assets (including watermarked)
            + `edit` - Manage collection
    + loginRequired: `true` (boolean, optional) - Should recipients login to view the collection. Mandatory if collectionOptions is edit.
    + dateStart: `2014-08-12T08:07:24Z` (string, optional) - Start date of the share.
    + dateEnd: `2015-08-12T08:07:24Z` (string, optional) - End date of the share.
    + sendMail: `true` (boolean, optional) - Wether the recipients should be notified using an e-mail.
    + message: `Your message goes here` (string, optional) - If sendMail is set to true, this is an optional message to be added for the recipient(s).

+ Response 202 (application/json)

    + Body

            {
                "message": "accepted",
                "statuscode": 202
            }

+ Response 400 (application/json)

    + Body

            {
                "message": "Recipients, groups or profiles must contain at least one entry",
                "statuscode": "400"
            }

+ Response 400 (application/json)

    + Body

            {
                "message": "No valid collectionId provided",
                "statuscode": "400"
            }

## Asset operations on a collection [/api/v4/collections/{id}/media/{?deleteIds}]

### Retrieve the assets of a specific collection [GET]

+ Request
    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - Collection id.

+ Response 200 (application/json)

    + Body

            [
                "00000000-0000-0000-0000000000000000",
                "00000000-0000-0000-0000000000000001",
                "00000000-0000-0000-0000000000000002"
            ]

+ Response 404 (application/json)

    + Body

            {
                "message": "Collection not found",
                "statuscode": "404"
            }

### Add assets to a collection [POST]
**Warning:** Requires the **COLLECTIONS** security role.

+ Request (application/x-www-form-urlencoded)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - Collection id.

+ Attributes
    + data: `["00000000-0000-0000-0000000000000000"]` (string, required) - JSON-serialised list of asset ids to add.

+ Response 202 (application/json)

    + Body

            {
                "message": "Accepted",
                "statuscode": 202
            }

+ Response 403 (application/json)

    + Body

            {
                "message": "Access denied",
                "statuscode": "403"
            }

### Remove assets from a collection [DELETE]
**Warning:** Requires the **COLLECTIONS** security role.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - Collection id.
    + deleteIds: `00000000-0000-0000-0000000000000000,00000000-0000-0000-0000000000000000` (string, required) - Comma-separated asset ids to remove from the collection.

+ Response 204 (application/json)

+ Response 403 (application/json)

    + Body

            {
                "message": "Access denied",
                "statuscode": "403"
            }


# Group Account

## Account operations [/api/v4/account/]

### Retrieve account information [GET]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Response 200 (application/json)

    + Body

            {
                "availableLanguages": ["nl_NL", "en_GB", "en_US", "fr_FR", "de_DE", "it_IT", "es_ES", "pl_PL"],
                "defaultLanguage": "en_US",
                "name": "Bynder",
                "timeZone": "Europe/Amsterdam",
                "isOpenImageBank": false
            }

## Derivative operations [/api/v4/account/derivatives/]
A derivative is a file that is based on another source, for example, a low-resolution representation of a print-quality photo.
During the upload process, Bynder can automatically create pre-defined image derivatives with different dimensions, quality, and format.
Bynder can either maintain the original aspect ratio of an image, or crop or pad an image to fit the specified dimensions. We can create smaller versions of your original image asset in both a JPG and PNG file extension.
However, the resolution of derivatives can't be larger than the original file.
The derivative presets allow configuration of which derivatives will be created upon uploading new files.

### Retrieve derivatives [GET]

**Deprecated:** Please use the **Derivative preset operations** endpoint.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Response 200 (application/json)

    + Body

            [
                {
                    "prefix": "500x500",
                    "height": 500,
                    "isCrop": 1,
                    "dpi": -1,
                    "width": 500,
                    "allowedTypes": "",
                    "isOnTheFly": 1,
                    "isExtent": 0,
                    "isPublic": 1
                },
                {
                    "prefix": "New",
                    "height": 1000,
                    "isCrop": 0,
                    "dpi": -1,
                    "width": 1000,
                    "allowedTypes": "png",
                    "isOnTheFly": 0,
                    "isExtent": 0,
                    "isPublic": 1
                }
            ]

## Derivative preset operations [/api/1/derivative-presets/]
Retrieve all configured derivative presets.

### Retrieve derivative presets [GET]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Response 200 (application/json)

    + Body

            [
                {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "prefix": "500x500",
                    "height": 500,
                    "isCrop": 1,
                    "dpi": -1,
                    "width": 500,
                    "allowedTypes": "",
                    "isOnTheFly": 1,
                    "isExtent": 0,
                    "isPublic": 1
                },
                {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "prefix": "New",
                    "height": 1000,
                    "isCrop": 0,
                    "dpi": -1,
                    "width": 1000,
                    "allowedTypes": "png",
                    "isOnTheFly": 0,
                    "isExtent": 0,
                    "isPublic": 1
                }
            ]

## Specific derivative preset operations [/api/1/derivative-presets/{preset_id}]
Retrieve a specific configured derivative preset.

### Retrieve derivative preset [GET]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Response 200 (application/json)

    + Body

            {
                "id": "00000000-0000-0000-0000-000000000000",
                "prefix": "500x500",
                "height": 500,
                "isCrop": 1,
                "dpi": -1,
                "width": 500,
                "allowedTypes": "",
                "isOnTheFly": 1,
                "isExtent": 0,
                "isPublic": 1
            }

# Group Access rights

## Metaproperties [/api/content_access/metaproperties/{metaproperty_id}/]
These API calls allow you to set up visibility restrictions on metaproperties

### Retrieve metaproperty access [GET]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Response 200 (application/json)

    + Body

        [
            {
                "id": "00000000-0000-0000-0000-000000000000",
                "contentId": "00000000-0000-0000-0000-000000000000",
                "contentType": "metaproperty",
                "level": "metaproperty.hide",
                "ruleType": "allow",
                "principalId": "00000000-0000-0000-0000-000000000000",
                "principalType": "user",
                "principalName": "User full name",
                "principalExtraInformation": {
                    email: "user_email@bynder.com"
                }
            },
            {
                "id": "00000000-0000-0000-0000-000000000000",
                "contentId": "00000000-0000-0000-0000-000000000000",
                "contentType": "metaproperty",
                "level": "metaproperty.hide",
                "ruleType": "allow",
                "principalId": "00000000-0000-0000-0000-000000000000",
                "principalType": "profile",
                "principalName": "Profile name",
                "principalExtraInformation": null
            },
            {
                "id": "00000000-0000-0000-0000-000000000000",
                "contentId": "00000000-0000-0000-0000-000000000000",
                "contentType": "metaproperty",
                "level": "metaproperty.hide",
                "ruleType": "allow",
                "principalId": "00000000-0000-0000-0000-000000000000",
                "principalType": "group",
                "principalName": "Group name",
                "principalExtraInformation": null
            }
        ]

### Create metaproperty access [POST]

+ Request (application/json)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

    + Attributes
        + principals: (required, array)
            + (required, object)
                + principalId:  `00000000-0000-0000-0000000000000000` (required, string) - Id of principal which will get this access
                + principalType:  `(user, group, profile)` (required, string) - The type of principal who will get this access
        + level: (enum, required) - Field to fetch specific permissions
            + Members
                + `metaproperty.hide`

+ Response 201 (application/json)

    + Body
        [
            {
                'principalId': `00000000-0000-0000-0000-000000000000`,
                'principalType': "user"
            }
            {
                'principalId': `00000000-0000-0000-0000-000000000000`,
                'principalType': "group"
            },
            {
                'principalId': `00000000-0000-0000-0000-000000000000`,
                'principalType': "profile"
            }
        ]


### Delete metaproperty access [DELETE]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

    + Attributes
        + contentAccessIds: `[00000000-0000-0000-0000-000000000000, ...]` (required, array) - The id field of the access rule to remove, this value is returned by the GET request

+ Response 204 (application/json)

## Options [/api/1/content-access/options/{optionId}]
These API calls allow you to set up access rights and restrictions on metaproperty options.

To find out more about the levels of access rights that can be set up on options,
please refer to the [Knowledge Base article](https://support.bynder.com/hc/en-us/articles/360013872840-Set-Permissions-on-a-Metaproperty-Options-Level).


### Retrieve options access rights [GET]

+ Parameters
    + optionId: `00000000-0000-0000-0000-000000000000` (string, required) - Option ID
    + principalId: `00000000-0000-0000-0000-000000000000` (string, optional) - Principal ID to filter by
    + limit: `20` (number, optional) - Maximum number of results per page (1-1000)
        + Default: 20
    + start (string, optional) - Cursor for next page
    + before (string, optional) - Cursor for previous page

+ Request
    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Response 200 (application/json)
    + Body

            {
                "contentAccessRules": [
                    {
                        "id": "00000000-0000-0000-0000-000000000000",
                        "level": "media.show",
                        "principalId": "00000000-0000-0000-0000-000000000000",
                        "principalType": "user",
                        "principalName": "User Name",
                        "principalExtraInformation": {}
                    }
                ],
                "metadata": {
                    "prevPage": null,
                    "nextPage": "/api/1/content-access/options/{optionId}?start={cursor}"
                }
            }

+ Response 404 (application/json)
+ Response 403 (application/json)

### Modify option access rights [POST]
**Note:** The list of levels will overwrite all access rights on that option for that user, profile or group. Sending an empty list of levels will delete all existing access rights.  

+ Parameters
    + optionId: `00000000-0000-0000-0000-000000000000` (string, required) - Option ID

+ Request (application/json)
    + Headers

            Authorization: OAuth 2.0 Bearer access token.

    + Attributes
        + principalId: `00000000-0000-0000-0000-000000000000` (string, required) - Principal ID
        + principalType: `user` (enum, required) - Type of principal
            + Members
                + `user`
                + `group`
                + `profile`
        + levels: (array, required) - Levels of access rights to set on the option.
        **Warning:** The list of levels will overwrite all access rights on that option for that user, profile or group. Sending an empty list of levels will delete all existing access rights. 
            + Members
                + `media.show` - Show media
                + `media.hide` - Hide media
                + `media.add` - Add & publish media
                + `media.edit` - Edit media
                + `media.approve` - Audit uploaded media
                + `media.delete` - Remove media
                + `media.disable` - Disable option in upload & edit
                + `media.audit.download` - Audit download requests
                + `media.create.restrict` - Force upload approval - **Only supported if the feature is enabled**
                + `product.show` - Product access - **Only supported if Brandstore is enabled**
                + `product.hide` - Hide brandstore filter - **Only supported if Brandstore is enabled**

+ Response 200 (application/json)
    + Body

            {
                "message": "updated"
            }

+ Response 400 (application/json)
    + Body

    {
        "principalId": "Required",
        "principalType": "is not one of user, profile, group"
    }

+ Response 404 (application/json)
+ Response 403 (application/json)

### Retrieve option default visibility [GET /api/1/content-access/options/{optionId}/visibility]

+ Parameters
    + optionId: `00000000-0000-0000-0000-000000000000` (string, required) - Option ID

+ Request
    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Response 200 (application/json)
    + Body

            {
                "hideByDefault": true
            }

+ Response 404 (application/json)
+ Response 403 (application/json)

### Modify option default visibility [PUT /api/1/content-access/options/{optionId}/visibility]

+ Parameters
    + optionId: `00000000-0000-0000-0000-000000000000` (string, required) - Option ID

+ Request (application/json)
    + Headers

            Authorization: OAuth 2.0 Bearer access token.

    + Attributes
        + hideByDefault: true (boolean, required) - Whether to hide by default

+ Response 200 (application/json)
    + Body

            {
                "message": "updated"
            }


+ Response 400 (application/json)
+ Response 404 (application/json)
+ Response 403 (application/json)

# Group Trash

## Trash operations [/api/trash/media/{?limit,page,dateRemoved,field,order}]

### Retrieve recently removed assets [GET]
**Warning:** You can only retrieve the removed assets from the last 30 days.

**Warning:** Requires the **trash.assets** security role.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + limit: `20` (number, optional) - Maximum number of results.
        + Default: `10`
    + page: `1` (number, optional) - Offset page for results: return the N-th set of limit-results.
        + Default: `1`
    + dateRemoved: `2017-04-01 00:00:00` (string, optional) - Retrieve assets removed after this date.<br/>Format: yyyy-mm-dd hh:mm:ss
    + field: `media.dateCreated` (enum[string], optional) - Field to sort on the returned list of assets.
        + Members
            + `media.dateCreated`
            + `media.dateRemoved`
            + `media.name`
            + `media.username`
    + order: `asc` (enum[string], optional) - Sort order of returned list of assets. Sorts the list of assets by the field parameter defined, if the field parameter was not defined the results will be sorted by media.name.
        + Members
            + `asc`
            + `desc`

+ Response 200 (application/json)

    + Body

            [
                {
                    "id": "00000000-0000-0000-0000000000000000",
                    "name": "Beach",
                    "dateRemoved": "2017-09-05T13:11:49+00:00",
                    "dateCreated": "2017-02-12T10:12:19+00:00",
                    "username": "johndoe@bynder.com",
                    "userId": "00000000-0000-0000-0000000000000000",
                    "S3_filepointer": "___URL_TO_BYNDER_CDN___"
                },
                {
                    "id": "00000000-0000-0000-0000000000000000",
                    "name": "Mountain",
                    "dateRemoved": "2017-09-01T10:41:19+00:00",
                    "dateCreated": "2017-05-23T15:12:14+00:00",
                    "username": "johndoe@bynder.com",
                    "userId": "00000000-0000-0000-0000000000000000",
                    "S3_filepointer": "___URL_TO_BYNDER_CDN___"
                },
                {
                    "id": "00000000-0000-0000-0000000000000000",
                    "name": "Summer",
                    "dateRemoved": "2017-09-08T18:11:32+00:00",
                    "dateCreated": "2017-08-01T09:52:45+00:00",
                    "username": "johndoe@bynder.com",
                    "userId": "00000000-0000-0000-0000000000000000",
                    "S3_filepointer": "___URL_TO_BYNDER_CDN___"
                }
            ]


# Group Product layer metaproperties
These documented API calls describe the Product Layer Metaproperty calls that are currently implemented in the API. The following product layer metaproperties are available: select, select2 and autocomplete.

## Metaproperty operations [/api/pim/metaproperties]

### Retrieve metaproperties [GET]
**Warning:** Requires the **metaproperty.view** security role.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Response 200 (application/json)

    + Body

            [
                "00000000-0000-0000-0000-000000000000",
                "00000000-0000-0000-0000-000000000000",
                "00000000-0000-0000-0000-000000000000",
                "00000000-0000-0000-0000-000000000000"
            ]

## Specific metaproperty operations [/api/pim/metaproperties/{id}/]
Retrieve the metaproperty details and it's metaproperty options.

### Retrieve specific metaproperty [GET]
**Warning:** Requires the **METAPROPERTYMANAGEMENT** security role.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - Metaproperty id.

+ Response 200 (application/json)

    + Body

            {
                "id": "00000000-0000-0000-0000-000000000000",
                "name": "Product A",
                "label": "Product A"
                "description": "Metaproperty for Product A",
                "mp_options": [
                    {
                        "id": "00000000-0000-0000-0000-000000000000",
                        "name": "Product A option 1"
                        "label": "Product A option 1",
                        "description": "Metaproperty option 1 for Product A",
                        "metapropertyid": "00000000-0000-0000-0000-000000000000",
                        "relations": [
                            {
                                "id": "00000000-0000-0000-0000-000000000000",
                                "name": "Product B option 1"
                                "label": "Product B option 1",
                                "description": "Metaproperty option 1 for Product B",
                                "metapropertyid": "00000000-0000-0000-0000-000000000000",
                                "relations": []
                            }
                        ]
                    },
                    {
                        "id": "00000000-0000-0000-0000-000000000000",
                        "name": "Product A option 2"
                        "label": "Product A option 2",
                        "description": "Metaproperty option 2 for Product A",
                        "metapropertyid": "00000000-0000-0000-0000-000000000000",
                        "relations": []
                    }
                ]
            }

## Metaproperty option retrieve operations [/api/pim/metaproperties/{id}/options/{?order,page,limit}]
Retrieves a paginated list of options for the given metaproperty id and these options' sub options.

### Retrieve metaproperty options [GET]
**Warning:** Requires the **METAPROPERTYMANAGEMENT** security role.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - Metaproperty id.
    + order: `asc` (enum[string], optional) - Order of the options, based on the option z-index and option name.
        + Default: `asc`
        + Members
            + `asc`
            + `desc`
    + page: `1` (number, optional) - Index to load a specific set of metaproperty options.
        + Default: `1`
    + limit: `20`  (number, optional) - Amount of options that are retrieved per page.
        + Default: `20`

+ Response 200 (application/json)

    + Body

            [
                {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "Product A option 1"
                    "label": "Product A option 1",
                    "description": "Metaproperty option 1 for Product A",
                    "metapropertyid": "00000000-0000-0000-0000-000000000000",
                    "product_options": [
                        {
                            "id": "00000000-0000-0000-0000-000000000000",
                            "name": "Product A option 1 child"
                            "label": "Product A option 1 child",
                            "description": "Metaproperty option 1 child",
                            "metapropertyid": "00000000-0000-0000-0000-000000000000"
                        }
                    ]
                }
            ]

## Metaproperty option modify operations [/api/pim/metapropertyoptions/{id}/]

### Modify metaproperty option [PUT]
**Warning:**  Currently you can only edit the children of a metaproperty option.

+ Request (application/json)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

    + Attributes
        + children (array, required) - A list of id's of the metaproperty options to be related as the metaproperty option's children. All current children will be overwritten.

    + Body

            {
                "children":
                    [
                        "00000000-0000-0000-0000-000000000000",
                        "00000000-0000-0000-0000-000000000000"
                    ]
            }

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - Metaproperty option id.

+ Response 204 (application/json)


# Group Upload assets modern stack
**Warning:** Currently for Workflow job upload only when portal is configured for modern stack.

Follow these steps in order to upload a asset to Bynder:

## Step 1. Prepare the upload [/v7/file_cmds/upload/prepare]

### Prepare the upload [POST]


+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Response 200 (application/json)

    + Body

            {
                "file_id": "00000000-0000-0000-0000-000000000000",
            }



## Step 2. Upload the file in chunks [/v7/file_cmds/upload/{file_id}/chunk/{chunk_number}]

### Upload the file in chunks [POST]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.
            Content-Type: application/octet-stream
            Content-SHA256: (calculated checksum of the file/ chunk)

+ Parameters
    + file_id: `00000000-0000-0000-0000-000000000000` (string, required) - File id retrieved from the response of Step 1.
    + chunk_number: Number of the chunk you are uploading. The first chunk is 0.

+ Attributes
    + file: The file chunk.

+ Response 201 (application/json)


## Step 3. Finalize the upload [/v7/file_cmds/upload/{file_id}/finalise_api]

### Finalize the upload [POST]

After this step the `file_id` can be used for example to [save the asset to a Workflow Job](#reference/workflow-jobs/specific-job-operations/save-uploaded-file-to-a-specific-job).

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.
            Content-Type: x-www-form-urlencoded

+ Parameters
    + file_id: `00000000-0000-0000-0000-000000000000` (string, required) - File id retrieved from the response of Step 1.

+ Attributes
    + fileName: `image.jpeg` (string, required) - Filename of the file.
    + fileSize: `63973541` (number, required) - Size of the file in bytes.
    + chunksCount: `1` (number, required) - Number of chunks the file was split into.

+ Response 201 (application/json)


# Group Workflow campaigns

## Campaign operations [/api/workflow/campaigns/]

### Retrieve campaigns [GET]
**Warning:** Requires the **CAMPAIGNOVERVIEW** security role.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Response 200 (application/json)

    + Body

            [
                {
                    "dateStart": "2017-02-01T00:00:00+00:00",
                    "description": "Campaign example",
                    "responsibleID": "00000000-0000-0000-0000-000000000000",
                    "dateModified": "2017-01-10T07:43:12+00:00",
                    "dateCreated": "2017-01-10T07:43:12+00:00",
                    "ID": "00000000-0000-0000-0000-000000000000",
                    "deadline": "2017-03-03T00:00:00",
                    "createdByID": "00000000-0000-0000-0000-000000000000",
                    "accountID": "00000000-0000-0000-0000-000000000000",
                    "presetID": "00000000-0000-0000-0000-000000000000",
                    "closed": false,
                    "key": "excp",
                    "name": "Example campaign",
                    "thumbnailURL": "https://bynder-public-eu-central-1.s3.eu-central-1.amazonaws.com:443/workflow/campaign/988BBB04-F0E2-4A28-B5F892890849BAFE/FEE78434-649A-449B-A62A1C6C6D59CAC3/500x500.jpg",
                    "campaignMetaproperties": "00000000-0000-0000-0000-000000000000": "00000000-0000-0000-0000-000000000000"
                },
                {
                    "dateStart": "2017-02-01T00:00:00+00:00",
                    "description": "Campaign example",
                    "responsibleID": "00000000-0000-0000-0000-000000000000",
                    "dateModified": "2017-01-10T07:43:12+00:00",
                    "dateCreated": "2017-01-10T07:43:12+00:00",
                    "ID": "00000000-0000-0000-0000-000000000000",
                    "deadline": "2017-03-03T00:00:00",
                    "createdByID": "00000000-0000-0000-0000-000000000000",
                    "accountID": "00000000-0000-0000-0000-000000000000",
                    "presetID": "00000000-0000-0000-0000-000000000000",
                    "closed": false,
                    "key": "excp",
                    "name": "Example campaign",
                    "thumbnailURL": "https://bynder-public-eu-central-1.s3.eu-central-1.amazonaws.com:443/workflow/campaign/988BBB04-F0E2-4A28-B5F892890849BAFE/FEE78434-649A-449B-A62A1C6C6D59CAC3/500x500.jpg",
                    "campaignMetaproperties": "00000000-0000-0000-0000-000000000000": "00000000-0000-0000-0000-000000000000"
                }
            ]

### Create campaign [POST]
**Warning:** Requires the **CAMPAIGNADD** security role.

+ Request (application/json)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

    + Attributes
        + name (string, required) - Name of the campaign
        + key (string, required) - 4 character key representing the campaign
        + description (string, required) - Description of the campaign
        + dateStart (string, optional) - Date of when the campaign starts
        + deadline (string, optional) - Date of when the campaign ends
        + closed (string, optional) - Status of Campaign open active/closed
        + responsibleID (string, required) - Id of the user responsible for the campaign
        + campaignMetaproperties (string, optional) - Campaign Metaproperties

    + Body

            {
                "name": "Example campaign",
                "key": "excp",
                "description": "Campaign example",
                "dateStart": "2015-01-01T00:00:00",
                "deadline": "2015-09-04T00:00:00",
                "responsibleID": "00000000-0000-0000-0000-000000000000",
                "campaignMetaproperties": "00000000-0000-0000-0000-000000000000": "00000000-0000-0000-0000-000000000000"
            }

+ Response 201 (application/json)
    + Headers

            Location: https://your-bynder-domain/api/workflow/campaigns/00000000-0000-0000-0000-000000000000/

    + Body

            {
              "id": "00000000000000000000000000000000"
            }

## Specific campaign operations [/api/workflow/campaigns/{id}/]

### Retrieve specific campaign [GET]
**Warning:** Requires the **CAMPAIGNOVERVIEW** security role.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000-000000000000` (string, required) - The id of a Campaign.

+ Response 200 (application/json)

    + Attributes
        + body (object)
            + ID (string) - Id of the campaign
            + name (string) - Name of the campaign
            + key (string) - 4 character key representing the campaign
            + closed (boolean) - is the campaign closed
            + description (string) - Description of the campaign
            + dateStart (string) - Date when the campaign is started
            + deadline (string) - Deadline date of the campaign
            + accountID (string) - Id of the account owning the campaign
            + presetID (string) - Id of the campaign preset
            + createdByID (string) - Id of the user who created the campaign
            + responsibleID (string) - Id of the user responsible for the campaign
            + dateCreated (string) - Date and time of when the campaign was created
            + dateModified (string) - Last date and time of when the campaign was changed
            + thumbnailURL (string) - URL for campaign thumbnail
            + campaignMetaproperties (string) - Campaign Metaproperties

    + Body

            {
                "dateStart": "2017-02-01T00:00:00+00:00",
                "description": "Campaign example",
                "responsibleID": "00000000-0000-0000-0000-000000000000",
                "dateModified": "2017-01-10T07:43:12+00:00",
                "dateCreated": "2017-01-10T07:43:12+00:00",
                "ID": "00000000-0000-0000-0000-000000000000",
                "presetID": "00000000-0000-0000-0000-000000000000",
                "deadline": "2017-03-03T00:00:00",
                "createdByID": "00000000-0000-0000-0000-000000000000",
                "accountID": "00000000-0000-0000-0000-000000000000",
                "closed": false,
                "key": "excp",
                "name": "Example campaign",
                "thumbnailURL": "https://bynder-public-eu-central-1.s3.eu-central-1.amazonaws.com:443/workflow/campaign/988BBB04-F0E2-4A28-B5F892890849BAFE/FEE78434-649A-449B-A62A1C6C6D59CAC3/500x500.jpg",
                "campaignMetaproperties": "00000000-0000-0000-0000-000000000000": "00000000-0000-0000-0000-000000000000"
            }

### Modify campaign [PUT]
**Warning:** Requires the **CAMPAIGNEDIT** security role.

+ Request (application/json)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

    + Attributes
        + name (string, required) - Name of the campaign
        + key (string, required) - 4 character key representing the campaign
        + description (string, optional) - Description of the campaign
        + dateStart (string, optional) - Date of when the campaign starts
        + deadline (string, optional) - Date of when the campaign ends
        + closed (string, optional) - Status of Campaign open active/closed
        + responsibleID (string, required) - Id of the user responsible for the campaign
        + campaignMetaproperties (string, optional) - Campaign Metaproperties

    + Body

            {
                "name": "Example campaign",
                "key": "excp",
                "description": "Campaign for managing examples",
                "dateStart": "2015-01-01T00:00:00",
                "deadline": "2015-09-04T00:00:00",
                "responsibleID": "00000000-0000-0000-0000-000000000000",
                "closed": false,
                "campaignMetaproperties": "00000000-0000-0000-0000-000000000000": "00000000-0000-0000-0000-000000000000"
            }

+ Parameters
    + id: `00000000-0000-0000-0000-000000000000` (string, required) - The id of a Campaign.

+ Response 201 (application/json)

    + Body

            {
                "id": "00000000000000000000000000000000"
            }

### Delete campaign [DELETE]
**Warning:** Requires the **CAMPAIGNREMOVE** security role.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000-000000000000` (string, required) - The id of a Campaign.

+ Response 204 (application/json)

### Close campaign [POST /api/workflow/campaigns/{id}/close]
**Warning:** Requires the **CAMPAIGNWRITE** security role.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000-000000000000` (string, required) - The id of a Campaign. (Works without dashes as well)

+ Response 204 (No Content)

+ Response 404 (Not Found)


# Group Workflow jobs

## Job preset operations [/api/workflow/presets/job/{id}/]

### Retrieve specific job preset [GET]
**Warning:** Requires the **PRESETOVERVIEW** security role.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000-000000000000` (string, required) - The id of a Job Preset.

+ Response 200 (application/json)

    + Attributes
        + ID (string) -  Id of the job preset
        + name (string) - Name of the job preset
        + ftp_settings (string) - Refers to sever settings in domain.bynder.com/pysettings#servers
        + wf_uuid (string) - workflow representation of the ID
        + presetstages (object) - The preset stages of the preset
            + ID (string) - Id of the preset stage
            + name (string) - Name of the preset stage
            + description (string) - Description of the stage
            + position (string) - Posiiton of the stage in the job
            + edtitableBy (string) - Stage is editable by All, Stage responsible, Stage Responsible & Job accountable
            + restrictToGroupID (string) - Restrict choice of responsible to selected group
            + type (string) - Type of stage: Templates, Approval, Form, Download
            + responsibleID (string) - Id of responsible
            + responsibleGroupID (string) - Id of responsible group

    + Body

            {
                "preset": {
                    "ID": "00000000-0000-0000-0000-000000000000",
                    "name": "API name",
                    "wf_uuid": "00000000-0000-0000-0000-000000000000",
                    "ftp_settings": {},
                    "presetstages": [
                    {
                        "description": "",
                        "ID": "00000000-0000-0000-0000-000000000000",
                        "name": "Revision Stage ",
                        "position": 1.0,
                        "editableBy": "all",
                        "restrictToGroupID": null,
                        "type": "download",
                        "responsibleID": null,
                        "responsibleGroupID": null
                     }
                ]
              }
            }

## Job operations [/api/workflow/jobs/{?dateCreatedFrom,dateCreatedTo,dateModifiedFrom,dateModifiedTo,deadlineFrom,deadlineTo,orderBy,limit,page}]

### Retrieve jobs [GET]
**Warning:** Requires the **JOBOVERVIEW** security role.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + dateCreatedFrom: `2020-01-01T12:00:00Z` (datetime, optional) - Only return jobs which have a dateCreated on or after this datetime.
    + dateCreatedTo: `2020-01-01T12:00:00Z` (datetime, optional) - Only return jobs which have a dateCreated before or on this datetime.
    + dateModifiedFrom: `2020-01-01T12:00:00Z` (datetime, optional) - Only return jobs which have a dateModified on or after this datetime.
    + dateModifiedTo: `2020-01-01T12:00:00Z` (datetime, optional) - Only return jobs which have a dateModified before or on this datetime.
    + deadlineFrom: `2020-01-01T12:00:00Z` (datetime, optional) - Only return jobs which have a deadline on or after this datetime.
    + deadlineTo: `2020-01-01T12:00:00Z` (datetime, optional) - Only return jobs which have a deadline before or on this datetime.
    + resonsibleIDs: `00000000000000000000000000000000,00000000000000000000000000000000` (string, optional) - Comma-separated list of workflow user IDs or workflow user group IDs.
    + accountableIDs: `00000000000000000000000000000000,00000000000000000000000000000000` (string, optional) - Comma-separated list of workflow user IDs.
    + status: `Approved,NeedsChanges` (string, optional) - Comma-separated list of job status.
        + Members
            + Approved
            + NeedsChanges
            + Active
            + Cancelled
    + orderBy: `deadline asc` (enum, optional) - Field to order results by
        + Default
            dateCreated asc
        + Members
            + dateCreated asc
            + dateCreated desc
            + dateModified asc
            + dateModified desc
            + deadline asc
            + deadline desc
    + limit: `100` (integer, optional) - Maximum results to return, maximum: 1000. If limit is not provided, all results are returned. **Note:** When using pagination, pagination information is returned as response headers.
    + page: `1` (integer, optional) - What page of results to return.

+ Response 200 (application/json)

    + Headers

            X-Pagination-TotalRecords: 10000 (only returned when using pagination)
            X-Pagination-TotalPages: 100 (only returned when using pagination)
            X-Pagination-Page: 2 (only returned when using pagination)
            X-Pagination-Limit: 100 (only returned when using pagination)

    + Attributes
        + id (string) - Id of the job
        + name (string) - Name of the job
        + description (string) - Description of the job
        + deadline (string) - Deadline date of the job
        + createdByID (string) - Id of the user who created the job
        + accountableID (string) - Id of the user accoutable for the job
        + dateCreated (string) - Date and time of when the job was created
        + dateModified (string) - Last date and time of when the job was changed
        + basedOnPreset (string) - If the job was created from a preset
        + presetID (string) - Id of the preset the job was created from
        + campaignID (string) - Id of the campaign, the job is part of
        + bookedMinutes (number) - Total booked time for this job and its stages. Only included when data is available
        + jobKey (string) - Id containing the campaign key and the job numeric ID
        + dateFinished (string) - Last date and time of when the job was closed, null if never closed. If it is not null and the active stage's status is Active or NeedsChanges then the job was reopened.
        + jobFinishedHistory (array) - List of users that finished the job.
            + (object)
                + userId (string) - Id of the user who finished the job
                + date (string) - Date and time of when the job was finished
        + job_stages (array) - All stages of this job
            + (object)
                + position (string) - Position of the stage within the job
                + status (string) - Status of the job stage
                + id (string) - id of the job stage
        + job_previous_stage (object) - Id, position and status of the previous stage
            + position (string) - Position of the stage within the job
            + status (string) - Status of the job stage
            + id (string) - id of the job stage
        + job_active_stage (object) - Id, position and status of the active stage
            + position (string) - Position of the stage within the job
            + status (string) - Status of the job stage
            + id (string) - id of the job stage
        + job_next_stage (object) - Id, position and status of the next stage
            + position (string) - Position of the stage within the job
            + status (string) - Status of the job stage
            + id (string) - id of the job stage

    + Body

            [
                {
                    "job_stages": [
                        {
                            "position": 1.0,
                            "status": "Approved",
                            "id": "00000000-0000-0000-0000-000000000000"
                        },
                        {
                            "position": 2.0,
                            "status": "Active",
                            "id": "00000000-0000-0000-0000-000000000000"
                        },
                        {
                            "position": 3.0,
                            "status": "Idle",
                            "id": "00000000-0000-0000-0000-000000000000"
                        }
                    ],
                    "dateModified": "2017-03-30T11:43:19+00:00",
                    "presetID": null,
                    "jobKey": "0000-0",
                    "dateFinished": null,
                    "jobFinishedHistory": null,
                    "jobMetaproperties": {
                        "00000000-0000-0000-0000-000000000000": "00000000-0000-0000-0000-000000000000,00000000-0000-0000-0000-000000000000",
                        "00000000-0000-0000-0000-000000000000": "Country",
                        "00000000-0000-0000-0000-000000000000": "City"
                    },
                    "createdByID": "00000000-0000-0000-0000-000000000000",
                    "job_next_stage": {
                        "position": 3.0,
                        "status": "Idle",
                        "id": "00000000-0000-0000-0000-000000000000"
                    },
                    "id": "00000000-0000-0000-0000-000000000000",
                    "description": "",
                    "accountableID": "00000000-0000-0000-0000-000000000000",
                    "basedOnPreset": false,
                    "dateCreated": "2017-03-30T11:42:30+00:00",
                    "job_active_stage": {
                        "position": 2.0,
                        "status": "Active",
                        "id": "00000000-0000-0000-0000-000000000000"
                    },
                    "deadline": null,
                    "name": "Test API",
                    "campaignID": "00000000-0000-0000-0000-000000000000",
                    "job_previous_stage": {
                        "position": 1.0,
                        "status": "Approved",
                        "id": "00000000-0000-0000-0000-000000000000"
                    }
                },
                {
                    "job_stages": [
                        {
                            "position": 1.0,
                            "status": "Approved",
                            "id": "00000000-0000-0000-0000-000000000000"
                        },
                        {
                            "position": 2.0,
                            "status": "Active",
                            "id": "00000000-0000-0000-0000-000000000000"
                        },
                        {
                            "position": 3.0,
                            "status": "Idle",
                            "id": "00000000-0000-0000-0000-000000000000",
                            "bookedMinutes": 5.0
                        }
                    ],
                    "dateModified": "2017-03-30T11:43:19+00:00",
                    "presetID": null,
                    "jobKey": "0000-0",
                    "dateFinished": "2021-02-25T16:19:42+00:00",
                    "jobFinishedHistory": [
                        {
                            "userId": "00000000-0000-0000-0000-000000000000",
                            "date": "2021-02-24T16:23:48+00:00"
                        },
                        {
                            "userId": "00000000-0000-0000-0000-000000000000",
                            "date": "2021-02-25T16:19:42+00:00"
                        }
                    ],
                    "jobMetaproperties": {
                        "00000000-0000-0000-0000-000000000000": "00000000-0000-0000-0000-000000000000,00000000-0000-0000-0000-000000000000",
                        "00000000-0000-0000-0000-000000000000": "Country",
                        "00000000-0000-0000-0000-000000000000": "City"
                    },
                    "createdByID": "00000000-0000-0000-0000-000000000000",
                    "job_next_stage": {
                        "position": 3.0,
                        "status": "Idle",
                        "id": "00000000-0000-0000-0000-000000000000"
                    },
                    "id": "00000000-0000-0000-0000-000000000000",
                    "description": "",
                    "accountableID": "00000000-0000-0000-0000-000000000000",
                    "basedOnPreset": false,
                    "dateCreated": "2017-03-30T11:42:30+00:00",
                    "job_active_stage": {
                        "position": 2.0,
                        "status": "Active",
                        "id": "00000000-0000-0000-0000-000000000000"
                    },
                    "deadline": null,
                    "name": "Test API with booked time",
                    "campaignID": "00000000-0000-0000-0000-000000000000",
                    "bookedMinutes": 10.0,
                    "job_previous_stage": {
                        "position": 1.0,
                        "status": "Approved",
                        "id": "00000000-0000-0000-0000-000000000000"
                    }
                }
            ]

### Retrieve the jobs of a specific campaign [GET /api/workflow/campaigns/{id}/jobs/{?dateCreatedFrom,dateCreatedTo,dateModifiedFrom,dateModifiedTo,deadlineFrom,deadlineTo,orderBy,limit,page}]
**Warning:** Requires the **CAMPAIGNOVERVIEW** security role.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000-000000000000` (string, required) - The id of a Campaign.
    + dateCreatedFrom: `2020-01-01T12:00:00Z` (datetime, optional) - Only return jobs which have a dateCreated on or after this datetime.
    + dateCreatedTo: `2020-01-01T12:00:00Z` (datetime, optional) - Only return jobs which have a dateCreated before or on this datetime.
    + dateModifiedFrom: `2020-01-01T12:00:00Z` (datetime, optional) - Only return jobs which have a dateModified on or after this datetime.
    + dateModifiedTo: `2020-01-01T12:00:00Z` (datetime, optional) - Only return jobs which have a dateModified before or on this datetime.
    + deadlineFrom: `2020-01-01T12:00:00Z` (datetime, optional) - Only return jobs which have a deadline on or after this datetime.
    + deadlineTo: `2020-01-01T12:00:00Z` (datetime, optional) - Only return jobs which have a deadline before or on this datetime.
    + resonsibleIDs: `00000000000000000000000000000000,00000000000000000000000000000000` (string, optional) - Comma-separated list of workflow user IDs or workflow user group IDs.
    + accountableIDs: `00000000000000000000000000000000,00000000000000000000000000000000` (string, optional) - Comma-separated list of workflow user IDs.
    + status: `Approved,NeedsChanges` (string, optional) - Comma-separated list of job status.
        + Members
            + Approved
            + NeedsChanges
            + Active
            + Cancelled
    + orderBy: `dateModified desc` (enum, optional) - Field to order results by
        + Default
            dateCreated asc
        + Members
            + dateCreated asc
            + dateCreated desc
            + dateModified asc
            + dateModified desc
            + deadline asc
            + deadline desc
    + limit: `100` (integer, optional) - Maximum results to return, maximum: 1000. If limit is not provided, all results are returned. **Note:** When using pagination, pagination information is returned as response headers.
    + page: `1` (integer, optional) - What page of results to return.

+ Response 200 (application/json)

    + Headers

            X-Pagination-TotalRecords: 10000 (only returned when using pagination)
            X-Pagination-TotalPages: 100 (only returned when using pagination)
            X-Pagination-Page: 2 (only returned when using pagination)
            X-Pagination-Limit: 100 (only returned when using pagination)

    + Attributes
        + id (string) -  Id of the job
        + name (string) - Name of the job
        + description (string) - Description of the job
        + deadline (string) - Deadline date of the job
        + createdByID (string) -  Id of the user who created the job
        + accountableID (string) -  Id of the user who created the job
        + dateCreated (string) - Date and time of when the job was created
        + dateModified (string) - Last date and time of when the job was changed
        + basedOnPreset (string) - If the job was created from a preset
        + presetID (string) - Id of the preset the job was created from
        + campaignID (string) - Id of the campaign, the job is part of
        + bookedMinutes (number) - Total booked time for this job and its stages. Only included when data is available
        + jobKey (string) - Id containing the campaign key and the job numeric ID
        + dateFinished (string) - Last date and time of when the job was closed, null if never closed. If it is not null and the active stage's status is Active or NeedsChanges then the job was reopened.
        + jobFinishedHistory (array) - List of users that finished the job
            + (object)
                + userId (string) - Id of the user who finished the job
                + date (string) - Date and time of when the job was finished
        + job_stages (array) - All stages of this job
            + (object)
                + position (string) - Position of the stage within the job
                + status (string) - Status of the job stage
                + id (string) - id of the job stage
        + job_previous_stage (object)
            + position (string) - Position of the stage within the job
            + status (string) - Status of the job stage
            + id (string) - id of the job stage
        + job_active_stage (object)
            + position (string) - Position of the stage within the job
            + status (string) - Status of the job stage
            + id (string) - id of the job stage
        + job_next_stage (object)
            + position (string) - Position of the stage within the job
            + status (string) - Status of the job stage
            + id (string) - id of the job stage
        + jobMetaproperties (object) - ID and metaproperty values

    + Body

            [
                {
                    "job_stages": [
                        {
                            "position": 1.0,
                            "status": "Approved",
                            "id": "00000000-0000-0000-0000-000000000000"
                        },
                        {
                            "position": 2.0,
                            "status": "Active",
                            "id": "00000000-0000-0000-0000-000000000000"
                        },
                        {
                            "position": 3.0,
                            "status": "Idle",
                            "id": "00000000-0000-0000-0000-000000000000"
                        }
                    ],
                    "dateModified": "2017-03-30T11:43:19+00:00",
                    "presetID": null,
                    "jobKey": "0000-0",

                    "dateFinished": "2021-02-25T16:19:42+00:00",
                    "jobFinishedHistory": [
                        {
                            "userId": "00000000-0000-0000-0000-000000000000",
                            "date": "2021-02-24T16:23:48+00:00"
                        },
                        {
                            "userId": "00000000-0000-0000-0000-000000000000",
                            "date": "2021-02-25T16:19:42+00:00"
                        }
                    ],
                    "jobMetaproperties": {
                        "00000000-0000-0000-0000-000000000000": "00000000-0000-0000-0000-000000000000,00000000-0000-0000-0000-000000000000",
                        "00000000-0000-0000-0000-000000000000": "Country",
                        "00000000-0000-0000-0000-000000000000": "City"
                    },
                    "createdByID": "00000000-0000-0000-0000-000000000000",
                    "job_next_stage": {
                        "position": 3.0,
                        "status": "Idle",
                        "id": "00000000-0000-0000-0000-000000000000"
                    },
                    "id": "00000000-0000-0000-0000-000000000000",
                    "description": "",
                    "accountableID": "00000000-0000-0000-0000-000000000000",
                    "basedOnPreset": false,
                    "dateCreated": "2017-03-30T11:42:30+00:00",
                    "job_active_stage": {
                        "position": 2.0,
                        "status": "Active",
                        "id": "00000000-0000-0000-0000-000000000000"
                    },
                    "deadline": null,
                    "name": "Test API",
                    "campaignID": "00000000-0000-0000-0000-000000000000",
                    "job_previous_stage": {
                        "position": 1.0,
                        "status": "Approved",
                        "id": "00000000-0000-0000-0000-000000000000"
                    }
                },
                {
                    "job_stages": [
                        {
                            "position": 1.0,
                            "status": "Approved",
                            "id": "00000000-0000-0000-0000-000000000000"
                        },
                        {
                            "position": 2.0,
                            "status": "Active",
                            "id": "00000000-0000-0000-0000-000000000000"
                        },
                        {
                            "position": 3.0,
                            "status": "Idle",
                            "id": "00000000-0000-0000-0000-000000000000",
                            "bookedMinutes": 5.0
                        }
                    ],
                    "dateModified": "2017-03-30T11:43:19+00:00",
                    "presetID": null,
                    "jobKey": "0000-0",
                    "dateFinished": null,
                    "jobFinishedHistory": null,
                    "jobMetaproperties": {
                        "00000000-0000-0000-0000-000000000000": "00000000-0000-0000-0000-000000000000,00000000-0000-0000-0000-000000000000",
                        "00000000-0000-0000-0000-000000000000": "Country",
                        "00000000-0000-0000-0000-000000000000": "City"
                    },
                    "createdByID": "00000000-0000-0000-0000-000000000000",
                    "job_next_stage": {
                        "position": 3.0,
                        "status": "Idle",
                        "id": "00000000-0000-0000-0000-000000000000"
                    },
                    "id": "00000000-0000-0000-0000-000000000000",
                    "description": "",
                    "accountableID": "00000000-0000-0000-0000-000000000000",
                    "basedOnPreset": false,
                    "dateCreated": "2017-03-30T11:42:30+00:00",
                    "job_active_stage": {
                        "position": 2.0,
                        "status": "Active",
                        "id": "00000000-0000-0000-0000-000000000000"
                    },
                    "deadline": null,
                    "name": "Test API with booked time",
                    "campaignID": "00000000-0000-0000-0000-000000000000",
                    "bookedMinutes": 10.0,
                    "job_previous_stage": {
                        "position": 1.0,
                        "status": "Approved",
                        "id": "00000000-0000-0000-0000-000000000000"
                    }
                }
            ]

### Create job [POST]
**Warning:** Requires the **JOBADD** security role.

+ Request (application/json)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

    + Attributes
        + name (required, string) - Name of the job
        + description (optional, string) - Description of the job
        + deadline (optional, string) - Date of when the job ends
        + campaignID (required, string) - Id of the campaign the job is part of
        + accountableID (required, string) - Id of the user responsible for the job
        + presetID (required, string) - Id of the preset the job should be created from
        + jobMetaproperties (optional, object) -  ID and metaproperty values
        + stages (optional, array) - List of stages specified in the preset
            + (object) - mapping for a stage
                + preset_stage_id (required, string) - Id of the preset stage
                + name (optional, string) - Name of the stage
                + description (optional, string) - Description of the stage
                + responsibleGroupID (optional, string) - Id of responsible group for the stage
                + responsibleID (optional, string) - Id of the stage responsible. If responsible should be specified via the API then the preset needs to have "Choose responsible when creating the job" enabled.
                + deadline (optional, string) - Deadline date of stage. If deadline should be specified via the API then the preset needs to have "Choose deadline when creating the job" enabled.

    + Body

            {
                "name": "Job Example",
                "description": "Job Description",
                "deadline": "2018-09-29",
                "campaignID": "00000000-0000-0000-0000-000000000000",
                "accountableID": "00000000-0000-0000-0000-000000000000",
                "presetID": "00000000-0000-0000-0000-000000000000",
                "jobMetaproperties": {
                    "00000000-0000-0000-0000-000000000000": "00000000-0000-0000-0000-000000000000"
                },
                "stages": [
                    {
                        "description": "Awesome description",
                        "preset_stage_id": "00000000-0000-0000-0000-000000000000",
                        "name": "Review ",
                        "responsibleID": "00000000-0000-0000-0000-000000000000",
                        "deadline": "2018-09-29"
                    },
                    {
                        "description": "Stage description",
                        "preset_stage_id": "00000000-0000-0000-0000-000000000000",
                        "name": "Approval",
                        "responsibleGroupID": "00000000-0000-0000-0000-000000000000",
                        "deadline": "2018-09-29"
                    }
                ]
            }

+ Response 201 (application/json)

    + Body

            {
                "status": "Created",
                "job_id": "00000000-0000-0000-0000-000000000000"
            }



## Specific job operations [/api/workflow/jobs/{id}/]

### Retrieve specific job [GET]
**Warning:** Requires the **JOBOVERVIEW** security role.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000-000000000000` (string, required) - The id of a Job.

+ Response 200 (application/json)

    + Attributes
        + id (string) -  Id of the job
        + name (string) - Name of the job
        + description (string) - Description of the job
        + deadline (string) - Deadline date of the job
        + createdByID (string) -  Id of the user who created the job
        + accountableID (string) -  Id of the user who created the job
        + dateCreated (string) - Date and time of when the job was created
        + dateModified (string) - Last date and time of when the job was changed
        + basedOnPreset (string) - If the job was created from a preset
        + presetID (string) - Id of the preset the job was created from
        + campaignID (string) - Id of the campaign, the job is part of
        + bookedMinutes (number) - Total booked time for this job and its stages. Only included when data is available.
        + jobKey (string) - Id containing the campaign key and the job numeric ID
        + dateFinished (string) - Last date and time of when the job was closed, null if never closed. If it is not null and the active stage's status is Active or NeedsChanges then the job was reopened.
        + jobFinishedHistory (array) - List of users that finished the job.
            + (object)
                + userId (string) - Id of the user who finished the job
                + date (string) - Date and time of when the job was finished
        + job_stages (array) - All stages of this job
            + (object)
                + position (string) - Position of the stage within the job
                + status (string) - Status of the job stage
                + id (string) - id of the job stage
        + job_previous_stage (object) -
            + position (string) - Position of the stage within the job
            + status (string) - Status of the job stage
            + id (string) - id of the job stage
        + job_active_stage (object) -
            + position (string) - Position of the stage within the job
            + status (string) - Status of the job stage
            + id (string) - id of the job stage
        + job_next_stage (object) -
            + position (string) - Position of the stage within the job
            + status (string) - Status of the job stage
            + id (string) - id of the job stage
        + jobMetaproperties (object) - ID and metaproperty values

    + Body


            {
                "job_stages": [
                    {
                        "position": 1.0,
                        "status": "Approved",
                        "id": "00000000-0000-0000-0000-000000000000"
                    },
                    {
                        "position": 2.0,
                        "status": "Active",
                        "id": "00000000-0000-0000-0000-000000000000"
                    },
                    {
                        "position": 3.0,
                        "status": "Idle",
                        "id": "00000000-0000-0000-0000-000000000000"
                    }
                ],
                "dateModified": "2017-03-30T11:43:19+00:00",
                "presetID": null,
                "jobKey": "0000-0",
                "dateFinished": "2021-02-25T16:19:42+00:00",
                "jobFinishedHistory": [
                    {
                        "userId": "00000000-0000-0000-0000-000000000000",
                        "date": "2021-02-24T16:23:48+00:00"
                    },
                    {
                        "userId": "00000000-0000-0000-0000-000000000000",
                        "date": "2021-02-25T16:19:42+00:00"
                    }
                ],
                "createdByID": "00000000-0000-0000-0000-000000000000",
                "job_next_stage": {
                    "position": 3.0,
                    "status": "Idle",
                    "id": "00000000-0000-0000-0000-000000000000"
                },
                "id": "00000000-0000-0000-0000-000000000000",
                "description": "",
                "accountableID": "00000000-0000-0000-0000-000000000000",
                "basedOnPreset": false,
                "dateCreated": "2017-03-30T11:42:30+00:00",
                "job_active_stage": {
                    "position": 2.0,
                    "status": "Active",
                    "id": "00000000-0000-0000-0000-000000000000"
                },
                "deadline": null,
                "name": "Test API",
                "campaignID": "00000000-0000-0000-0000-000000000000",
                "job_previous_stage": {
                    "position": 1.0,
                    "status": "Approved",
                    "id": "00000000-0000-0000-0000-000000000000"
                }
            }


### Retrieve media of specific job [GET /api/workflow/jobs/{id}/media/]
**Warning:** Requires the **JOBOVERVIEW** security role.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000-000000000000` (string, required) - The id of a Job.

+ Response 200 (application/json)

    + Attributes
        + id (string) -  Id of the media
        + filename (string) - Name of the originally uploaded file
        + uploader_name (string) -  Full name of the user who created the media
        + responsible_name (string) -  Full name of the user who is assigned as responsible of the media
        + dateCreated (string) - Date and time of when the media was created
        + dateModified (string) - Last date and time of when the media was changed
        + orientation (string) - Orientation of the uploaded file (landscape | squar | portrait)
        + original_url (string) - Url to download the original file (valid only for 6 hours)
        + status (string) - Status of the media (AwaitingApproval | Processing | Approved | Rejected | Failed | Done)
        + versionParentID (string) -  Id of the parent media (null if in parent media)
        + version (number) - version number of media (starting from 1)
        + previews (array) - All previews of a media
            + (object)
                + type (string) - (thumbnail | preview | activity)
                + url (string) - Url to the preview file (valid only for 48 hours)
        + sub_versions (array) - All sub versions of the media
            + (object)
                + id (string) -  Id of the media
                + filename (string) - Name of the originally uploaded file
                + uploader_name (string) -  Full name of the user who created the media
                + responsible_name (string) -  Full name of the user who is assigned as responsible of the media
                + dateCreated (string) - Date and time of when the media was created
                + dateModified (string) - Last date and time of when the media was changed
                + orientation (string) - Orientation of the uploaded file (landscape | squar | portrait)
                + original_url (string) - Url to download the original file (valid only for 6 hours)
                + status (string) - Status of the media (AwaitingApproval | Processing | Approved | Rejected | Failed | Done)
                + versionParentID (string) -  Id of the parent media (null if in parent media)
                + version (number) - version number of media (starting from 1)
                + previews (array) - All previews of a media
                    + (object)
                        + type (string) - (thumbnail | preview | activity)
                        + url (string) - Url to the preview file (valid only for 48 hours)
                + sub_versions (array) - Empty list in sub_versions

    + Body
            [
                {
                    "original_url": "https://url.to.file/original.png",
                    "filename": "filename.png",
                    "orientation": "square",
                    "status": "AwaitingApproval",
                    "dateCreated": "2021-05-12T08:48:01+00:00",
                    "dateModified": "2021-05-12T08:51:22+00:00",
                    "responsible_name": "John Doe",
                    "version": 1,
                    "uploader_name": "John Doe",
                    "versionParentID": null,
                    "id": "00000000-0000-0000-0000-000000000000",
                    "previews": [
                        {
                            "type": "thumbnail",
                            "url": "https://url.to.file/preview.png",
                        },
                        {
                            "type": "preview",
                            "url": "https://url.to.file/preview.png",
                        },
                        {
                            "type": "activity",
                            "url": "https://url.to.file/preview.png",
                        }
                    ],
                    "sub_versions": [
                        {
                            "original_url": "https://url.to.file/original.png",
                            "filename": "filename.png",
                            "orientation": "square",
                            "status": "AwaitingApproval",
                            "dateCreated": "2021-05-13T08:48:01+00:00",
                            "dateModified": "2021-05-13T08:51:22+00:00",
                            "responsible_name": "John Doe",
                            "version": 2,
                            "uploader_name": "John Doe",
                            "versionParentID": "00000000-0000-0000-0000-000000000000",
                            "id": "00000000-0000-0000-0000-000000000000",
                            "previews": [
                                {
                                    "type": "thumbnail",
                                    "url": "https://url.to.file/preview.png",
                                },
                                {
                                    "type": "preview",
                                    "url": "https://url.to.file/preview.png",
                                },
                                {
                                    "type": "activity",
                                    "url": "https://url.to.file/preview.png",
                                }
                            ],
                            "sub_versions": []
                        }
                    ]
                }
            ]


### Retrieve stages of specific job [GET /api/workflow/jobs/{id}/stages/]
**Warning:** Requires the **JOBOVERVIEW** security role.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000-000000000000` (string, required) - The id of a Job.

+ Response 200 (application/json)

    + Attributes
        + Body (object) - List of stage objects
            + id (string) -  Id of the media
            + name (string) - Name of the specific stage
            + description (string) -  Full description of the specific stage
            + deadline (optional, string) - Date of when the stage ends
            + dateCreated (string) - Date and time of when the stage was created
            + createdByID (string) - Id of the user who created the stage
            + status (optional, enum) - Status of the new active stage
                + Idle
                + Active
                + Cancelled
                + Approved
                + NeedsChanges
            + position (number) - Position of the stage on the job.
            + responsible (object) - User or Group responsible for the stage
                + id (string) - Id of the workflow user or group responsible.
                + type (enum) - Type of the responsible for the stage.
                    + user
                    + group

    + Body
            [
                {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "Start stage",
                    "description": "This is the first stage",
                    "deadline": null,
                    "dateCreated": "2021-02-08T16:38:03+00:00",
                    "createdByID": "00000000-0000-0000-0000-000000000000",
                    "status": "Active",
                    "position": 1,
                    "responsible": {
                        "id": "00000000-0000-0000-0000-000000000000",
                        "type": "user"
                    }
                },
                {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "name": "Second stage",
                    "description": "",
                    "deadline": 2021-02-18T18:00:00+00:00,
                    "dateCreated": "2021-02-08T16:38:03+00:00",
                    "createdByID": "00000000-0000-0000-0000-000000000000",
                    "status": "Idle",
                    "position": 2,
                    "responsible": {
                        "id": "00000000-0000-0000-0000-000000000000",
                        "type": "group"
                    }
                }
            ]


### Modify job [PUT]
**Warning:** Requires the **JOBEDIT** security role.

+ Request (application/json)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

    + Attributes
        + name (optional, string) - Name of the job
        + description (optional, string) - Description of the job
        + deadline (optional, string) - Date of when the job ends
        + campaignID (optional, string) - Id of the campaign the job is part of
        + accountableID (optional, string) - Id of the user responsible for the job
        + jobMetaproperties (optional, object) - ID and metaproperty values
        + activeStage (optional, object) - The new active stage of the job
            + id (optional, string) - ID of the new active stage
            + deadline (optional, string) - Date of when the active stage ends
            + status (optional, enum) - Status of the new active stage
                + Idle
                + Active
                + Cancelled
                + Approved
                + NeedsChanges
        + nextStage (optional, object) - The new next stage of the job
            + id (optional, string) - ID of the new next stage
            + deadline (optional, string) - Date of when the next stage ends
            + status (optional, enum) - Status of the new next stage
                + Idle
                + Active
                + Cancelled
                + Approved
                + NeedsChanges
        + previousStage (optional, object) - The new previous stage of the job
            + id (optional, string) - ID of the new previous stage
            + deadline (optional, string) - Date of when the previous stage ends
            + status (optional, enum) - Status of the new previous stage
                + Idle
                + Active
                + Cancelled
                + Approved
                + NeedsChanges

    + Body

            {
                "name": "Job Example",
                "description": "Job Description",
                "deadline": "2018-09-29",
                "campaignID": "00000000-0000-0000-0000-000000000000",
                "accountableID": "00000000-0000-0000-0000-000000000000",
                "jobMetaproperties": {
                    "00000000-0000-0000-0000-000000000000": "00000000-0000-0000-0000-000000000000"
                },
                "nextStage": {
                    "status": "Idle",
                    "id": "00000000-0000-0000-0000-000000000003",
                    "deadline": "2024-08-31T00:00:00+00:00"
                },
                "activeStage": {
                    "status": "Active",
                    "id": "00000000-0000-0000-0000-000000000002"
                },
                "previousStage": {
                    "status": "Approved",
                    "id": "00000000-0000-0000-0000-000000000001",
                    "deadline": null
                }
            }

+ Parameters
    + id: `00000000-0000-0000-0000-000000000000` (string, required) - The id of a Job.

+ Response 200 (application/json)
    > set the `activeStage.status` to *Approved* and the `dateFinished` to `now()` UTC time.<
    <br>

    <br>
    <b>[Example] Moving the Job to the Last Stage</b>
    > To move the job to the next stage, set `nextStage` to `null`, update the `activeStage` to the your last stage with `status` equal to `Active`, and adjust `previousStage` to reflect the stage before the last one. Example: 
    <pre><code>
    {
        "name": "Job Example updated",
        "nextStage": null,
        "activeStage": {
            "id": "00000000-0000-0000-0000-000000000003",
            "status": "Active"
        },
        "previousStage": {
            "id": "00000000-0000-0000-0000-000000000002",
            "status": "Approved"
        }
    }
    </code></pre>

    + Body

            {
                "status": "Updated",
                "job_id": "00000000-0000-0000-0000-000000000000"
            }



### Save uploaded file to a specific job [POST /api/workflow/jobs/{id}/upload]
To upload a file to a workflow job it needs to be uploaded via [the Upload file endpoint for modern stack](#reference/upload-assets-modern-stack/). After completing of the various steps described in the Upload file endpoint, the `fileId` retrieved from those steps is needed in this request to reference the file to the job. This file will be attached to the job only.

**Warning:** Requires the **JOBEDIT** security role.

**Warning:** Is only available for Files-Service portals

+ Request (application/json)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

    + Attributes
        + fileId (required, string) - Id of the file to be saved to the job (to be retrieved from [Upload file](#reference/upload-files/upload-file) endpoint)
        + name (required, string) - Value to be used as filename
        + fileSize (required, number) - Size of the file in bytes
        + assetId (optional, string) - Id of the parent asset if this file is a new version of an asset

    + Body
        {
            "fileId": "00000000-0000-0000-0000-000000000001",
            "name": "example-name.jpg",
            "fileSize": 50000,
            "assetId": "00000000-0000-0000-0000-000000000002"
        }

+ Parameters
    + id: `00000000-0000-0000-0000-000000000000` (string, required) - The id of a Job.

+ Response 200 (application/json)
    {
        "mediaId": "00000000000000000000000000000000",
    }


### Finish job [PATCH /api/workflow/jobs/{id}/finish]
**Warning:** Requires the **JOBAPPROVE** security role.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000-000000000000` (string, required) - The id of a Job.

+ Response 200 (application/json)
    Ok: Job finished succesfully
    <br>
    This operation will:
    * set `dateFinished` and `dateModified` to *now()* - UTC
    * set `activeStage.status` to *Approved*
    * automatically exports job assets if *"Export assets automatically"* option is checked in the job preset
    * send email and portal notifications

    + Body

            {
                "status": "Finished",
                "job_id": "00000000-0000-0000-0000-000000000000"
            }

+ Response 403 (application/json)

    Forbidden: The user does not have the required permissions for this operation.

    + Body
        {}


+ Response 409 (application/json)
    Conflict: The job is not open (has been finished), the `activeStage.status` is *Approved*.
    > To modify `activeStage.status` to *Approved* use the [Modify job](#reference/workflow-jobs/specific-job-operations/modify-job) endpoint.
    <br>

    <br>
    > To check who and when closed it consult the `dateFinishedHistory` using the [Retrieve specific job](#reference/workflow-jobs/specific-job-operations/retrieve-specific-job) endpoint


    + Body

            {
                "status": "Job already finished.",
                "message": "Re-open the job to finish again."
            }

+ Response 409 (application/json)
    Conflict: The job is not on the last stage.
    > Advance it to the last stage using the [Modify job](#reference/workflow-jobs/specific-job-operations/modify-job) endpoint and try again

    + Body

            {
                "status": "Job not on last stage.",
                "message": "Advance the job 00000000-0000-0000-0000-000000000000 to the last stage to finish. See documentation for more details: https://bynder.docs.apiary.io/#reference/workflow-jobs/specific-job-operations"
            }


### Delete job [DELETE]
**Warning:** Requires the **JOBREMOVE** security role.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000-000000000000` (string, required) - The id of a Job.

+ Response 204 (application/json)


# Stage workflow

## Specific stage operations [/api/workflow/stages/{id}/]

### Retrieve specific stage [GET]
**Warning:** Requires the **JOBOVERVIEW** security role.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000-000000000000` (string, required) - The id of a stage.

+ Response 200 (application/json)

    + Attributes
        + id (string) -  Id of the stage
        + name (string) - Name of the specific stage
        + description (string) -  Full description of the specific stage
        + deadline (optional, string) - Date of when the stage ends
        + dateCreated (string) - Date and time of when the stage was created
        + createdByID (string) - Id of the user who created the stage
        + status (enum) - Status of the new active stage
            + Idle
            + Active
            + Cancelled
            + Approved
            + NeedsChanges
        + position (number) - Position of the stage on the job.
        + responsible (object) - User or Group responsible for the stage
            + id (string) - Id of the Workflow user or group responsible.
            + type (enum) - Type of the responsible for the stage.
                + user
                + group

    + Body
        {
            "id": "00000000-0000-0000-0000-000000000000",
            "name": "Start stage - follow the flow",
            "description": "This is the first stage",
            "deadline": null,
            "dateCreated": "2021-02-08T16:38:03+00:00",
            "createdByID": "00000000-0000-0000-0000-000000000000",
            "status": "NeedsChanges",
            "position": 1,
            "responsible": {
                "id": "00000000-0000-0000-0000-000000000000",
                "type": "user"
            }
        }

### Modify stage [PUT]
**Warning:** Requires the **JOBEDIT** security role.

+ Request (application/json)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

    + Attributes
        + name (string, required) - Name of the specific stage
        + description (string) -  Full description of the specific stage
        + deadline (string) - Date of when the stage ends
        + responsible (object) - User or Group responsible for the stage
             + id (string) - Id of the Workflow user or group responsible.
             + type (enum) - Type of the responsible for the stage.
                + user
                + group


    + Body

            {
                "name": "Updated Stage name",
                "description": "This is an updated stage description",
                "deadline": "2024-08-31T00:00:00+00:00"
                "responsible": {
                    "id": "`00000000-0000-0000-0000-000000000000",
                    "type": "user"
                }
            }

+ Parameters
    + id: `00000000-0000-0000-0000-000000000000` (string, required) - The id of a Stage.

+ Response 200 (application/json)

    + Body
            {
                "status": "Updated",
                "stage_id": "00000000-0000-0000-0000-000000000000"
            }

# Group Workflow metaproperties
**Warning:** Requires the **METAPROPERTYOVERVIEW** security role.

## Metaproperty operations [/api/workflow/metaproperties/]

### Retrieve metaproperties [GET]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Response 200 (application/json)

    + Attributes
        + Body (object) - List of metaproperties objects
            + ID (string) - Metaproperty ID
            + label (string) - Label of Metaproperty
            + short_name (string) - Key of Job Metaproperty
            + description (string) - Description of Metaproperty
            + export (string) - Export to Bynder
            + removed_by (string) - Removed
            + dependency (string) - Metaproperty Dependency
            + position (string) - Ranking in Workflow Metaproperty Overview
            + default (string) - Always show this metaproperty when creating a Job
            + dateCreated (string) - Date of metaproperty creation
            + exportName (string) - Export to metaproperty with name
            + type (string) - Metaproperty Type
            + required (boolean) - This metaproperty is required
            + dependencyValue (string) - Visible based on other metaproperty
            + assetbank_metaproperty
            + entity (enum)
                + job (string)
                + campaign (string)
            + created_by (object)
                + ID (string) - Dd of the workflow user
                + fullName (string) - Full name of the workflow user
            + Options (object) - List op option object
                + ID (string) - Id of the option
                + position (string) - Position of the option
                + default (boolean)
                + label (string) - Label name of the option
                + dateCreated (string) - The date the option was created on
                + metapropertyID (string)
                + created_by (object)
                    + ID (string)
                    + fullName (string)

    + Body

            {
                "label": "Holiday Type",
                "type": "select",
                "removed_by": null,
                "dependency": null,
                "position": 12.0,
                "default": true,
                "dateCreated": "2017-10-27T16:31:52+00:00",
                "exportName": "",
                "numericID": 9.0,
                "required": false,
                "parts": [],
                "removed": false,
                "dependencyValue": null,
                "is_complex": true,
                "accountID": "00000000-0000-0000-0000-000000000000",
                "assetbank_metaproperty": null,
                "entity": "job",
                "export": false,
                "short_name": "JOB-9",
                "description": "",
                "ID": "00000000-0000-0000-0000-000000000000",
                "created_by": {
                    "ID": "00000000-0000-0000-0000-000000000000",
                    "fullName": "User1"
                },
                "options": [
                    {
                        "position": 1.0,
                        "default": true,
                        "label": "Beach",
                        "dateCreated": "2017-10-27T16:31:52+00:00",
                        "ID": "00000000-0000-0000-0000-000000000000",
                        "metapropertyID": "00000000-0000-0000-0000-000000000000",
                        "created_by": {
                            "ID": "00000000-0000-0000-0000-000000000000",
                            "fullName": "User1"
                        }
                    },
                    {
                        "position": 2.0,
                        "default": false,
                        "label": "Sightseeing",
                        "dateCreated": "2017-10-27T16:32:16+00:00",
                        "ID": "00000000-0000-0000-0000-000000000000",
                        "metapropertyID": "00000000-0000-0000-0000-000000000000",
                        "created_by": {
                            "ID": "00000000-0000-0000-0000-000000000000",
                            "fullName": "User1"
                        }
                    },
                    {
                        "position": 3.0,
                        "default": false,
                        "label": "Wintersport",
                        "dateCreated": "2017-10-27T16:32:16+00:00",
                        "ID": "00000000-0000-0000-0000-000000000000",
                        "metapropertyID": "00000000-0000-0000-0000-000000000000",
                        "created_by": {
                            "ID": "00000000-0000-0000-0000-000000000000",
                            "fullName": "User1"
                        }
                    },
                    {
                        "position": 4.0,
                        "default": false,
                        "label": "Nature",
                        "dateCreated": "2017-10-27T16:32:16+00:00",
                        "ID": "00000000-0000-0000-0000-000000000000",
                        "metapropertyID": "00000000-0000-0000-0000-000000000000",
                        "created_by": {
                            "ID": "00000000-0000-0000-0000-000000000000",
                            "fullName": "User1"
                        }
                    }
                ]
            }


## Specific metaproperty operations [/api/workflow/metaproperties/{id}]

### Retrieve specific metaproperty [GET]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000-000000000000` (string, required) - The id of a metaproperty.

+ Response 200 (application/json)

    + Attributes
        + Body (object) - Metaproperty object
            + ID (string) - Metaproperty ID
            + label (string) - Label of Metaproperty
            + short_name (string) - Key of Job Metaproperty
            + description (string) - Description of Metaproperty
            + export (string) - Export to Bynder
            + removed_by (string) - Removed
            + dependency (string) - Metaproperty Dependency
            + position (string) - Ranking in Workflow Metaproperty Overview
            + default (string) - Always show this metaproperty when creating a Job
            + dateCreated (string) - Date of metaproperty creation
            + exportName (string) - Export to metaproperty with name
            + type (string) - Metaproperty Type
            + required (boolean) - This metaproperty is required
            + dependencyValue (string) - Visible based on other metaproperty
            + assetbank_metaproperty
            + entity (enum)
                + job (string)
                + campaign (string)
            + created_by (object)
                + ID (string) - Dd of the workflow user
                + fullName (string) - Full name of the workflow user
            + Options (object) - List op option object
                + ID (string) - Id of the option
                + position (string) - Position of the option
                + default (boolean)
                + label (string) - Label name of the option
                + dateCreated (string) - The date the option was created on
                + metapropertyID (string)
                + created_by (object)
                    + ID (string)
                    + fullName (string)

    + Body

            {
                "label": "Holiday Type",
                "type": "select",
                "removed_by": null,
                "dependency": null,
                "position": 12.0,
                "default": true,
                "dateCreated": "2017-10-27T16:31:52+00:00",
                "exportName": "",
                "numericID": 9.0,
                "required": false,
                "parts": [],
                "removed": false,
                "dependencyValue": null,
                "is_complex": true,
                "accountID": "00000000-0000-0000-0000-000000000000",
                "assetbank_metaproperty": null,
                "entity": "job",
                "export": false,
                "short_name": "JOB-9",
                "description": "",
                "ID": "00000000-0000-0000-0000-000000000000",
                "created_by": {
                    "ID": "00000000-0000-0000-0000-000000000000",
                    "fullName": "User1"
                },
                "options": [
                    {
                        "position": 1.0,
                        "default": true,
                        "label": "Beach",
                        "dateCreated": "2017-10-27T16:31:52+00:00",
                        "ID": "00000000-0000-0000-0000-000000000000",
                        "metapropertyID": "00000000-0000-0000-0000-000000000000",
                        "created_by": {
                            "ID": "00000000-0000-0000-0000-000000000000",
                            "fullName": "User1"
                        }
                    },
                    {
                        "position": 2.0,
                        "default": false,
                        "label": "Sightseeing",
                        "dateCreated": "2017-10-27T16:32:16+00:00",
                        "ID": "00000000-0000-0000-0000-000000000000",
                        "metapropertyID": "00000000-0000-0000-0000-000000000000",
                        "created_by": {
                            "ID": "00000000-0000-0000-0000-000000000000",
                            "fullName": "User1"
                        }
                    },
                    {
                        "position": 3.0,
                        "default": false,
                        "label": "Wintersport",
                        "dateCreated": "2017-10-27T16:32:16+00:00",
                        "ID": "00000000-0000-0000-0000-000000000000",
                        "metapropertyID": "00000000-0000-0000-0000-000000000000",
                        "created_by": {
                            "ID": "00000000-0000-0000-0000-000000000000",
                            "fullName": "User1"
                        }
                    },
                    {
                        "position": 4.0,
                        "default": false,
                        "label": "Nature",
                        "dateCreated": "2017-10-27T16:32:16+00:00",
                        "ID": "00000000-0000-0000-0000-000000000000",
                        "metapropertyID": "00000000-0000-0000-0000-000000000000",
                        "created_by": {
                            "ID": "00000000-0000-0000-0000-000000000000",
                            "fullName": "User1"
                        }
                    }
                ]
            }


# Group Workflow users
**Warning:** Requires the **USERMANAGEMENT** security role.

## User operations [/api/workflow/users/{?paginate,page,page_size}]

### Retrieve users [GET]

**Deprecated:** Please use the **Retrieve users with pagination** endpoint.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Response 200 (application/json)

    + Attributes
        + Body (object) - Workflow user object
            + ID (string) - Workflow user Id
            + fullname (string) - First and last name of user
            + BynderUser (object)
                + firstName (string) - User's first name
                + listName (string) - User's last name
                + infix (string)
                + email (string) - User registered email
                + id (string) - Bynder user ID (Note: This Id refers to the user Id in v4)

    + Body

        [
            {
                "ID": "00000000-0000-0000-0000-000000000000",
                "fullname": "Firstname Lastname",
                "bynderUser": {
                    "firstName": "Firstname",
                    "lastName": "Lastname",
                    "infix": "Van",
                    "email": "example@example.com",
                    "id": "00000000-0000-0000-0000-000000000000"
                }
            }
        ]

### Retrieve users with pagination [GET]

**Attention:** The `body` of the response changes when using pagination.

+ Parameters
    + paginate: True (boolean, optional) - Determines if the response should use pagination. Defaults to `False`.
    + page: 1 (number, optional) - The page number to retrieve. Defaults to `1`. If set as `0` we don't apply pagination.
    + page_size: 10 (number, optional) - The number of workflow users to return per page. Defaults to `10`. If set as `0` we don't apply pagination.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Response 200 (application/json)

    + Attributes
        + users (array) - List of workflow users
            + Body (object) - Workflow user object
                + ID (string) - Workflow user Id
                + fullname (string) - First and last name of user
                + BynderUser (object)
                    + firstName (string) - User's first name
                    + listName (string) - User's last name
                    + infix (string)
                    + email (string) - User registered email
                    + id (string) - Bynder user ID (Note: This Id refers to the user Id in v4)

    + Body

        {
            "users": [
                {
                    "ID": "00000000-0000-0000-0000-000000000000",
                    "fullname": "Firstname Lastname",
                    "bynderUser": {
                        "firstName": "Firstname",
                        "lastName": "Lastname",
                        "infix": "Van",
                        "email": "example@example.com",
                        "id": "00000000-0000-0000-0000-000000000000"
                    }
                }
            ]
        }

## Specific user operations [/api/workflow/users/{id}/]

### Retrieve specific users [GET]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Response 200 (application/json)

    + Attributes
        + Body (object) - Workflow user object
            + ID (string) - Workflow user Id
            + fullname (string) - First and last name of user
            + BynderUser (object)
                + firstName (string) - User's first name
                + listName (string) - User's last name
                + infix (string)
                + email (string) - User registered email
                + id (string) - Bynder user ID (Note: This Id refers to the user Id in v4)

    + Body

            {
                "ID": "00000000-0000-0000-0000-000000000000",
                "fullname": "Firstname Lastname",
                "bynderUser": {
                    "firstName": "Firstname",
                    "lastName": "Lastname",
                    "infix": "Van",
                    "email": "example@example.com",
                    "id": "00000000-0000-0000-0000-000000000000"
                }
            }

# Group Workflow groups
**Warning:** Requires the **GROUPOVERVIEW** or **WORKFLOWADMIN** security role.

## Group operations [/api/workflow/groups/]

### Retrieve groups [GET]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Response 200 (application/json)

    + Body

            {
                "users": [
                    {
                        "bynderUser": {
                            "firstName": "FirstName",
                            "lastName": "LastName",
                            "id": "00000000-0000-0000-0000-000000000000",
                            "infix": null,
                            "email": "test@bynder.com"
                        },
                        "fullName": "FirstName LastName",
                        "ID": "00000000-0000-0000-0000-000000000000"
                    }
                ],
                "accountID": "00000000-0000-0000-0000-000000000000",
                "ID": "00000000-0000-0000-0000-000000000000",
                "createdByID": "00000000-0000-0000-0000-000000000000",
                "name": "Content Reviewers ",
                "dateCreated": "2017-10-27T16:32:16+00:00"
            }

### Create group [POST]

+ Request (application/json)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

    + Attributes
        + Body (object)
            + name (string, required) - Name of Worklfow Group
            + user_ids (array, required) - List of users objects part of the Worklfow Group

    + Body

            {
                "name": "new name",
                "user_ids": {"00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000000"}
            }

+ Response 200 (application/json)

## Specific group operations [/api/workflow/groups/{id}/]

### Retrieve specific group [GET]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000-000000000000` (string, required) - The id of a Workflow group.

+ Response 200 (application/json)

    + Body

            {
                "users": [
                    {
                        "bynderUser": {
                            "firstName": "FirstName",
                            "lastName": "LastName",
                            "id": "00000000-0000-0000-0000-000000000000",
                            "infix": null,
                            "email": "test@bynder.com"
                        },
                        "fullName": "FirstName LastName",
                        "ID": "00000000-0000-0000-0000-000000000000"
                    }
                ],
                "accountID": "00000000-0000-0000-0000-000000000000",
                "ID": "00000000-0000-0000-0000-000000000000",
                "createdByID": "00000000-0000-0000-0000-000000000000",
                "name": "Content Reviewers ",
                "dateCreated": "2017-10-27T16:32:16+00:00"
            }

### Modify group [PUT]

+ Request (application/json)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

    + Attributes
        + Body (object)
            + name (required,string) - Name of Worklfow Group
            + user_ids (array) - List of users part of the Worklfow Group. All current workflow user of that group will be overwritten.

    + Body

            {
                "name": "new name",
                "user_ids": {"00000000-0000-0000-0000-000000000000","00000000-0000-0000-0000-000000000000"}
            }

+ Parameters
    + id: `00000000-0000-0000-0000-000000000000` (string, required) - The id of a Workflow group.

+ Response 200 (application/json)

### Delete group [DELETE]

+ Request (application/json)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000-000000000000` (string, required) - The id of a Workflow group.

+ Response 204 (application/json)


# Group Brandstore

## Order operations [/api/store/order/{?page}]

### Retrieve orders [GET]
**Warning:** Requires the **brandstore.orderadmin.view** security role.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + page: `1` (number, optional) - Offset page for results: return the N-th set of limit-results. Limit is currently hardcoded to 10.
        + Default: `1`

+ Response 200 (application/json)

    + Body

            [
                {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "order_ref": "NA13334",
                    "net_price": 0.0,
                    "date_created": "2018-10-25T14:26:01+00:00",
                    "username": "john.doe@bynder.com",
                    "account_name": "Bynder",
                    "order_status": "In production",
                    "currency_symbol": "8364"
                },
                {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "order_ref": "US12774",
                    "net_price": 79.0,
                    "date_created": "2018-09-10T12:12:21+00:00",
                    "username": "john.doe@bynder.com",
                    "account_name": "Bynder",
                    "order_status": "Waiting for approval",
                    "currency_symbol": "36"
                }
            ]

## Specific order operations [/api/store/order/{id}/]

### Retrieve specific order info [GET /api/store/order/{id}/]
**Warning:** Requires the **brandstore.orderadmin.view** security role.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - Order id.

+ Response 200 (application/json)

    + Body

            {
                "id": "00000000-0000-0000-0000000000000000",
                "dateCreated": "2015-06-01T08:36:18Z",
                "status": "IN_PRODUCTION",
                "orderReference": "NL0456"
            }

### Retrieve specific order by id [GET /api/store/order/{id}/products]
**Warning:** Requires the **brandstore.orderadmin.edit** security role.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - Order id.

+ Response 200 (application/json)

    + Body

            [
                {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "orderId": "00000000-0000-0000-0000-000000000000",
                    "product": {
                        "id": "00000000-0000-0000-0000-000000000000",
                        "name": "Train the trainer product",
                        "description": "This is such a nice product!",
                        "isFeatured": false,
                        "product_number": "999999999",
                        "supplier_number": null,
                        "size_height": 1.0,
                        "size_width": 1.0,
                        "size_depth": 1.0,
                        "weight": 1.0,
                        "min_quantity": 1,
                        "max_quantity": 10,
                        "default_quantity": 1,
                        "datecreated": "2016-08-10T12:14:16+00:00",
                        "isActive": true,
                        "product_type": "print",
                        "product_package": "unit",
                        "countries": null,
                        "sku": "1",
                        "step": 1,
                        "display_length_unit": "cm",
                        "isFree": false,
                        "pages": null,
                        "language": null,
                        "supplier_version_specifier": null,
                        "isShipping": false
                    },
                    "referenceId": "999999999",
                    "name": "Train the trainer product",
                    "description": "",
                    "itemPrice": 0.2333,
                    "quantity": 3,
                    "supplier": null,
                    "customerReference": null,
                    "metaproperties": null
                }
            ]

### Retrieve specific order by number [GET /api/store/order/{orderNumber}/products]
**Warning:** Requires the **brandstore.orderadmin.edit** security role.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + orderNumber: `13334` (string, required) - The order number without the country code (NA13334).

+ Response 200 (application/json)

    + Body

            [
                {
                    "id": "00000000-0000-0000-0000-000000000000",
                    "orderId": "00000000-0000-0000-0000-000000000000",
                    "product": {
                        "id": "00000000-0000-0000-0000-000000000000",
                        "name": "Train the trainer product",
                        "description": "This is such a nice product!",
                        "isFeatured": false,
                        "product_number": "999999999",
                        "supplier_number": null,
                        "size_height": 1.0,
                        "size_width": 1.0,
                        "size_depth": 1.0,
                        "weight": 1.0,
                        "min_quantity": 1,
                        "max_quantity": 10,
                        "default_quantity": 1,
                        "datecreated": "2016-08-10T12:14:16+00:00",
                        "isActive": true,
                        "product_type": "print",
                        "product_package": "unit",
                        "countries": null,
                        "sku": "1",
                        "step": 1,
                        "display_length_unit": "cm",
                        "isFree": false,
                        "pages": null,
                        "language": null,
                        "supplier_version_specifier": null,
                        "isShipping": false
                    },
                    "referenceId": "999999999",
                    "name": "Train the trainer product",
                    "description": "",
                    "itemPrice": 0.2333,
                    "quantity": 3,
                    "supplier": null,
                    "customerReference": null,
                    "metaproperties": null
                }
            ]

### Modify order [POST /api/store/order/{id}/]
**Warning:** Requires the **brandstore.orderadmin.edit** security role.

+ Request (application/x-www-form-urlencoded)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - Order id.

+ Attributes
    + status (enum, optional) - New status of the order.
        + Members
            + `IN_PROGRESS`
            + `CANCELED`
            + `FAILED`
            + `WAITING_FOR_PAYMENT`
            + `FOR_ORDER`
            + `IN_PRODUCTION`
            + `PRODUCTION_SUSPENDED`
            + `OUT_FOR_DELIVERY`
            + `FINISHED`
    + message: `Order has been delivered` (string, optional) - Message
    + trackingnumber: `trackingnumber` (string, optional) - Link to trackingnumber

+ Response 201 (application/json)

    + Body

            {
              "message": "Created",
              "status_code": 201
            }

## Specific orderline operations [/api/store/orderproducts/{id}]

### Retrieve specific orderline [GET]
**Warning:** Requires the **brandstore.orderadmin.view** security role.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - Orderline id.

+ Response 200 (application/json)

    + Body

            {
                "id": "00000000-0000-0000-0000-000000000000",
                "status": "unknown",
                "orderId": "00000000-0000-0000-0000-000000000000",
                "customerReference": "000000000000"
            }

### Modify orderline [PATCH]
**Warning:** Requires the **brandstore.orderadmin.edit** security role.

+ Request (application/json)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

    + Attributes
        + data - JSON-serialised string
            + status (enum, required) - Status of the orderline.
                + Members
                    + `approved`
                    + `rejected`
            + customerReference (string, optional) - Customer reference of the orderline.

    + Body

            {
                "status": "approved",
                "customerReference": "000000000000"
            }

+ Parameters
    + id: `00000000-0000-0000-0000000000000000` (string, required) - Orderline id.

+ Response 201 (application/json)

    + Body

            {
              "message": "Created",
              "status_code": 201
            }


# Group Analytics
The Analytics API gives you access to all analytics data available in Bynder as raw events.
Access to this data comes with additional pricing. Make sure to contact your CSM if you are interested in using it.
To gain access, you will need to use [OAuth 2.0](#reference/oauth-2.0) as authorization setup and activate the corresponding analytics [scope](#introduction/oauth-scopes).
We recommend using Client Credentials grant type. Then you'll be able to get your authorization token using the following endpoint [OAuth2 Client Credentials](#reference/oauth-2.0/token-endpoint/using-client-credentials),
that would grant you access to all Analytics endpoints.

## Asset Usage V2 [/v7/analytics/api/v2/asset]

These endpoints return information related to the specific event.
You can enrich these events with specific data about the asset or the user by making use of the [Analytics Reporting tool](#reference/analytics/reporting) or the [Users API endpoints](#reference/users).

This new version resolves pagination performance issues.

### Asset Views [GET /v7/analytics/api/v2/asset/views{?limit,cursor,fromDateTime,toDateTime}]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + limit: `100` (number, optional) - The maximum number of analytics events to retrieve. Allowed values are between 1 and 10000.
        + Default: `1000`
    + cursor: `0` (number, optional) - Cursor mark returned in the response headers to be used for pagination purposes.
        + Default: `0`
    + fromDateTime: `2022-01-01T01:00` (string, optional) - Retrieve view events ocurred after this date.<br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.
    + toDateTime: `2022-06-01T01:00` (string, optional) - Set a date range together with the "fromDateTime" parameter. <br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.

+ Response 200 (application/json)

    + Headers

            Next-Cursor: The next cursor value to send if you want to continue with your paginated request. E.g: 1000
            Next-Url: The next url path to query if you want to continue with your paginated request. E.g: /api/v1/asset/view?limit=1000&cursor=1000

    + Body

            [
                {
                    "eventId" : "236280dd-b06e-44be-ae9f-85e2661510a1",
                    "eventType" : "AssetViewed",
                    "userId" : "1A84D758-2B3A-141F-8F07D71AA1F223BD",
                    "dateTime" : "2021-11-15T10:07:57.781+00:00",
                    "assetId" : "CA510292-E39E-4B28-AB6444CDD2B1C5C0",
                }, {
                    "eventId" : "236280dd-b06e-44be-ae9f-85e2661510a2",
                    "eventType" : "AssetViewed",
                    "userId" : "1A84D758-2B3A-141F-8F07D71AA1F223BD",
                    "dateTime" : "2021-11-16T07:13:46.781+00:00",
                    "assetId" : "CA510292-E39E-4B28-AB6444CDD2B1C5C0",
                }
            ]

### Asset Downloads [GET /v7/analytics/api/v2/asset/downloads{?limit,cursor,fromDateTime,toDateTime}]
This new Downloads endpoint is the merger of all the new download event formats that have been released during this time. 
It incorporates download reason for portals with the Download Form feature, and returns all mediaitems that have been downloaded in a single event.


+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + limit: `100` (number, optional) - The maximum number of analytics events to retrieve. Allowed values are between 1 and 10000.
        + Default: `1000`
    + cursor: `0` (number, optional) - Cursor mark returned in the response headers to be used for pagination purposes.
        + Default: `0`
    + fromDateTime: `2022-01-01T01:00` (string, optional) - Retrieve view events ocurred after this date.<br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.
    + toDateTime: `2022-06-01T01:00` (string, optional) - Set a date range together with the "fromDateTime" parameter. <br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.

+ Response 200 (application/json)

    + Headers

            Next-Cursor: The next cursor value to send if you want to continue with your paginated request. E.g: 1000
            Next-Url: The next url path to query if you want to continue with your paginated request. E.g: /api/v1/asset/view?limit=1000&cursor=1000

    + Body

            [
                {
                    "eventId": "010cb0a6-661a-432e-b43d-a5ff2b258d3d",
                    "eventType": "AssetDownloadRequested",
                    "dateTime": "2024-08-13T11:36:15",
                    "userId": "EB1B822A-6453-4AA1-A4BC99B831F01B42",
                    "assetId": "9EF3379D-454C-4CA7-ACCDC296E2EA50C7",
                    "mediaItemIds": [
                        "2345A525-C212-4B02-A2613B470D063706"
                    ],
                    "downloadReasons": [
                        ""
                    ]
                },
                {
                    "eventId": "9383a831-1008-42e6-bdec-3f1d2d490bd9",
                    "eventType": "AssetDownloadRequested",
                    "dateTime": "2024-08-13T11:36:15",
                    "userId": "EB1B822A-6453-4AA1-A4BC99B831F01B42",
                    "assetId": "602589D0-D19B-439A-82BC63C580E7BBF6",
                    "mediaItemIds": [
                        "5028F179-E19D-457A-BC6328CE9F709FE4"
                    ],
                    "downloadReasons": [
                        "Marketing Campaign"
                    ]
                }
            ]

### Asset Creations [GET /v7/analytics/api/v2/asset/creations{?limit,cursor,fromDateTime,toDateTime}]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + limit: `100` (number, optional) - The maximum number of analytics events to retrieve. Allowed values are between 1 and 10000.
        + Default: `1000`
    + cursor: `0` (number, optional) - Cursor mark returned in the response headers to be used for pagination purposes.
        + Default: `0`
    + fromDateTime: `2022-01-01T01:00` (string, optional) - Retrieve creations events ocurred after this date.<br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.
    + toDateTime: `2022-06-01T01:00` (string, optional) - Set a date range together with the "fromDateTime" parameter. <br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.

+ Response 200 (application/json)

    + Headers

            Next-Cursor: The next cursor value to send if you want to continue with your paginated request. E.g: 1000
            Next-Url: The next url path to query if you want to continue with your paginated request. E.g: /api/v1/asset/creations?limit=1000&cursor=1000

    + Body

            [
                {
                    "eventId" : "236280dd-b06e-44be-ae9f-85e2661510a1",
                    "eventType" : "AssetCreated",
                    "userId" : "1A84D758-2B3A-141F-8F07D71AA1F223BD",
                    "dateTime" : "2021-11-15T10:07:57.781+00:00",
                    "assetId" : "CA510292-E39E-4B28-AB6444CDD2B1C5C0",
                }, {
                    "eventId" : "236280dd-b06e-44be-ae9f-85e2661510a2",
                    "eventType" : "AssetCreated",
                    "userId" : "1A84D758-2B3A-141F-8F07D71AA1F223BD",
                    "dateTime" : "2021-11-16T07:13:46.781+00:00",
                    "assetId" : "CA510292-E39E-4B28-AB6444CDD2B1C5C0",
                }
            ]

## Asset Usage V1 [/v7/analytics/api/v1/asset]

These endpoints return information related to the specific event.
You can enrich these events with specific data about the asset or the user by making use of the [Analytics Reporting tool](#reference/analytics/reporting) or the [Users API endpoints](#reference/users).

### Asset Download V2 [GET /v7/analytics/api/v1/asset/v2/download{?limit,cursor,fromDateTime,toDateTime}]

**Deprecated:** This endpoint was deprecated on 2025 March, 14th. Use the [Asset Downloads endpoint](#reference/analytics/asset-usage-v2/asset-downloads) from Asset Usage V2 instead.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + limit: `100` (number, optional) - The maximum number of analytics events to retrieve. Allowed values are between 1 and 10000.
        + Default: `1000`
    + cursor: `MTAwMA` (string, optional) - Cursor mark returned in the response headers to be used for pagination purposes.
        + Default: `MA`
    + fromDateTime: `2022-01-01T01:00` (string, optional) - Retrieve download events ocurred after this date.<br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.
    + toDateTime: `2022-06-01T01:00` (string, optional) - Set a date range together with the "fromDateTime" parameter. <br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.

+ Response 200 (application/json)

    + Headers

            Next-Cursor: The next cursor value to send if you want to continue with your paginated request. E.g: MTAwMA
            Next-Url: The next url path to query if you want to continue with your paginated request. E.g: /api/v1/asset/v2/download?limit=1000&cursor=MTAwMA

    + Attributes
        + eventId (string) -  Id of the event
        + eventType (string) - Type of event
        + dateTime (string) - Date and time when the event occurred
        + userId (string) - Id of the user that generated the event
        + assetId (string) - Id of the asset
        + downloadReasons (array) - Reasons given on why the asset was downloaded

    + Body

            [
                {
                  "eventId" : "1408aec2-3114-43dd-be20-ffb1246a5231",
                  "eventType" : "AssetDownloadRequested",
                  "dateTime" : "2021-11-15T10:07:57.781+00:00",
                  "userId" : "1A84D758-2B3A-141F-8F07D71AA1F223BD",
                  "assetId" : "CA510292-E39E-4B28-AB6444CDD2B1C5C0",
                  "downloadReasons" : [
                        "reason1",
                        "reason2",
                   ]
                },
                {
                  "eventId" : "5908aec2-3114-43dd-be20-ffb1246a5231",
                  "eventType" : "AssetDownloadRequested",
                  "dateTime" : "2021-11-15T10:07:57.781+00:00",
                  "userId" : "1A84D758-2B3A-141F-8F07D71AA1F223BD",
                  "assetId" : "C58ED8C6-6B09-4CD6-B71C32C6715834F",
                  "downloadReasons" : [
                        "reason2"
                   ]
                }
            ]

### Asset Create [GET /v7/analytics/api/v1/asset/create{?limit,cursor,fromDateTime,toDateTime}]

**Deprecated:** This endpoint was deprecated on 2025 March, 14th. Use the [Asset Creations V2 endpoint](#reference/analytics/asset-usage-v2/asset-creations) instead.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + limit: `100` (number, optional) - The maximum number of analytics events to retrieve. Allowed values are between 1 and 10000.
        + Default: `1000`
    + cursor: `MTAwMA` (string, optional) - Cursor mark returned in the response headers to be used for pagination purposes.
        + Default: `MA`
    + fromDateTime: `2022-01-01T01:00` (string, optional) - Retrieve create events ocurred after this date.<br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.
    + toDateTime: `2022-06-01T01:00` (string, optional) - Set a date range together with the "fromDateTime" parameter. <br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.

+ Response 200 (application/json)

    + Headers

            Next-Cursor: The next cursor value to send if you want to continue with your paginated request. E.g: MTAwMA
            Next-Url: The next url path to query if you want to continue with your paginated request. E.g: /api/v1/asset/create?limit=1000&cursor=MTAwMA

    + Body

            [
                {
                  "id" : "62de6d714e29485a81824fe3",
                  "eventType" : "asset.create",
                  "userId" : "1A84D758-2B3A-141F-8F07D71AA1F223BD",
                  "dateTime" : "2021-11-15T10:07:57.781+00:00",
                  "assetId" : "CA510292-E39E-4B28-AB6444CDD2B1C5C0",
                  "assetType" : "image",
                  "assetName" : "Product Insights",
                  "assetAudit" : "ACCEPTED",
                  "fileName" : "CA510292-E39E-4B28-AB6444CDD2B1C5C___Product Insights"
                }, {
                  "id" : "62de6d714e29485a81824fe4",
                  "eventType" : "asset.create",
                  "userId" : "1A84D758-2B3A-141F-8F07D71AA1F223BD",
                  "dateTime" : "2021-11-15T10:08:18.752+00:00",
                  "assetId" : "C58ED8C6-6B09-4CD6-B71C32C6715834F1",
                  "assetType" : "image",
                  "assetName" : "Reporting Schedule Nov 2022",
                  "assetAudit" : "ACCEPTED",
                  "fileName" : "C58ED8C6-6B09-4CD6-B71C32C6715834F1___Reporting Schedule Nov 2022"
                }

            ]

### Asset Create CSV [GET /v7/analytics/api/v1/asset/create.csv{?limit,cursor,fromDateTime,toDateTime}]

**Deprecated:** This endpoint was deprecated on 2025 March, 14th. Use the [Asset Creations V2 endpoint](#reference/analytics/asset-usage-v2/asset-creations) instead.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + limit: `100` (number, optional) - The maximum number of analytics events to retrieve. Allowed values are between 1 and 10000.
        + Default: `1000`
    + cursor: `MTAwMA` (string, optional) - Cursor mark returned in the response headers to be used for pagination purposes.
        + Default: `MA`
    + fromDateTime: `2022-01-01T01:00` (string, optional) - Retrieve create events ocurred after this date.<br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.
    + toDateTime: `2022-06-01T01:00` (string, optional) - Set a date range together with the "fromDateTime" parameter. <br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.

+ Response 200 (text/csv;charset=UTF-8)

    + Headers

            Next-Cursor: The next cursor value to send if you want to continue with your paginated request. E.g: MTAwMA
            Next-Url: The next url path to query if you want to continue with your paginated request. E.g: /api/v1/asset/create.csv?limit=1000&cursor=MTAwMA

    + Body

            id,eventType,userId,dateTime,assetId,assetType,assetName,assetAudit,fileName
            62de6d714e29485a81824fe3,asset.create,1A84D758-2B3A-141F-8F07D71AA1F223BD,1655823377864,CA510292-E39E-4B28-AB6444CDD2B1C5C0,image,Product Insights,ACCEPTED,CA510292-E39E-4B28-AB6444CDD2B1C5C___Product Insights
            62de6d714e29485a81824fe4,asset.create,1A84D758-2B3A-141F-8F07D71AA1F223BD,1655996103781,C58ED8C6-6B09-4CD6-B71C32C6715834F1,image,Reporting Schedule Nov 2022,ACCEPTED,C58ED8C6-6B09-4CD6-B71C32C6715834F1___Reporting Schedule Nov 2022

### Asset Archive [GET /v7/analytics/api/v1/asset/archive{?limit,cursor,fromDateTime,toDateTime}]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + limit: `100` (number, optional) - The maximum number of analytics events to retrieve. Allowed values are between 1 and 10000.
        + Default: `1000`
    + cursor: `MTAwMA` (string, optional) - Cursor mark returned in the response headers to be used for pagination purposes.
        + Default: `MA`
    + fromDateTime: `2022-01-01T01:00` (string, optional) - Retrieve archive events ocurred after this date.<br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.
    + toDateTime: `2022-06-01T01:00` (string, optional) - Set a date range together with the "fromDateTime" parameter. <br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.

+ Response 200 (application/json)

    + Headers

            Next-Cursor: The next cursor value to send if you want to continue with your paginated request. E.g: MTAwMA
            Next-Url: The next url path to query if you want to continue with your paginated request. E.g: /api/v1/asset/archive?limit=1000&cursor=MTAwMA

    + Body

            [
                {
                  "id" : "62de6d714e29485a81824fe3",
                  "eventType" : "asset.archive",
                  "userId" : "1A84D758-2B3A-141F-8F07D71AA1F223BD",
                  "dateTime" : "2021-11-15T10:07:57.781+00:00",
                  "assetId" : "CA510292-E39E-4B28-AB6444CDD2B1C5C0",
                  "assetType" : "image",
                  "assetName" : "Product Insights",
                  "assetAudit" : "ACCEPTED",
                  "fileName" : "CA510292-E39E-4B28-AB6444CDD2B1C5C___Product Insights"
                }, {
                  "id" : "62de6d714e29485a81824fe4",
                  "eventType" : "asset.archive",
                  "userId" : "1A84D758-2B3A-141F-8F07D71AA1F223BD",
                  "dateTime" : "2021-11-15T10:08:18.752+00:00",
                  "assetId" : "C58ED8C6-6B09-4CD6-B71C32C6715834F1",
                  "assetType" : "image",
                  "assetName" : "Reporting Schedule Nov 2022",
                  "assetAudit" : "ACCEPTED",
                  "fileName" : "C58ED8C6-6B09-4CD6-B71C32C6715834F1___Reporting Schedule Nov 2022"
                }

            ]

### Asset Archive CSV [GET /v7/analytics/api/v1/asset/archive.csv{?limit,cursor,fromDateTime,toDateTime}]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + limit: `100` (number, optional) - The maximum number of analytics events to retrieve. Allowed values are between 1 and 10000.
        + Default: `1000`
    + cursor: `MTAwMA` (string, optional) - Cursor mark returned in the response headers to be used for pagination purposes.
        + Default: `MA`
    + fromDateTime: `2022-01-01T01:00` (string, optional) - Retrieve archive events ocurred after this date.<br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.
    + toDateTime: `2022-06-01T01:00` (string, optional) - Set a date range together with the "fromDateTime" parameter. <br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.

+ Response 200 (text/csv;charset=UTF-8)

    + Headers

            Next-Cursor: The next cursor value to send if you want to continue with your paginated request. E.g: MTAwMA
            Next-Url: The next url path to query if you want to continue with your paginated request. E.g: /api/v1/asset/archive.csv?limit=1000&cursor=MTAwMA

    + Body

            id,eventType,userId,dateTime,assetId,assetType,assetName,assetAudit,fileName
            62de6d714e29485a81824fe3,asset.archive,1A84D758-2B3A-141F-8F07D71AA1F223BD,1655823377864,CA510292-E39E-4B28-AB6444CDD2B1C5C0,image,Product Insights,ACCEPTED,CA510292-E39E-4B28-AB6444CDD2B1C5C___Product Insights
            62de6d714e29485a81824fe4,asset.archive,1A84D758-2B3A-141F-8F07D71AA1F223BD,1655996103781,C58ED8C6-6B09-4CD6-B71C32C6715834F1,image,Reporting Schedule Nov 2022,ACCEPTED,C58ED8C6-6B09-4CD6-B71C32C6715834F1___Reporting Schedule Nov 2022"

### Asset Remove [GET /v7/analytics/api/v1/asset/remove{?limit,cursor,fromDateTime,toDateTime}]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + limit: `100` (number, optional) - The maximum number of analytics events to retrieve. Allowed values are between 1 and 10000.
        + Default: `1000`
    + cursor: `MTAwMA` (string, optional) - Cursor mark returned in the response headers to be used for pagination purposes.
        + Default: `MA`
    + fromDateTime: `2022-01-01T01:00` (string, optional) - Retrieve remove events ocurred after this date.<br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.
    + toDateTime: `2022-06-01T01:00` (string, optional) - Set a date range together with the "fromDateTime" parameter. <br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.

+ Response 200 (application/json)

    + Headers

            Next-Cursor: The next cursor value to send if you want to continue with your paginated request. E.g: MTAwMA
            Next-Url: The next url path to query if you want to continue with your paginated request. E.g: /api/v1/asset/remove?limit=1000&cursor=MTAwMA

    + Body

            [
                {
                  "id" : "62de6d714e29485a81824fe3",
                  "eventType" : "asset.remove",
                  "userId" : "1A84D758-2B3A-141F-8F07D71AA1F223BD",
                  "dateTime" : "2021-11-15T10:07:57.781+00:00",
                  "assetId" : "CA510292-E39E-4B28-AB6444CDD2B1C5C0",
                  "assetType" : "image",
                  "assetName" : "Product Insights",
                  "assetAudit" : "ACCEPTED",
                  "fileName" : "CA510292-E39E-4B28-AB6444CDD2B1C5C___Product Insights"
                }, {
                  "id" : "62de6d714e29485a81824fe4",
                  "eventType" : "asset.remove",
                  "userId" : "1A84D758-2B3A-141F-8F07D71AA1F223BD",
                  "dateTime" : "2021-11-15T10:08:18.752+00:00",
                  "assetId" : "C58ED8C6-6B09-4CD6-B71C32C6715834F1",
                  "assetType" : "image",
                  "assetName" : "Reporting Schedule Nov 2022",
                  "assetAudit" : "ACCEPTED",
                  "fileName" : "C58ED8C6-6B09-4CD6-B71C32C6715834F1___Reporting Schedule Nov 2022"
                }

            ]

### Asset Remove CSV [GET /v7/analytics/api/v1/asset/remove.csv{?limit,cursor,fromDateTime,toDateTime}]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + limit: `100` (number, optional) - The maximum number of analytics events to retrieve. Allowed values are between 1 and 10000.
        + Default: `1000`
    + cursor: `MTAwMA` (string, optional) - Cursor mark returned in the response headers to be used for pagination purposes.
        + Default: `MA`
    + fromDateTime: `2022-01-01T01:00` (string, optional) - Retrieve remove events ocurred after this date.<br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.
    + toDateTime: `2022-06-01T01:00` (string, optional) - Set a date range together with the "fromDateTime" parameter. <br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.

+ Response 200 (text/csv;charset=UTF-8)

    + Headers

            Next-Cursor: The next cursor value to send if you want to continue with your paginated request. E.g: MTAwMA
            Next-Url: The next url path to query if you want to continue with your paginated request. E.g: /api/v1/asset/remove.csv?limit=1000&cursor=MTAwMA

    + Body

            id,eventType,userId,dateTime,assetId,assetType,assetName,assetAudit,fileName
            62de6d714e29485a81824fe3,asset.remove,1A84D758-2B3A-141F-8F07D71AA1F223BD,1655823377864,CA510292-E39E-4B28-AB6444CDD2B1C5C0,image,Product Insights,ACCEPTED,CA510292-E39E-4B28-AB6444CDD2B1C5C___Product Insights
            62de6d714e29485a81824fe4,asset.remove,1A84D758-2B3A-141F-8F07D71AA1F223BD,1655996103781,C58ED8C6-6B09-4CD6-B71C32C6715834F1,image,Reporting Schedule Nov 2022,ACCEPTED,C58ED8C6-6B09-4CD6-B71C32C6715834F1___Reporting Schedule Nov 2022"

### Asset Activity [GET /v7/analytics/api/v1/asset/{assetId}{?limit,cursor,fromDateTime,toDateTime}]

This endpoint will allow you to retrieve all the events performed in a given asset. It uses version 1 Asset Views, Downloads and Creates, so numbers can differ from new version 2 events.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + assetId: `00000000-0000-0000-0000000000000000` (string, required) - Asset id.
    + limit: `100` (number, optional) - The maximum number of analytics events to retrieve. Allowed values are between 1 and 10000.
        + Default: `1000`
    + cursor: `MTAwMA` (string, optional) - Cursor mark returned in the response headers to be used for pagination purposes.
        + Default: `MA`
    + fromDateTime: `2022-01-01T01:00` (string, optional) - Retrieve events performed in a given asset ocurred after this date.<br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.
    + toDateTime: `2022-06-01T01:00` (string, optional) - Set a date range together with the "fromDateTime" parameter. <br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.

+ Response 200 (application/json)

    + Headers

            Next-Cursor: The next cursor value to send if you want to continue with your paginated request. E.g: MTAwMA
            Next-Url: The next url path to query if you want to continue with your paginated request. E.g: /api/v1/asset/CA510292-E39E-4B28-AB6444CDD2B1C5C0?limit=1000&cursor=MTAwMA

    + Body

            [
                {
                  "id" : "62de6d714e29485a81824fe3",
                  "eventType" : "asset.download",
                  "userId" : "1A84D758-2B3A-141F-8F07D71AA1F223BD",
                  "dateTime" : "2021-11-15T10:07:57.781+00:00",
                  "assetId" : "CA510292-E39E-4B28-AB6444CDD2B1C5C0",
                  "assetType" : "image",
                  "assetName" : "Product Insights",
                  "assetAudit" : "ACCEPTED",
                  "fileName" : "CA510292-E39E-4B28-AB6444CDD2B1C5C___Product Insights",
                  "mediaItemId": "69293464-7721-4062-9E05EFAF23FE70E7",
                  "mediaItemType": "original"
                }, {
                  "id" : "62de6d714e29485a81824fe4",
                  "eventType" : "asset.view",
                  "userId" : "1A84D758-2B3A-141F-8F07D71AA1F223BD",
                  "dateTime" : "2021-11-15T10:08:18.752+00:00",
                  "assetId" : "CA510292-E39E-4B28-AB6444CDD2B1C5C0",
                  "assetType" : "image",
                  "assetName" : "Product Insights",
                  "assetAudit" : "ACCEPTED",
                  "fileName" : "CA510292-E39E-4B28-AB6444CDD2B1C5C___Product Insights",
                }
            ]

### Asset Activity CSV [GET /v7/analytics/api/v1/asset/{assetId}.csv{?limit,cursor,fromDateTime,toDateTime}]

This endpoint will allow you to retrieve all the events performed in a given asset. It uses version 1 Asset Views and Asset Downloads, so number can differ from new version 2 events.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + assetId: `00000000-0000-0000-0000000000000000` (string, required) - Asset id.
    + limit: `100` (number, optional) - The maximum number of analytics events to retrieve. Allowed values are between 1 and 10000.
        + Default: `1000`
    + cursor: `MTAwMA` (string, optional) - Cursor mark returned in the response headers to be used for pagination purposes.
        + Default: `MA`
    + fromDateTime: `2022-01-01T01:00` (string, optional) - Retrieve events performed in a given asset ocurred after this date.<br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.
    + toDateTime: `2022-06-01T01:00` (string, optional) - Set a date range together with the "fromDateTime" parameter. <br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.

+ Response 200 (text/csv;charset=UTF-8)

    + Headers

            Next-Cursor: The next cursor value to send if you want to continue with your paginated request. E.g: MTAwMA
            Next-Url: The next url path to query if you want to continue with your paginated request. E.g: /api/v1/asset/CA510292-E39E-4B28-AB6444CDD2B1C5C0.csv?limit=1000&cursor=MTAwMA

    + Body

            id,eventType,userId,dateTime,assetId,assetType,assetName,assetAudit,fileName,mediaItemId,mediaItemType
            62de6d714e29485a81824fe3,asset.download,1A84D758-2B3A-141F-8F07D71AA1F223BD,1655823377864,CA510292-E39E-4B28-AB6444CDD2B1C5C0,image,Product Insights,ACCEPTED,CA510292-E39E-4B28-AB6444CDD2B1C5C___Product Insights,69293464-7721-4062-9E05EFAF23FE70E7,original
            62de6d714e29485a81824fe4,asset.view,1A84D758-2B3A-141F-8F07D71AA1F223BD,1655996103781,CA510292-E39E-4B28-AB6444CDD2B1C5C0,image,Product Insights,ACCEPTED,CA510292-E39E-4B28-AB6444CDD2B1C5C___Product Insights,,

## Search Usage [/v7/analytics/api/v1/search]

These endpoints return information related to the specific event.
You can enrich these events with specific data about the asset or the user by making use of the [Assets API endpoints](#reference/assets) or the [Users API endpoints](#reference/users).
### Search Executions [GET /v7/analytics/api/v1/search/executions{?limit,cursor,fromDateTime,toDateTime}]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + limit: `100` (number, optional) - The maximum number of analytics events to retrieve. Allowed values are between 1 and 10000.
        + Default: `1000`
    + cursor: `MTAwMA` (string, optional) - Cursor mark returned in the response headers to be used for pagination purposes.
        + Default: `MA`
    + fromDateTime: `2022-01-01T01:00` (string, optional) - Retrieve executions events ocurred after this date.<br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.
    + toDateTime: `2022-06-01T01:00` (string, optional) - Set a date range together with the "fromDateTime" parameter. <br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.

+ Response 200 (application/json)

    + Headers

            Next-Cursor: The next cursor value to send if you want to continue with your paginated request. E.g: MTAwMA
            Next-Url: The next url path to query if you want to continue with your paginated request. E.g: /api/v1/search/execute?limit=1000&cursor=MTAwMA

    + Attributes
        + eventId (string) -  Id of the event
        + eventType (string) - Type of event
        + dateTime (string) - Date and time when the event occurred
        + userId (string) - Id of the user that generated the event
        + terms (array) - Keywords added through the search bar
        + filters (array) - Filters added through the filter bar
        + operator (string) - Used search operator (OR | AND)
        + sortOrder (object) - Field and order of how results are ordered by (ASC | DESC)
        + results (object) - Number of results retrieved by type (Right now only assets)

    + Body

            [
                {
                    "eventId" : "1408aec2-3114-43dd-be20-ffb1246a5231",
                    "eventType" : "SearchExecuted",
                    "dateTime" : "2021-11-15T10:07:57.781+00:00",
                    "userId" : "1A84D758-2B3A-141F-8F07D71AA1F223BD",
                    "terms" : [
                            "digital"
                    ],
                    "filters": [
                        {
                            "field": "language",
                            "value": "english"
                        }
                    ],
                    "operator": "OR",
                    "sortOrder": {
                            "field": "datePublished",
                            "order": "desc"
                    },
                    "results": {
                            "assets": 48,
                    }
                },
                {
                    "eventId" : "5908aec2-3114-43dd-be20-ffb1246a5231",
                    "eventType" : "SearchExecuted",
                    "dateTime" : "2021-11-15T10:07:57.781+00:00",
                    "userId" : "1A84D758-2B3A-141F-8F07D71AA1F223BD",
                    "terms" : [
                            "template"
                    ],
                    "filters": [
                        {
                            "field": "language",
                            "value": "spanish"
                        }
                    ],
                    "operator": "OR",
                    "sortOrder": {
                            "field": "datePublished",
                            "order": "asc"
                    },
                    "results": {
                            "assets": 23,
                    }
                }
            ]


## User Usage [/v7/analytics/api/v1/user]

These endpoints return information related to the specific event.
You can enrich these events with specific data about the asset or the user by making use of the [Assets API endpoints](#reference/assets) or the [Users API endpoints](#reference/users).
### User Login [GET /v7/analytics/api/v1/user/login{?limit,cursor,fromDateTime,toDateTime}]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + limit: `100` (number, optional) - The maximum number of analytics events to retrieve. Allowed values are between 1 and 10000.
        + Default: `1000`
    + cursor: `MTAwMA` (string, optional) - Cursor mark returned in the response headers to be used for pagination purposes.
        + Default: `MA`
    + fromDateTime: `2022-01-01T01:00` (string, optional) - Retrieve login events ocurred after this date.<br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.
    + toDateTime: `2022-06-01T01:00` (string, optional) - Set a date range together with the "fromDateTime" parameter. <br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.

+ Response 200 (application/json)

    + Headers

            Next-Cursor: The next cursor value to send if you want to continue with your paginated request. E.g: MTAwMA
            Next-Url: The next url path to query if you want to continue with your paginated request. E.g: /api/v1/user/login?limit=1000&cursor=MTAwMA

    + Body

            [
                {
                  "id" : "62de6d714e29485a81824fe3",
                  "eventType" : "user.login",
                  "userId" : "1A84D758-2B3A-141F-8F07D71AA1F223BD",
                  "dateTime" : "2021-11-15T10:07:57.781+00:00"
                },
                {
                  "id" : "62de6d714e29485a81824fe4",
                  "eventType" : "user.login",
                  "userId" : "1A84D758-2B3A-141F-8F07D71AA1F223BD",
                  "dateTime" : "2021-11-15T10:08:18.752+00:00"
                }
            ]

### User Login CSV [GET /v7/analytics/api/v1/user/login.csv{?limit,cursor,fromDateTime,toDateTime}]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + limit: `100` (number, optional) - The maximum number of analytics events to retrieve. Allowed values are between 1 and 10000.
        + Default: `1000`
    + cursor: `MTAwMA` (string, optional) - Cursor mark returned in the response headers to be used for pagination purposes.
        + Default: `MA`
    + fromDateTime: `2022-01-01T01:00` (string, optional) - Retrieve login events ocurred after this date.<br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.
    + toDateTime: `2022-06-01T01:00` (string, optional) - Set a date range together with the "fromDateTime" parameter. <br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.

+ Response 200 (text/csv;charset=UTF-8)

    + Headers

            Next-Cursor: The next cursor value to send if you want to continue with your paginated request. E.g: MTAwMA
            Next-Url: The next url path to query if you want to continue with your paginated request. E.g: /api/v1/user/login.csv?limit=1000&cursor=MTAwMA

    + Body

            id,eventType,userId,dateTime
            62de6d714e29485a81824fe3,user.login,"1A84D758-2B3A-141F-8F07D71AA1F223BD",1655823377864
            62de6d714e29485a81824fe4,user.login,"1A84D758-2B3A-141F-8F07D71AA1F223BD",1655996103781

### User Activity [GET /v7/analytics/api/v1/user/{userId}{?limit,cursor,fromDateTime,toDateTime}]

This endpoint will allow you to retrieve all the events triggered by a given user. It uses version 1 Asset Views and Asset Downloads, so number can differ from new version 2 events.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + userId: `00000000-0000-0000-0000000000000000` (string, required) - User id.
    + limit: `100` (number, optional) - The maximum number of analytics events to retrieve. Allowed values are between 1 and 10000.
        + Default: `1000`
    + cursor: `MTAwMDow` (string, optional) - Cursor mark returned in the response headers to be used for pagination purposes.
        + Default: `MDow`
    + fromDateTime: `2022-01-01T01:00` (string, optional) - Retrieve events triggered by a user ocurred after this date.<br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.
    + toDateTime: `2022-06-01T01:00` (string, optional) - Set a date range together with the "fromDateTime" parameter. <br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.

+ Response 200 (application/json)

    + Headers

            Next-Cursor: The next cursor value to send if you want to continue with your paginated request. E.g: MTAwMDow
            Next-Url: The next url path to query if you want to continue with your paginated request. E.g: /api/v1/user/1A84D758-2B3A-141F-8F07D71AA1F223BD?limit=1000&cursor=MTAwMDow

    + Body

            [
                {
                  "id" : "62de6d714e29485a81824fe3",
                  "eventType" : "asset.download",
                  "userId" : "1A84D758-2B3A-141F-8F07D71AA1F223BD",
                  "dateTime" : "2021-11-15T10:07:57.781+00:00",
                  "assetId" : "CA510292-E39E-4B28-AB6444CDD2B1C5C0",
                  "assetType" : "image",
                  "assetName" : "Product Insights",
                  "assetAudit" : "ACCEPTED",
                  "fileName" : "CA510292-E39E-4B28-AB6444CDD2B1C5C___Product Insights",
                  "mediaItemId": "69293464-7721-4062-9E05EFAF23FE70E7",
                  "mediaItemType;": "original"
                }, {
                  "id" : "62de6d714e29485a81824fe4",
                  "eventType" : "asset.view",
                  "userId" : "1A84D758-2B3A-141F-8F07D71AA1F223BD",
                  "dateTime" : "2021-11-15T10:08:18.752+00:00",
                  "assetId" : "C58ED8C6-6B09-4CD6-B71C32C6715834F1",
                  "assetType" : "image",
                  "assetName" : "Reporting Schedule Nov 2022",
                  "assetAudit" : "ACCEPTED",
                  "fileName" : "C58ED8C6-6B09-4CD6-B71C32C6715834F1___Reporting Schedule Nov 2022"
                }
            ]

### User Activity CSV [GET /v7/analytics/api/v1/user/{userId}.csv{?limit,cursor,fromDateTime,toDateTime}]

This endpoint will allow you to retrieve all the events triggered by a given user. It uses version 1 Asset Views and Asset Downloads, so number can differ from new version 2 events.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + userId: `00000000-0000-0000-0000000000000000` (string, required) - User id.
    + limit: `100` (number, optional) - The maximum number of analytics events to retrieve. Allowed values are between 1 and 10000.
        + Default: `1000`
    + cursor: `MTAwMDow` (string, optional) - Cursor mark returned in the response headers to be used for pagination purposes.
        + Default: `MDow`
    + fromDateTime: `2022-01-01T01:00` (string, optional) - Retrieve events triggered by a user ocurred after this date.<br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.
    + toDateTime: `2022-06-01T01:00` (string, optional) - Set a date range together with the "fromDateTime" parameter. <br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.

+ Response 200 (text/csv;charset=UTF-8)

    + Headers

            Next-Cursor: The next cursor value to send if you want to continue with your paginated request. E.g: MTAwMDow
            Next-Url: The next url path to query if you want to continue with your paginated request. E.g: /api/v1/user/1A84D758-2B3A-141F-8F07D71AA1F223BD.csv?limit=1000&cursor=MTAwMDow

    + Body

            id,eventType,userId,dateTime,assetId,assetType,assetName,assetAudit,fileName,mediaItemId,mediaItemType;
            62de6d714e29485a81824fe3,asset.download,"1A84D758-2B3A-141F-8F07D71AA1F223BD",1655823377864,"CA510292-E39E-4B28-AB6444CDD2B1C5C0",image,Product Insights,ACCEPTED,CA510292-E39E-4B28-AB6444CDD2B1C5C___Product Insights, "69293464-7721-4062-9E05EFAF23FE70E7",original
            62de6d714e29485a81824fe4,asset.view,1A84D758-2B3A-141F-8F07D71AA1F223BD,1655996103781,C58ED8C6-6B09-4CD6-B71C32C6715834F1,image,Reporting Schedule Nov 2022,ACCEPTED,C58ED8C6-6B09-4CD6-B71C32C6715834F1___Reporting Schedule Nov 2022",,

## Collection Usage V2 [/v7/analytics/api/v2/collection]

These endpoints return information related to the specific event.
You can enrich these events with specific data about the collection or the user by making use of the [Collections API endpoints](#reference/collections) or the [Users API endpoints](#reference/users).

### Collection Views [GET /v7/analytics/api/v2/collection/views{?limit,cursor,fromDateTime,toDateTime}]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + limit: `100` (number, optional) - The maximum number of analytics events to retrieve. Allowed values are between 1 and 10000.
        + Default: `1000`
    + cursor: `MTAwMA` (string, optional) - Cursor mark returned in the response headers to be used for pagination purposes.
        + Default: `MA`
    + fromDateTime: `2022-01-01T01:00` (string, optional) - Retrieve view events ocurred after this date.<br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.
    + toDateTime: `2022-06-01T01:00` (string, optional) - Set a date range together with the "fromDateTime" parameter. <br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.

+ Response 200 (application/json)

    + Headers

            Next-Cursor: The next cursor value to send if you want to continue with your paginated request. E.g: MTAwMA
            Next-Url: The next url path to query if you want to continue with your paginated request. E.g: /api/v1/collection/view?limit=1000&cursor=MTAwMA

    + Attributes
        + eventId (string) -  Id of the event
        + collectionId (string) - Id of the collection
        + eventType (string) - Type of event
        + dateTime (string) - Date and time when the event occurred
        + userId (string) - Id of the user that generated the event (Empty when there is no logged user)
        + isOwner (boolean) - States if the user that generated the event is the owner of the collection
        + viewOrigin (string) - Where the view originates from (internal | public | embed | guidelines | styleguide | shared)
        + userAgent (string) - User-Agent of the user generating the event
        + isBynderSupport (boolean) - States if the user that generated the event is a Bynder Support user

    + Body

            [
                {
                  "eventId" : "ad3c8d01-4a2f-461c-b17d-2ecc51723028",
                  "collectionId" : "CA510292-E39E-4B28-AB6444CDD2B1C5C0",
                  "eventType" : "CollectionViewed",
                  "dateTime" : "2021-11-15T10:07:57.781+00:00",
                  "userId" : "1A84D758-2B3A-141F-8F07D71AA1F223BD",
                  "isOwner" : false,
                  "viewOrigin" : "internal",
                  "userAgent" : "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36",
                  "isBynderSupport" : false
                }, {
                  "eventId" : "ad3c8d01-4a2f-461c-b17d-2ecc51723028",
                  "collectionId" : "CA510292-E39E-4B28-AB6444CDD2B1C5C0",
                  "eventType" : "CollectionViewed",
                  "dateTime" : "2021-11-15T10:07:57.781+00:00",
                  "userId" : "",
                  "isOwner" : false,
                  "viewOrigin" : "embed",
                  "userAgent" : "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36",
                  "isBynderSupport" : false
                }

            ]

## Collection Usage V1 [/v7/analytics/api/v1/collection]

**Warning**: The V1 `collection` endpoints will  be deprecated on 2025 April, 14th. Please use the [Collection Views V2](#reference/analytics/collection-views-v2) endpoint instead.

These endpoints return information related to the specific event.
You can enrich these events with specific data about the collection or the user by making use of the [Collections API endpoints](#reference/collections) or the [Users API endpoints](#reference/users).
### Collection Views [GET /v7/analytics/api/v1/collection/views{?limit,cursor,fromDateTime,toDateTime}]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + limit: `100` (number, optional) - The maximum number of analytics events to retrieve. Allowed values are between 1 and 10000.
        + Default: `1000`
    + cursor: `MTAwMA` (string, optional) - Cursor mark returned in the response headers to be used for pagination purposes.
        + Default: `MA`
    + fromDateTime: `2022-01-01T01:00` (string, optional) - Retrieve view events ocurred after this date.<br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.
    + toDateTime: `2022-06-01T01:00` (string, optional) - Set a date range together with the "fromDateTime" parameter. <br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.

+ Response 200 (application/json)

    + Headers

            Next-Cursor: The next cursor value to send if you want to continue with your paginated request. E.g: MTAwMA
            Next-Url: The next url path to query if you want to continue with your paginated request. E.g: /api/v1/collection/view?limit=1000&cursor=MTAwMA

    + Attributes
        + eventId (string) -  Id of the event
        + collectionId (string) - Id of the collection
        + eventType (string) - Type of event
        + dateTime (string) - Date and time when the event occurred
        + userId (string) - Id of the user that generated the event (Empty when there is no logged user)
        + isOwner (boolean) - States if the user that generated the event is the owner of the collection
        + viewOrigin (string) - Where the view originates from (internal | public | embed | guidelines | styleguide | shared)
        + ipAddress (string) - IP Address of the user generating the event
        + userAgent (string) - User-Agent of the user generating the event
        + isBynderSupport (boolean) - States if the user that generated the event is a Bynder Support user

    + Body

            [
                {
                  "eventId" : "ad3c8d01-4a2f-461c-b17d-2ecc51723028",
                  "collectionId" : "CA510292-E39E-4B28-AB6444CDD2B1C5C0",
                  "eventType" : "CollectionViewed",
                  "dateTime" : "2021-11-15T10:07:57.781+00:00",
                  "userId" : "1A84D758-2B3A-141F-8F07D71AA1F223BD",
                  "isOwner" : false,
                  "viewOrigin" : "internal",
                  "ipAddress" : "192.158.1.38",
                  "userAgent" : "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36",
                  "isBynderSupport" : false
                }, {
                  "eventId" : "ad3c8d01-4a2f-461c-b17d-2ecc51723028",
                  "collectionId" : "CA510292-E39E-4B28-AB6444CDD2B1C5C0",
                  "eventType" : "CollectionViewed",
                  "dateTime" : "2021-11-15T10:07:57.781+00:00",
                  "userId" : "",
                  "isOwner" : false,
                  "viewOrigin" : "embed",
                  "ipAddress" : "192.158.1.38",
                  "userAgent" : "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36",
                  "isBynderSupport" : false
                }

            ]

### Collection Views CSV [GET /v7/analytics/api/v1/collection/views.csv{?limit,cursor,fromDateTime,toDateTime}]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + limit: `100` (number, optional) - The maximum number of analytics events to retrieve. Allowed values are between 1 and 10000.
        + Default: `1000`
    + cursor: `MTAwMA` (string, optional) - Cursor mark returned in the response headers to be used for pagination purposes.
        + Default: `MA`
    + fromDateTime: `2022-01-01T01:00` (string, optional) - Retrieve view events ocurred after this date.<br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.
    + toDateTime: `2022-06-01T01:00` (string, optional) - Set a date range together with the "fromDateTime" parameter. <br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.

+ Response 200 (text/csv;charset=UTF-8)

    + Headers

            Next-Cursor: The next cursor value to send if you want to continue with your paginated request. E.g: MTAwMA
            Next-Url: The next url path to query if you want to continue with your paginated request. E.g: /api/v1/collection/view.csv?limit=1000&cursor=MTAwMA

    + Attributes
        + eventId (string) -  Id of the event
        + collectionId (string) - Id of the collection
        + eventType (string) - Type of event
        + dateTime (string) - Date and time when the event occurred
        + userId (string) - Id of the user that generated the event (Empty when there is no logged user)
        + isOwner (boolean) - States if the user that generated the event is the owner of the collection
        + viewOrigin (string) - Where the view originates from (internal | public | embed | guidelines | styleguide | shared)
        + ipAddress (string) - IP Address of the user generating the event
        + userAgent (string) - User-Agent of the user generating the event
        + isBynderSupport (boolean) - States if the user that generated the event is a Bynder Support user

    + Body

            eventId,collectionId,eventType,dateTime,userId,isOwner,viewOrigin,ipAddress,userAgent,isBynderSupport
            "ad3c8d01-4a2f-461c-b17d-2ecc51723028", "CA510292-E39E-4B28-AB6444CDD2B1C5C0", CollectionViewed, 2021-11-15T10:07:57.781+00:00, 1A84D758-2B3A-141F-8F07D71AA1F223BD, false, internal, 192.158.1.38, "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36", false
            "ad3c8d01-4a2f-461c-b17d-2ecc51723028", "CA510292-E39E-4B28-AB6444CDD2B1C5C0", CollectionViewed, 2021-11-15T10:07:57.781+00:00,, false, embed, 192.158.1.38, "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36", false

## Reporting [/v7/analytics/api/v1/report]

These endpoints provide reporting capabilities for assets of the DAM, making it easier to build your own customised reports.

### Asset Reports [GET /v7/analytics/api/v1/report/asset{?limit,cursor,fromDateCreated,toDateCreated,fromDateModified,toDateModified}]

This endpoint allows you to retrieve a human readable report of any of the assets in the DAM. The report will include all the metadata of the asset.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + limit: `100` (number, optional) - The maximum number of asset reports to retrieve. Allowed values are between 1 and 10000.
        + Default: `1000`
    + cursor: `MTAwMA` (string, optional) - Cursor mark returned in the response headers to be used for pagination purposes.
        + Default: `MA`
    + fromDateCreated: `2022-01-01T01:00` (string, optional) - Retrieve reports of assets created after this date.<br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.
    + toDateCreated: `2022-06-01T01:00` (string, optional) - Set a date range together with the "fromDateCreated" parameter. <br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.
    + fromDateModified: `2022-01-01T01:00` (string, optional) - Retrieve reports of assets modified after this date.<br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.
    + toDateModified: `2022-06-01T01:00` (string, optional) - Set a date range together with the "fromDateModified" parameter. <br/> ISO8601 format: yyyy-mm-ddThh:mm[:ssZ] with optional seconds.

+ Response 200 (text/csv;charset=UTF-8)

    + Headers

            Next-Cursor: The next cursor value to send if you want to continue with your paginated request. E.g: MTAwMA
            Next-Url: The next url path to query if you want to continue with your paginated request. E.g: /api/v1/report/asset?limit=1000&cursor=MTAwMA

    + Body

            [
                {
                    "assetId": "3DF53D46-4E72-47A0-A42ECC22CDE211D5",
                    "name": "Asset 1",
                    "description": "Asset Description",
                    "isArchived": false,
                    "type": "image",
                    "audit": "ACCEPTED",
                    "copyright": "",
                    "isLimited": false,
                    "datePublished": "2016-12-29T10:39:52.000+00:00",
                    "isRemoved": true,
                    "dateRemoved": "2019-01-04T13:19:47.000+00:00",
                    "idHash": "6bb400d042cfe865",
                    "phash": "56033317620",
                    "userCreated": "00000000-0000-0000-0000000000000000",
                    "dateCreated": "2018-12-21T13:11:46.000+00:00",
                    "userModified": "00000000-0000-0000-0000000000000000",
                    "dateModified": "2019-01-04T13:19:47.000+00:00",
                    "isWatermarked": false,
                    "isPublic": false
                },
                {
                    "assetId": "CD729A10-9101-47C7-9D14FA2E14CF28D9",
                    "name": "Asset 2",
                    "description": "Asset 2 description",
                    "isArchived": false,
                    "type": "image",
                    "audit": "ACCEPTED",
                    "copyright": "",
                    "isLimited": false,
                    "datePublished": "2019-03-31T23:55:21.000+00:00",
                    "isRemoved": false,
                    "idHash": "792e23855f02cdcb",
                    "phash": "56033317620",
                    "userCreated": "4BE80C1E-D8FF-4104-8CF774F06B1E60CE",
                    "dateCreated": "2019-03-31T23:59:40.000+00:00",
                    "userModified": "00000000-0000-0000-0000000000000000",
                    "dateModified": "2020-12-04T21:18:27.000+00:00",
                    "isWatermarked": false,
                    "isPublic": false,
                    "metaproperties": {
                        "metaproperty_1": "option3",
                        "metaproperty_2": "option2, option1",
                        "metaproperty_3": "",
                    }
                }
            ]

### Specific Asset Report [GET /v7/analytics/api/v1/report/asset/{assetId}]

This endpoint allows you to retrieve a human readable report for a specific asset in the DAM. The report will include all the metadata of the asset.

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Response 200 (text/csv;charset=UTF-8)

    + Body

            {
                "assetId": "CD729A10-9101-47C7-9D14FA2E14CF28D9",
                "name": "Asset 2",
                "description": "Asset 2 description",
                "isArchived": false,
                "type": "image",
                "audit": "ACCEPTED",
                "copyright": "",
                "isLimited": false,
                "datePublished": "2019-03-31T23:55:21.000+00:00",
                "isRemoved": false,
                "idHash": "792e23855f02cdcb",
                "phash": "56033317620",
                "userCreated": "4BE80C1E-D8FF-4104-8CF774F06B1E60CE",
                "dateCreated": "2019-03-31T23:59:40.000+00:00",
                "userModified": "00000000-0000-0000-0000000000000000",
                "dateModified": "2020-12-04T21:18:27.000+00:00",
                "isWatermarked": false,
                "isPublic": false,
                "metaproperties": {
                    "metaproperty_1": "option3",
                    "metaproperty_2": "option2, option1",
                    "metaproperty_3": "",
                }
            }

## Historical Data [/v7/analytics/api/v1/historical]

This endpoint provides historical Analytics data beyond the 12 month retention period that applies to the Analytics API endpoints.

**Note:** This data isn't available by default. Please, contact your CSM if you require access to it.

### Historical Data CSV [GET /v7/analytics/api/v1/historical/{year}.csv]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

    + Parameters
        + year: `2022` (string, required) - Year.

+ Response 200 (text/csv;charset=UTF-8)

    + Body
            eventType,dateTime,userId,assetId,assetName,assetType,assetAudit,fileName,mediaItemId,mediaItemType,eventId,terms,filters,operator,sortOrder,results
            asset.download,2023-03-25T07:26:09.739Z,1A84D758-2B3A-141F-8F07D71AA1F223BD,CA510292-E39E-4B28-AB6444CDD2B1C5C0,Product Insights,image,ACCEPTED,CA510292-E39E-4B28-AB6444CDD2B1C5C___Product Insights,"9E1790DB-43E1-4AD7-9C50745FD2D754A7","original","","","","","","",""
            asset.view,2023-03-25T07:26:09.739Z,1A84D758-2B3A-141F-8F07D71AA1F223BD,CA510292-E39E-4B28-AB6444CDD2B1C5C0,Product Insights,image,ACCEPTED,CA510292-E39E-4B28-AB6444CDD2B1C5C___Product Insights,"","","","","","","","",""
            user.login,2023-03-22T12:26:23.862Z,1A84D758-2B3A-141F-8F07D71AA1F223BD,"","","","","","","","","","","","","",""
            SearchExecuted,2023-02-23T11:03:30.971Z,1A84D758-2B3A-141F-8F07D71AA1F223BD,"","","","","","","","fcac18fa-6c72-4f95-a434-5a58f4701f00",["winter"],[{"field": "language","value": "english"}],"OR","[{"field": "datePublished","order": "desc"}]",{"assets": 23}

# Group Antivirus
**Warning:** Requires the **Audit quarantined assets** security role.

## Antivirus operations

### Retrieve a list of quarantined assets [GET /v7/quarantine/v1/assets]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Response 200 (application/json)

    + Body

            {
                "totalCount": 1,
                "assets": [
                    {
                        "id": "a69f3104-0107-48af-a522-b437cd700b34",
                        "accountId": "9c06c1e3-f0cb-427a-88f0-a545c475047f",
                        "assetId": "5c554910-11f4-49a3-b7bf-04c21c99af05",
                        "assetName": "example-asset-name",
                        "requesterId": "0b403671-8047-4fb9-9c59-ab4273973fb5",
                        "scanStatus": "SKIPPED", // ["PENDING", "CLEARED", "INFECTED", "SKIPPED"]
                        "dateAdded": "2024-06-28 10:42:02",
                        "dateModified": "2024-06-28 10:42:11",
                        "uploadEventType": "LEGACY",
                        "fileType": "None",
                        "fileSize": 0,
                        "scanFailureReason": "client_error",
                        "reviewStatus": null, // ["APPROVED", "REJECTED"]
                        "reviewedById": null,
                        "isRemoved": false,
                        "isSafe": false
                    }
                ]
            }

+ Response 404 (application/json)

    + Body

        Asset not found

### Retrieve a quarantined asset by id [GET /v7/quarantine/v1/assets/{asset_id}]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Parameters
    + asset_id: `00000000-0000-0000-0000-000000000000` (string, required) - The id of an quarantined asset.

+ Response 200 (application/json)

    + Body

            {
                "id": "a69f3104-0107-48af-a522-b437cd700b34",
                "accountId": "9c06c1e3-f0cb-427a-88f0-a545c475047f",
                "assetId": "5c554910-11f4-49a3-b7bf-04c21c99af05",
                "assetName": "example-asset-name",
                "requesterId": "0b403671-8047-4fb9-9c59-ab4273973fb5",
                "scanStatus": "SKIPPED", // ["PENDING", "CLEARED", "INFECTED", "SKIPPED"]
                "dateAdded": "2024-06-28 10:42:02",
                "dateModified": "2024-06-28 10:42:11",
                "uploadEventType": "LEGACY",
                "fileType": "None",
                "fileSize": 0,
                "scanFailureReason": "client_error",
                "reviewStatus": null, // ["APPROVED", "REJECTED"]
                "reviewedById": null,
                "isRemoved": false,
                "isSafe": false
            }

+ Response 404 (application/json)

    + Body

        Asset not found

### Update review status by id [PUT /v7/quarantine/v1/assets/{asset_id}]

+ Request (application/json)

    + Headers
            Authorization: OAuth 2.0 Bearer access token.

    + Attributes
        + data: (required, object)
            + review_status (string, required) - Review status to set for the assets. Possible values: "APPROVED", "DENIED".

    + Body

            {
                "data": {
                    "review_status": "DENIED"
                }
            }

+ Parameters
    + asset_id: `00000000-0000-0000-0000-000000000000` (string, required) - The id of an quarantined asset.

+ Response 200 (application/json)
+ Response 400 (application/json)
+ Response 403 (application/json)
+ Response 404 (application/json)

    + Body

        Asset not found

### Update review status by list of asset Ids [POST /v7/quarantine/v1/antivirus-audit]

+ Request (application/json)

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

    + Attributes
        + data: (required, object)
            + antivirus_asset_ids (array[string], required) - List of IDs of the quarantined assets. Each ID must be a valid UUID.
            + review_status (string, required) - Review status to set for the assets. Possible values: "APPROVED", "DENIED".

    + Body

            {
                "data": {
                    "antivirus_asset_ids": [
                        "ac93e443-e4d5-442f-966b-b6f24c025c71"
                    ],
                    "review_status": "DENIED"
                }
            }

+ Response 200 (application/json)
+ Response 400 (application/json)
+ Response 403 (application/json)

# Group Webhooks

## Retrieve Webhooks configurations [/v7/webhooks/public/api/subscriptions]

**Warning:** Requires the **View Webhooks configurations** or **Manage Webhooks configurations** security role.

### Get Webhook configurations [GET /v7/webhooks/public/api/subscriptions]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Response 200 (application/json)

    + Body

        {
            "antivirusEnabled": true,
            "configs": [
                {
                    "configId": "cf2493be-c808-41da-bcc2-cfb31f38b457",
                    "confirmed": 1,
                    "endpoint": "example@example.com",
                    "events": [
                        "asset_bank.media.archived",
                        "asset_bank.media.pre_archived",
                        "asset_bank.media.deleted",
                        "asset_bank.media.updated",
                        "asset_bank.media.meta_updated",
                        "asset_bank.media.create",
                        "workflow.job.create",
                        "antivirus.scan.failed"
                    ],
                    "is_legacy": false,
                    "migratedSubscriptions": "[]",
                    "name": "example-webhook-name",
                    "preArchivedNotificationDays": 1,
                    "protocol": "email",
                    "status": 1
                }
            ],
            "message": "",
            "success": true
        }

+ Response 400 (application/json)

    + Body

        {
            "message": "Error while getting subscription for portal id {portal ID}: Error",
            "success": false
        }

## Webhooks configuration operations [/v7/webhooks/public/api/subscriptions/]

**Warning:** Requires the **Manage Webhooks configurations** security role.

### Create a Webhook configuration [POST /v7/webhooks/public/api/subscriptions]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

    + Attributes
        + name (string, required) - Display name for the Webhooks configuration.
        + endpoint (string, required) - Endpoint for the Webhooks subscription.
        + protocol (string, required) - Protocol for the Webhooks subscription. Possible values: "http", "https", "email", "email-json", "sqs".
        + events (array[string], required) - List of events to subscribe to.
            + Members
                + `asset_bank.media.archived`
                + `asset_bank.media.pre_archived` - Requires valid preArchivedNotificationDays parameter
                + `asset_bank.media.deleted`
                + `asset_bank.media.updated`
                + `asset_bank.media.meta_updated`
                + `asset_bank.media.create`
                + `workflow.job.create`
                + `antivirus.scan.failed` - Requires Antivirus app access
        + preArchivedNotificationDays (number, optional) - Required to have a value of 1 or greater if the "asset_bank.media.pre_archived" event is subscribed to

    + Body

            {
                "name": "example-webhook-name",
                "protocol": "email",
                "endpoint": "example@example.com",
                "events": [
                    "asset_bank.media.archived",
                    "asset_bank.media.pre_archived",
                    "asset_bank.media.deleted",
                    "asset_bank.media.updated",
                    "asset_bank.media.meta_updated",
                    "asset_bank.media.create",
                    "workflow.job.create",
                    "antivirus.scan.failed"
                ],
                "preArchivedNotificationDays": 1
            }

+ Response 200 (application/json)

    + Body

            {
                "message": "Subscription Config ID cf2493be-c808-41da-bcc2-cfb31f38b457 created",
                "record": {
                    "configId": "cf2493be-c808-41da-bcc2-cfb31f38b457",
                    "endpoint": "example@example.com",
                    "events": [
                        "asset_bank.media.archived",
                        "asset_bank.media.pre_archived",
                        "asset_bank.media.deleted",
                        "asset_bank.media.updated",
                        "asset_bank.media.meta_updated",
                        "asset_bank.media.create",
                        "workflow.job.create",
                        "antivirus.scan.failed"
                    ],
                    "is_legacy": false,
                    "migratedSubscriptions": "[]",
                    "name": "example-webhook-name",
                    "portalId": "62dddddd-eeee-ffff-aaaa-9f78fggggggg",
                    "preArchivedNotificationDays": 1,
                    "protocol": "email",
                    "subscriptionArn": "pendingconfirmation",
                    "topicArn": "arn:aws:sns:us-east-1:003565342056:62dddddd-eeee-ffff-aaaa-9f78fggggggg-example-webhook-name-cf2493be-c808-41da-bcc2-cfb31f38b457",
                    "userId": "DDDDDDE1-DDDD-DDDD-DDDDDD059F8AFFFF"
                },
                "success": true
            }

+ Response 400 (application/json)

    + Body

        {
            "message": "Failed to create subscription test-public-api-docs: INVALID_ARGUMENT: Combination of subscription name, protocol, and endpoint already exists",
            "success": false
        }

### Update a Webhook configuration [PUT /v7/webhooks/public/api/subscriptions/{id}]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

    + Attributes
        + events (array[string], required) - List of events to subscribe to.
            + Members
                + `asset_bank.media.archived`
                + `asset_bank.media.pre_archived` - Requires valid preArchivedNotificationDays parameter
                + `asset_bank.media.deleted`
                + `asset_bank.media.updated`
                + `asset_bank.media.meta_updated`
                + `asset_bank.media.create`
                + `workflow.job.create`
                + `antivirus.scan.failed` - Requires Antivirus app access
        + preArchivedNotificationDays (number, optional) - Required to have a value of 1 or greater if the "asset_bank.media.pre_archived" event is subscribed to

    + Body

        {
            "events": ["asset_bank.media.deleted","asset_bank.media.updated"],
            "preArchivedNotificationDays": 2
        }

+ Response 200 (application/json)

    + Body

        {
            "message": "Subscription Config ID e31294eb-2ba9-4998-8261-b49e617a2a91 updated",
            "record": {
                "configId": "e31294eb-2ba9-4998-8261-b49e617a2a91",
                "events": [
                    "asset_bank.media.deleted",
                    "asset_bank.media.updated"
                ],
                "portalId": "62dddddd-eeee-ffff-aaaa-9f78fggggggg",
                "preArchivedNotificationDays": 2,
                "userId": "DDDDDDE1-DDDD-DDDD-DDDDDD059F8AFFFF"
            },
            "success": true
        }

+ Response 400 (application/json)

    + Body

        {
            "message": "Failed to update subscription from config id e31294eb-2ba9-4998-8261-b49e617a2a91: INVALID_ARGUMENT: Invalid event on payload.",
            "success": false
        }


### Patch a Webhook configuration [PATCH /v7/webhooks/public/api/subscriptions/{id}]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

    + Attributes
        + name (string, optional) - Display name for the Webhooks configuration.
        + status (number, optional) - Possible values: 0, 1, or null. Setting to null will maintain the original value.

    + Body

        {
            "name": "example-webhook-name-patched",
            "status": 1
        }

+ Response 200 (application/json)

    + Body

        {
            "message": "Subscription Config ID e31294eb-2ba9-4998-8261-b49e617a2a91 updated, name updated to example-webhook-name-patched and status updated to 1",
            "success": true
        }

+ Response 400 (application/json)

    + Body

        {
            "message": "Failed to patch subscription from config id e31294eb-2ba9-4998-8261-b49e617a2a912: UNAVAILABLE: Subscription does not exist",
            "success": false
        }

### Delete a Webhook configuration [DELETE /v7/webhooks/public/api/subscriptions/{id}]

+ Request

    + Headers

            Authorization: OAuth 2.0 Bearer access token.

+ Response 204 (application/json)

+ Response 400 (application/json)

    + Body

        {
            "message": "Failed to delete subscription e31294eb-2ba9-4998-8261-b49e617a2a91: UNAVAILABLE: Failed to delete subscription AWS exception: None.get",
            "success": false
        }

